<?xml version="1.0"?>
<testsuite name="Chrome 47.0.2526 (Mac OS X 10.9.3)" package="" timestamp="2016-01-06T11:25:45" id="0" hostname="localhost" tests="5401" errors="0" failures="0" time="55.526">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36"/>
  </properties>
  <testcase name="should add the product preference" time="0.016" classname="Profiles and Settings Menu when the statementPreferences toggle is on"/>
  <testcase name="should only return the myprofile menu if statementPreferences is turned off" time="0.003" classname="Profiles and Settings Menu when the statementPreferences toggle is off"/>
  <testcase name="should add the product preference" time="0.002" classname="Profiles and Settings Menu securitySettings"/>
  <testcase name="should set the templateUrl based on the partial attribute" time="0.081" classname="accordion"/>
  <testcase name="should check if the current menu url is the same as the current location" time="0.04" classname="accordion"/>
  <testcase name="should change the arrow class when a menu item is clicked" time="0.033" classname="accordion"/>
  <testcase name="should set &quot;More Detail&quot; and &quot;Less Details&quot; when element is clicked" time="0.038" classname="accordion"/>
  <testcase name="should set isOpenTab to true when tab is open" time="0.048" classname="accordion"/>
  <testcase name="should open and close a tab when it is clicked" time="0.037" classname="accordion"/>
  <testcase name="should open a tab and close any other tab that was open" time="0.041" classname="accordion"/>
  <testcase name="should set the active tab to empty when there are no items" time="0.015" classname="accordion AccordionController"/>
  <testcase name="should set the active tab to selected tab if there items in the list" time="0.014" classname="accordion AccordionController"/>
  <testcase name="should set external binding if selected item is changed" time="0.026" classname="sbAccountDropdown model changed"/>
  <testcase name="should not be disabled when items are defined" time="0.016" classname="sbAccountDropdown disabled"/>
  <testcase name="should be disabled when items is undefined" time="0.012" classname="sbAccountDropdown disabled"/>
  <testcase name="should be disabled when no items are specified" time="0.012" classname="sbAccountDropdown disabled"/>
  <testcase name="should show balance by default" time="0.015" classname="sbAccountDropdown no-balance"/>
  <testcase name="should hide balance no-balance is true" time="0.016" classname="sbAccountDropdown no-balance"/>
  <testcase name="should list accounts as select options" time="0.052" classname="sbAccountDropdown"/>
  <testcase name="should select option if model already has a value" time="0.013" classname="sbAccountDropdown"/>
  <testcase name="should display available balance for the selected account" time="0.011" classname="sbAccountDropdown"/>
  <testcase name="should highlight the available balance as an error when appropriate" time="0.011" classname="sbAccountDropdown"/>
  <testcase name="should apply the autofocus attribute to the dropdown if desired" time="0.014" classname="sbAccountDropdown"/>
  <testcase name="should have a placeholder if specified" time="0.014" classname="sbAmount"/>
  <testcase name="should have a placeholder even if the specified placeholder is 0" time="0.009" classname="sbAmount"/>
  <testcase name="should default the placeholder to 0.00" time="0.008" classname="sbAmount"/>
  <testcase name="should copy attributes to input" time="0.008" classname="sbAmount"/>
  <testcase name="should not copy default attributes to input" time="0.009" classname="sbAmount"/>
  <testcase name="should add label" time="0.009" classname="sbAmount"/>
  <testcase name="should not add label" time="0.009" classname="sbAmount"/>
  <testcase name="should disable input" time="0.009" classname="sbAmount"/>
  <testcase name="should not disable input" time="0.011" classname="sbAmount"/>
  <testcase name="should invoke timeoutChange onChange" time="0.011" classname="sbAmount"/>
  <testcase name="should parse view as integer" time="0.006" classname="convertToInt"/>
  <testcase name="should parse view as integer" time="0.005" classname="convertToInt"/>
  <testcase name="should not parse invalid integer" time="0.004" classname="convertToInt"/>
  <testcase name="should have a global key when one is pushed" time="0.002" classname="parameters when a global parameter needs to be defined"/>
  <testcase name="should know how to get the second key when two variables have been pushed" time="0.002" classname="parameters when a global parameter needs to be defined"/>
  <testcase name="should know how to pop a variable off the parameters," time="0.002" classname="parameters when a global parameter needs to be defined"/>
  <testcase name="should know a variable can only be popped once" time="0.001" classname="parameters when a global parameter needs to be defined"/>
  <testcase name="should call window.history.back with default value 1 on click" time="0.003" classname="go-back directive"/>
  <testcase name="should call window.history.back with specified number of pages on click" time="0.003" classname="go-back directive"/>
  <testcase name="should call ng-click before navigating back" time="0.003" classname="go-back directive"/>
  <testcase name="should require an ng-model" time="0.02" classname="walkInBranches directive"/>
  <testcase name="should set placeholder on type ahead" time="0.012" classname="walkInBranches directive"/>
  <testcase name="should set type ahead items to list of branches from BankService" time="0.012" classname="walkInBranches directive when loading branches"/>
  <testcase name="should set selected item to customer&apos;s preferred branch if default-to-preferred-branch is true" time="0.013" classname="walkInBranches directive when loading branches"/>
  <testcase name="should not set selected item to customer&apos;s preferred branch if default-to-preferred-branch is false" time="0.01" classname="walkInBranches directive when loading branches"/>
  <testcase name="should not set selected item to customer&apos;s preferred branch if it isn&apos;t on the branch list" time="0.011" classname="walkInBranches directive when loading branches"/>
  <testcase name="should not set selected item to customer&apos;s preferred branch if it isn&apos;t defined" time="0.024" classname="walkInBranches directive when loading branches"/>
  <testcase name="should set defaultBranchSelected to true if preferred branch has been selected" time="0.011" classname="walkInBranches directive when loading branches"/>
  <testcase name="should set defaultBranchSelected to false if preferred branch has not been selected" time="0.009" classname="walkInBranches directive when loading branches"/>
  <testcase name="should change external scope value when type ahead selection changes" time="0.01" classname="walkInBranches directive model changes"/>
  <testcase name="should set external scope to code property when use-branchcode-value attribue is set to true" time="0.009" classname="walkInBranches directive model changes"/>
  <testcase name="should change type ahead selection value when external scope value changes" time="0.01" classname="walkInBranches directive model changes"/>
  <testcase name="should indicate input event is available" time="0.003" classname="Event fire on IE 10 standards compliant browsers"/>
  <testcase name="should indicate input event is NOT available" time="0.002" classname="Event fire on IE 10 IE10"/>
  <testcase name="should replace the custom tag" time="0.008" classname="Doughnut Chart Directive"/>
  <testcase name="should render a div" time="0.007" classname="Doughnut Chart Directive"/>
  <testcase name="should render a canvas" time="0.006" classname="Doughnut Chart Directive"/>
  <testcase name="should have isolated scope" time="0.008" classname="Doughnut Chart Directive"/>
  <testcase name="should set the data on the the directive&apos;s scope" time="0.008" classname="Doughnut Chart Directive with data, colours and options bound to it"/>
  <testcase name="should set the options on the the directive&apos;s scope" time="0.006" classname="Doughnut Chart Directive with data, colours and options bound to it"/>
  <testcase name="should set the colours on the the directive&apos;s scope" time="0.006" classname="Doughnut Chart Directive with data, colours and options bound to it"/>
  <testcase name="should re initialise the chart" time="0.006" classname="Doughnut Chart Directive when canvas is visible and of a valid size with changing data bound to it"/>
  <testcase name="should destroy the chart if a chart already exists" time="0.007" classname="Doughnut Chart Directive when canvas is visible and of a valid size with changing data bound to it"/>
  <testcase name="should redraw the chart" time="0.008" classname="Doughnut Chart Directive when canvas is visible and of a valid size when window is resized and chart is defined"/>
  <testcase name="should not try to redraw a chart" time="0.006" classname="Doughnut Chart Directive when canvas is visible and of a valid size when window is resized and chart is undefined"/>
  <testcase name="click should call the method passed" time="0.007" classname="Doughnut Chart Directive when canvas is visible and of a valid size segment click method when defined and chart returns a segment that was clicked on"/>
  <testcase name="click should not call the method passed" time="0.007" classname="Doughnut Chart Directive when canvas is visible and of a valid size segment click method when defined and chart returns no segments that was clicked on"/>
  <testcase name="click should any method" time="0.01" classname="Doughnut Chart Directive when canvas is visible and of a valid size segment click method when not defined"/>
  <testcase name="should not set the chart&apos;s customTooltips property to a boolean" time="0.009" classname="Doughnut Chart Directive when canvas is visible and of a valid size with custom tooltips set to true"/>
  <testcase name="should set custom tooltips to a function" time="0.008" classname="Doughnut Chart Directive when canvas is visible and of a valid size with custom tooltips set to true"/>
  <testcase name="should not create a chart" time="0.007" classname="Doughnut Chart Directive when canvas is not visible with changing data bound to it"/>
  <testcase name="should not create a chart" time="0.007" classname="Doughnut Chart Directive when canvas is not a valid size with changing data bound to it"/>
  <testcase name="should return the correct colours" time="0.005" classname="chart colours"/>
  <testcase name="should calculate the rgba colour string based on the red green and blue values provided" time="0.003" classname="chart colours colour method"/>
  <testcase name="should calculate the rgba colour string based on an ordered array of red, green and blue values provided" time="0.001" classname="chart colours colour method"/>
  <testcase name="should throw an error if exactly three values are not provided" time="0.002" classname="chart colours colour method invalid input"/>
  <testcase name="should throw an error if values provided are not numeric" time="0.002" classname="chart colours colour method invalid input"/>
  <testcase name="should throw an error if values provided are out of range" time="0.001" classname="chart colours colour method invalid input"/>
  <testcase name="should calculate the rgba colour string based on the red green and blue values provided" time="0.002" classname="chart colours highlight method"/>
  <testcase name="should calculate the rgba colour string based on an ordered array of red, green and blue values provided" time="0.001" classname="chart colours highlight method"/>
  <testcase name="should throw an error if exactly three values are not provided" time="0.002" classname="chart colours highlight method invalid input"/>
  <testcase name="should throw an error if values provided are not numeric" time="0.001" classname="chart colours highlight method invalid input"/>
  <testcase name="should throw an error if values provided are out of range" time="0.002" classname="chart colours highlight method invalid input"/>
  <testcase name="should return an object with colour value set to the result of the colour function and highlight value set to the result of the highlight function" time="0.002" classname="chart colours chart colour object method"/>
  <testcase name="should provide the global chart JS chart object" time="0.002" classname="Chart Service"/>
  <testcase name="should return an instance of a chart" time="0.018" classname="Chart Service create chart instance"/>
  <testcase name="return an object bound to the canvas passed to it" time="0.002" classname="Chart Service create chart instance"/>
  <testcase name="should merge properties in colour objects with properties in data objects" time="0.001" classname="Chart Service merge data and colours"/>
  <testcase name="should recycle colours when there are less colours than data items" time="0.001" classname="Chart Service merge data and colours"/>
  <testcase name="should ignore extra colours when there are more colours than data items" time="0.001" classname="Chart Service merge data and colours"/>
  <testcase name="should return the data when colours are not defined" time="0.001" classname="Chart Service merge data and colours"/>
  <testcase name="should return an empty array when data data not defined" time="0.005" classname="Chart Service merge data and colours"/>
  <testcase name="should set default properties on the client" time="0.002" classname="device dna"/>
  <testcase name="should set the device DNA on the cookie" time="0.003" classname="device dna"/>
  <testcase name="may have a start date" time="0.07" classname="Datepicker directive valid date range"/>
  <testcase name="may have an end date" time="0.067" classname="Datepicker directive valid date range"/>
  <testcase name="should not apply the invalid class to valid dates" time="0.055" classname="Datepicker directive valid date range view"/>
  <testcase name="should apply the invalid class to invalid dates" time="0.14" classname="Datepicker directive valid date range view"/>
  <testcase name="should not select invalid dates" time="0.146" classname="Datepicker directive valid date range view"/>
  <testcase name="should show the current month" time="0.101" classname="Datepicker directive valid date range view when latest date is in the same month"/>
  <testcase name="should show current month" time="0.135" classname="Datepicker directive valid date range view when latest date is invalid"/>
  <testcase name="should show the current month" time="0.105" classname="Datepicker directive valid date range view when latest date is later in the same year"/>
  <testcase name="should show the current year" time="0.105" classname="Datepicker directive valid date range view when latest date is some year in the future"/>
  <testcase name="should show the latest valid month" time="0.092" classname="Datepicker directive valid date range view when latest date is earlier in the same year"/>
  <testcase name="should show the latest valid year" time="0.097" classname="Datepicker directive valid date range view when latest date is some year in the past"/>
  <testcase name="should display 6 rows of dates" time="0.032" classname="Datepicker directive initialize"/>
  <testcase name="should set year to the current year" time="0.033" classname="Datepicker directive initialize"/>
  <testcase name="should set selectedMonth to the current" time="0.029" classname="Datepicker directive initialize"/>
  <testcase name="should populate dates with the dates of the selectedMonth" time="0.033" classname="Datepicker directive initialize"/>
  <testcase name="should populate days before the 1st of the selectedMonth with the dates of the previous month" time="0.029" classname="Datepicker directive initialize"/>
  <testcase name="should populate dates after the end of the selectedMonth with the dates of the next month" time="0.029" classname="Datepicker directive initialize"/>
  <testcase name="should set the date format" time="0.04" classname="Datepicker directive initialize"/>
  <testcase name="should increment the selected month" time="0.033" classname="Datepicker directive #nextMonth"/>
  <testcase name="should increment the selected year when the selected month is December" time="0.031" classname="Datepicker directive #nextMonth"/>
  <testcase name="should decrement the selectedMonth" time="0.031" classname="Datepicker directive #previousMonth"/>
  <testcase name="should decrement the selected year when the selected month is January" time="0.031" classname="Datepicker directive #previousMonth"/>
  <testcase name="should select year from dropdown" time="0.041" classname="Datepicker directive selectYear"/>
  <testcase name="should return the text value of the selected month" time="0.031" classname="Datepicker directive #month"/>
  <testcase name="should return the selected year" time="0.04" classname="Datepicker directive #year"/>
  <testcase name="should show the years to select from" time="0.044" classname="Datepicker directive available years"/>
  <testcase name="should add the year to select from on next year" time="0.051" classname="Datepicker directive available years"/>
  <testcase name="should add the year to select from on previous year" time="0.041" classname="Datepicker directive available years"/>
  <testcase name="should add the year to select from on next month" time="0.044" classname="Datepicker directive available years"/>
  <testcase name="should add the year to select from on previous month" time="0.04" classname="Datepicker directive available years"/>
  <testcase name="should return true if date is a Saturday" time="0.038" classname="Datepicker directive #isWeekend"/>
  <testcase name="should return true if date is a Sunday" time="0.029" classname="Datepicker directive #isWeekend"/>
  <testcase name="should return false if date is not a Saturday or Sunday" time="0.031" classname="Datepicker directive #isWeekend"/>
  <testcase name="should invalidate dates outside of the valid date range" time="0.032" classname="Datepicker directive #isValid"/>
  <testcase name="should validate dates inside of the valid date range" time="0.033" classname="Datepicker directive #isValid"/>
  <testcase name="should validate all dates when there is neither earliest or latest date" time="0.032" classname="Datepicker directive #isValid"/>
  <testcase name="should validate all dates after earliest date when there is only an earliest date" time="0.041" classname="Datepicker directive #isValid"/>
  <testcase name="should validate all dates before latest date when there is only an latest date" time="0.034" classname="Datepicker directive #isValid"/>
  <testcase name="should display the select month name" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should display the selected year" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should display the dates in the selected month" time="0.029" classname="Datepicker directive view"/>
  <testcase name="should display the dates in the previous month when next previous is clicked" time="0.062" classname="Datepicker directive view"/>
  <testcase name="should display the dates in the next month when next next is clicked" time="0.074" classname="Datepicker directive view"/>
  <testcase name="should select the date as the moment when a date is clicked" time="0.045" classname="Datepicker directive view"/>
  <testcase name="should select the date when a date is clicked" time="0.041" classname="Datepicker directive view"/>
  <testcase name="should select the date in a custom format when a date is clicked" time="0.037" classname="Datepicker directive view"/>
  <testcase name="should call onSelect function when a date is clicked" time="0.04" classname="Datepicker directive view"/>
  <testcase name="should update the input when a date is selected" time="0.045" classname="Datepicker directive view"/>
  <testcase name="should highlight the selected date" time="0.035" classname="Datepicker directive view"/>
  <testcase name="should apply weekend class to Saturdays" time="0.029" classname="Datepicker directive view"/>
  <testcase name="should apply weekend class to Sundays" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should have disabled input" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should not display the datepicker initially" time="0.035" classname="Datepicker directive view"/>
  <testcase name="should remove the click listener on destroy event" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should mark days that are not in the month selected with the different-month class" time="0.029" classname="Datepicker directive view"/>
  <testcase name="should not mark invalid days that are not in the month selected with the different-month class" time="0.072" classname="Datepicker directive view"/>
  <testcase name="should not mark selected date with the different-month class" time="0.05" classname="Datepicker directive view"/>
  <testcase name="should not apply weekend class to days that are not Saturday or Sunday" time="0.03" classname="Datepicker directive view"/>
  <testcase name="should display the date on a different format than the model" time="0.043" classname="Datepicker directive viewDefaultDateFormat"/>
  <testcase name="should hide the date picker when clicking outside" time="0.714" classname="Datepicker directive click"/>
  <testcase name="should leave the date picker when clicking inside" time="0.346" classname="Datepicker directive click"/>
  <testcase name="should hide the date picker when pressing tab key on input field" time="0.036" classname="Datepicker directive press key"/>
  <testcase name="should leave the date picker when pressing other key on input field" time="0.353" classname="Datepicker directive press key"/>
  <testcase name="should increment the selected year" time="0.033" classname="Datepicker directive skipping year #nextYear"/>
  <testcase name="should decrement the selected year" time="0.029" classname="Datepicker directive skipping year #previousYear"/>
  <testcase name="should send error to error service" time="0.003" classname="ErrorLogger"/>
  <testcase name="should be present" time="0.017" classname="filterBox input field"/>
  <testcase name="should have placeholder" time="0.011" classname="filterBox input field"/>
  <testcase name="should be present" time="0.007" classname="filterBox search icon"/>
  <testcase name="should be present" time="0.007" classname="filterBox close icon"/>
  <testcase name="should be shown only when a query is specified" time="0.007" classname="filterBox close icon"/>
  <testcase name="should reset the filter query to an empty string when clicked" time="0.007" classname="filterBox close icon"/>
  <testcase name="should create new custom filter by description" time="0.001" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:2QVEWMVU9" time="0.008" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:150" time="0.002" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:R 40" time="0.002" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:16 Jun" time="0.003" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:Monthly" time="0.002" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:null" time="0.001" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:" time="0.001" classname="Unit Test - Customized filter create"/>
  <testcase name="should find exact result with query:333" time="0.003" classname="Unit Test - Customized filter create"/>
  <testcase name="should add a dash every 4 digits" time="0.003" classname="filters voucherNumber"/>
  <testcase name="should capitalize first letter of every word when input is all lowercase (except special cases)" time="0.002" classname="filters capitalize"/>
  <testcase name="should lower other letters of every word when input is all uppercase" time="0.002" classname="filters capitalize"/>
  <testcase name="should return empty string when input is undefined" time="0.001" classname="filters capitalize"/>
  <testcase name="should change only the first letter of each word if to caps and leave all other characters in word alone." time="0.002" classname="filters capitalize with change only first char"/>
  <testcase name="should capitalize first letter of every word when input is all lowercase (except special cases)" time="0.002" classname="filters capitalizeCountry"/>
  <testcase name="should format from extended format" time="0.001" classname="filters dateFormat"/>
  <testcase name="should format from short format" time="0.001" classname="filters dateFormat"/>
  <testcase name="should format from short format with time" time="0.001" classname="filters dateFormat"/>
  <testcase name="should format from ISO" time="0.001" classname="filters dateFormat"/>
  <testcase name="should return empty if value is undefined" time="0.001" classname="filters dateFormat"/>
  <testcase name="should return empty if value is null" time="0.001" classname="filters dateFormat"/>
  <testcase name="should return empty if value is empty" time="0.001" classname="filters dateFormat"/>
  <testcase name="should return empty if value is a space" time="0.001" classname="filters dateFormat"/>
  <testcase name="should return empty if format is invalid" time="0.001" classname="filters dateFormat"/>
  <testcase name="should format from extended format" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should format from short format" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should format from short format with time" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should format from ISO" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should return empty if value is undefined" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should return empty if value is null" time="0.002" classname="filters monthYearDateFormat"/>
  <testcase name="should return empty if value is empty" time="0.001" classname="filters monthYearDateFormat"/>
  <testcase name="should return empty if value is a space" time="0.001" classname="filters monthYearDateFormat"/>
  <testcase name="should return empty if format is invalid" time="0.001" classname="filters monthYearDateFormat"/>
  <testcase name="should format from short format with time" time="0.002" classname="filters timeFormat"/>
  <testcase name="should format from ISO" time="0.001" classname="filters timeFormat"/>
  <testcase name="should return empty if value is undefined" time="0.002" classname="filters timeFormat"/>
  <testcase name="should return empty if value is null" time="0.001" classname="filters timeFormat"/>
  <testcase name="should return empty if value is empty" time="0.001" classname="filters timeFormat"/>
  <testcase name="should return empty if value is a space" time="0.001" classname="filters timeFormat"/>
  <testcase name="should return empty if format is invalid" time="0.001" classname="filters timeFormat"/>
  <testcase name="should format from short format with time" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should format from ISO" time="0.011" classname="filters dateTimeFormat"/>
  <testcase name="should return empty if value is undefined" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should return empty if value is null" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should return empty if value is empty" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should return empty if value is a space" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should return empty if format is invalid" time="0.001" classname="filters dateTimeFormat"/>
  <testcase name="should join all lines with commas" time="0.002" classname="filters addressLines"/>
  <testcase name="should ignore empty string and undefined" time="0.002" classname="filters addressLines"/>
  <testcase name="should return empty if address is undefined" time="0.001" classname="filters addressLines"/>
  <testcase name="should include years and months when both present" time="0.001" classname="filters yearMonth"/>
  <testcase name="should include only years when months is zero" time="0.001" classname="filters yearMonth"/>
  <testcase name="should include only months when years is zero" time="0.001" classname="filters yearMonth"/>
  <testcase name="should not pluralize 1 year" time="0.001" classname="filters yearMonth"/>
  <testcase name="should not pluralize 1 month" time="0.001" classname="filters yearMonth"/>
  <testcase name="should return empty string when input is undefined" time="0.001" classname="filters randAmountFilter"/>
  <testcase name="should return formatted zero if the input is zero" time="0.001" classname="filters randAmountFilter"/>
  <testcase name="should return formatted amount if the input is non zero" time="0.001" classname="filters randAmountFilter"/>
  <testcase name="should return formatted negative amounts" time="0.005" classname="filters randAmountFilter"/>
  <testcase name="should separate with space when number is greater than 1000" time="0.001" classname="filters randAmountFilter"/>
  <testcase name="should return empty string when input is undefined" time="0.002" classname="filters randAmountNoCentsFilter"/>
  <testcase name="should return formatted zero if the input is zero" time="0.002" classname="filters randAmountNoCentsFilter"/>
  <testcase name="should return formatted amount if the input is non zero" time="0.001" classname="filters randAmountNoCentsFilter"/>
  <testcase name="should return formatted negative amounts" time="0.002" classname="filters randAmountNoCentsFilter"/>
  <testcase name="should separate with space when number is greater than 1000" time="0.002" classname="filters randAmountNoCentsFilter"/>
  <testcase name="should return empty string when input is undefined" time="0.002" classname="filters absoluteRandAmount"/>
  <testcase name="should return formatted zero if the input is zero" time="0.001" classname="filters absoluteRandAmount"/>
  <testcase name="should return formatted amount if the input is non zero" time="0.001" classname="filters absoluteRandAmount"/>
  <testcase name="should return formatted absolute amounts" time="0.001" classname="filters absoluteRandAmount"/>
  <testcase name="should separate with space when number is greater than 1000 or less than -1000" time="0.002" classname="filters absoluteRandAmount"/>
  <testcase name="should return undefined when input is undefined" time="0.001" classname="filters monthNameFilter"/>
  <testcase name="should return original input when input is out of range" time="0.001" classname="filters monthNameFilter"/>
  <testcase name="should return the name of the month of the month number that was passed" time="0.001" classname="filters monthNameFilter"/>
  <testcase name="should return the name of the month of the date that was passed" time="0.002" classname="filters monthNameFilter"/>
  <testcase name="should return empty string when input is undefined" time="0.005" classname="filters amountFilter"/>
  <testcase name="should return formatted zero if the input is zero" time="0.002" classname="filters amountFilter"/>
  <testcase name="should return formatted amount if the input is non zero" time="0.001" classname="filters amountFilter"/>
  <testcase name="should return formatted negative amounts" time="0.002" classname="filters amountFilter"/>
  <testcase name="should separate with space when number is greater than 1000" time="0.001" classname="filters amountFilter"/>
  <testcase name="should remove leading zero" time="0.002" classname="filters cellPhoneNumberFilter"/>
  <testcase name="should not remove zero when it is not a leading number" time="0.001" classname="filters cellPhoneNumberFilter"/>
  <testcase name="should remove leading zeros" time="0.001" classname="filters cellPhoneNumberFilter"/>
  <testcase name="should return undefined when value is undefined" time="0.001" classname="filters cellPhoneNumberFilter"/>
  <testcase name="should return empty string when input is undefined" time="0.002" classname="filters nonNegativeRandAmount"/>
  <testcase name="should return formatted zero if the input is zero" time="0.001" classname="filters nonNegativeRandAmount"/>
  <testcase name="should return formatted amount if the input is non zero" time="0.001" classname="filters nonNegativeRandAmount"/>
  <testcase name="should return formatted negative amounts" time="0.001" classname="filters nonNegativeRandAmount"/>
  <testcase name="should separate with space when number is greater than 1000" time="0.001" classname="filters nonNegativeRandAmount"/>
  <testcase name="should return empty string if account is undefined" time="0.002" classname="filters accountLabel"/>
  <testcase name="should return account name and formatted number if account name exists" time="0.001" classname="filters accountLabel"/>
  <testcase name="should return just formatted number if no account name exists" time="0.001" classname="filters accountLabel"/>
  <testcase name="should return empty string if input is undefined" time="0.002" classname="filters condenseSpaces"/>
  <testcase name="should replace all instances of multiple spaces with single space" time="0.002" classname="filters condenseSpaces"/>
  <testcase name="should append empty string " time="0.001" classname="filters dayNumberSuffix"/>
  <testcase name="should append st " time="0.002" classname="filters dayNumberSuffix"/>
  <testcase name="should append nd " time="0.001" classname="filters dayNumberSuffix"/>
  <testcase name="should append rd" time="0.001" classname="filters dayNumberSuffix"/>
  <testcase name="should append th" time="0.001" classname="filters dayNumberSuffix"/>
  <testcase name="should remove CURRENT ACCOUNT from ELITE PLUS CURRENT ACCOUNT" time="0.001" classname="filters currentAccountProductName"/>
  <testcase name="should  remove PLUS CURRENT ACCOUNT from PRIVATE BANKING PLUS CURRENT ACCOUNT" time="0.002" classname="filters currentAccountProductName"/>
  <testcase name="should  remove  CURRENT ACCOUNT from ELITE CURRENT ACCOUNT" time="0.001" classname="filters currentAccountProductName"/>
  <testcase name="Should format 1023 to 1023.0 Bytes" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1025 to 1.0 KB" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1024*1024 to 1.0 MB" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1024*1024*1024 to 1.0 GB" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1024*1024*1024*1024 to 1.0 TB" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1024*1024*1024*1024*1024 to 1.0 PB" time="0.001" classname="filters bytes"/>
  <testcase name="Should format invalid number to dash" time="0.005" classname="filters bytes"/>
  <testcase name="Should format negative number to dash" time="0.002" classname="filters bytes"/>
  <testcase name="Should format infinite number to dash" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 0 to 0 Bytes" time="0.001" classname="filters bytes"/>
  <testcase name="Should format 1036 to 1.01 KB" time="0.001" classname="filters bytes"/>
  <testcase name="should format natural numbers to not have decimals" time="0.001" classname="filters formatProductInterestRate greater than or equal to 10"/>
  <testcase name="should format decimal numbers to have 2 decimal points" time="0.001" classname="filters formatProductInterestRate greater than or equal to 10"/>
  <testcase name="should format number to have 2 decimal points" time="0.001" classname="filters formatProductInterestRate less than 10"/>
  <testcase name="should return undefined if lookup values is undefined" time="0.004" classname="mapFilter"/>
  <testcase name="should return mapped value" time="0.002" classname="mapFilter with lookup values"/>
  <testcase name="should return undefined if value is not mapped" time="0.003" classname="mapFilter with lookup values"/>
  <testcase name="should return undefined if value is undefined" time="0.002" classname="mapFilter with lookup values"/>
  <testcase name="should switch base/main/features/security/fixtures/cardNumberResponse.json to base/main/features/security/fixtures/cardNumberAndPersonIdResponse.json if personal finance management feature is toggled on" time="0.001" classname="Fixture"/>
  <testcase name="should not switch base/main/features/security/fixtures/cardNumberResponse.json if personal finance management feature is toggled off" time="0.015" classname="Fixture"/>
  <testcase name="should make a get call to load the fixture" time="0.002" classname="Fixture"/>
  <testcase name="should display the flow steps when a flow is active" time="0.018" classname="Flow directive initialization"/>
  <testcase name="display nothing when no flow is active" time="0.007" classname="Flow directive initialization"/>
  <testcase name="should get header name" time="0.003" classname="Flow headerName"/>
  <testcase name="should not have data when given empty steps" time="0.002" classname="Flow create"/>
  <testcase name="should have data when given steps with data" time="0.003" classname="Flow create"/>
  <testcase name="should complete the earliest step that is not completed" time="0.002" classname="Flow next"/>
  <testcase name="should know when there are no current steps in the next flow" time="0.002" classname="Flow next"/>
  <testcase name="should keep the last step current when it is completed" time="0.002" classname="Flow next"/>
  <testcase name="should destroy flow when destroy function is called" time="0.002" classname="Flow destroy"/>
  <testcase name="should modify flow - the current step" time="0.003" classname="Flow modify"/>
  <testcase name="should modify flow - not current step" time="0.002" classname="Flow modify"/>
  <testcase name="should modify flow - the last step" time="0.006" classname="Flow modify"/>
  <testcase name="should not modify flow - step does not exist" time="0.004" classname="Flow modify"/>
  <testcase name="should complete the earliest step that is not completed" time="0.004" classname="Flow previous"/>
  <testcase name="should not complete the step that is not completed" time="0.002" classname="Flow previous"/>
  <testcase name="should return an empty list when there are no steps" time="0.002" classname="Flow previous"/>
  <testcase name="should return the current step" time="0.002" classname="Flow currentStep"/>
  <testcase name="should navigate to the default page if no page is specified" time="0.002" classname="Flow cancel When the referer parameter is not in the url"/>
  <testcase name="should navigate to the specified page" time="0.002" classname="Flow cancel When the referer parameter is not in the url"/>
  <testcase name="should navigate to login page when not authenticated" time="0.002" classname="Flow cancel When the referer parameter is not in the url"/>
  <testcase name="it should navigate to the referer" time="0.001" classname="Flow cancel When the referer parameter is in the url"/>
  <testcase name="should be able to set cancelable" time="0.002" classname="Flow cancel"/>
  <testcase name="should return an empty object when initializing" time="0.002" classname="ViewModel"/>
  <testcase name="should return the model that has been set previously" time="0.001" classname="ViewModel"/>
  <testcase name="should return object when initializing after an error has happened" time="0.006" classname="ViewModel"/>
  <testcase name="should know if it is in an initial state" time="0.002" classname="ViewModel"/>
  <testcase name="should mark view model for modification" time="0.002" classname="ViewModel"/>
  <testcase name="should forget about the past when initializing" time="0.001" classname="ViewModel"/>
  <testcase name="should clear error when explicitly modifying" time="0.002" classname="ViewModel"/>
  <testcase name="preferredName function should return the name from the digital id if authenticated" time="0.006" classname="header controller"/>
  <testcase name="preferredName function should return an empty string if not authenticated" time="0.004" classname="header controller"/>
  <testcase name="shouldDisplayProfileDropdown should return true if authenticated" time="0.003" classname="header controller"/>
  <testcase name="should set hasCard to false if there is no card" time="0.003" classname="header controller"/>
  <testcase name="should set hasCard to false if there is no card" time="0.003" classname="header controller"/>
  <testcase name="should detect a mac user" time="0.003" classname="header controller detect supported platform"/>
  <testcase name="should detect a windows user" time="0.003" classname="header controller detect supported platform"/>
  <testcase name="should detect a non-windows/non-mac user" time="0.003" classname="header controller detect supported platform"/>
  <testcase name="should return the dashboard name when you have a card selected" time="0.004" classname="header controller dashboards"/>
  <testcase name="should not return the dashboard name when there is no card selected" time="0.003" classname="header controller dashboards"/>
  <testcase name="should not return undefined when there is no card selected" time="0.003" classname="header controller dashboards"/>
  <testcase name="should have multiple dashboards when there is a card selected" time="0.002" classname="header controller dashboards"/>
  <testcase name="should not have multiple dashboards when there is no card selected" time="0.003" classname="header controller dashboards"/>
  <testcase name="should not have multiple dashboards when there is only one dashboard" time="0.018" classname="header controller dashboards"/>
  <testcase name="should use the current URL to create download URLs with really complex URL" time="0.003" classname="Base Url Helper"/>
  <testcase name="should use the current URL to create download URLs with simple url" time="0.002" classname="Base Url Helper"/>
  <testcase name="should use the current URL to create download URLs with simple example with main" time="0.001" classname="Base Url Helper"/>
  <testcase name="should know if a date is in the future : {&quot;timestamp&quot;:&quot;2014-05-29T21:59:00.000Z&quot;,&quot;paymentDate&quot;:&quot;30 May 2014&quot;,&quot;isFutureDatedPayment&quot;:true}" time="0.002" classname="date helper"/>
  <testcase name="should know if a date is in the future : {&quot;timestamp&quot;:&quot;2014-05-29T22:00:00.000Z&quot;,&quot;paymentDate&quot;:&quot;30 May 2014&quot;,&quot;isFutureDatedPayment&quot;:false}" time="0.001" classname="date helper"/>
  <testcase name="should know if a date is in the future : {&quot;timestamp&quot;:&quot;2014-05-30T21:59:00.000Z&quot;,&quot;paymentDate&quot;:&quot;30 May 2014&quot;,&quot;isFutureDatedPayment&quot;:false}" time="0.001" classname="date helper"/>
  <testcase name="should know if a date is in the future : {&quot;timestamp&quot;:&quot;2014-12-31T21:59:00.000Z&quot;,&quot;paymentDate&quot;:&quot;01 Jan 2015&quot;,&quot;isFutureDatedPayment&quot;:true}" time="0.001" classname="date helper"/>
  <testcase name="should return false when element passed is not visible" time="0.003" classname="element helper is visible"/>
  <testcase name="should return true when element passed is not visible" time="0.002" classname="element helper is visible"/>
  <testcase name="should return the width of the element in pixels" time="0.002" classname="element helper get width"/>
  <testcase name="should return the height of the element in pixels" time="0.002" classname="element helper get height"/>
  <testcase name="should have actionUrl" time="0.02" classname="Unit Test - Hidden Form Button initialise with non-empty url"/>
  <testcase name="should have default method GET" time="0.012" classname="Unit Test - Hidden Form Button initialise with non-empty url"/>
  <testcase name="should have default target to _blank" time="0.01" classname="Unit Test - Hidden Form Button initialise with non-empty url"/>
  <testcase name="should have hidden inputs" time="0.009" classname="Unit Test - Hidden Form Button initialise with non-empty url"/>
  <testcase name="should have submit button with transclude" time="0.009" classname="Unit Test - Hidden Form Button initialise with non-empty url"/>
  <testcase name="should give &quot;#&quot; when url is undefined" time="0.009" classname="Unit Test - Hidden Form Button initialise with empty url"/>
  <testcase name="should give &quot;#&quot; when url is empty" time="0.007" classname="Unit Test - Hidden Form Button initialise with empty url"/>
  <testcase name="should call goHome when button is clicked" time="0.005" classname="go-home directive"/>
  <testcase name="should trigger $digest when button is clicked" time="0.003" classname="go-home directive"/>
  <testcase name="should go to /overview when overview feature is enabled" time="0.004" classname="HomeService"/>
  <testcase name="should go to /account-summary when existing customer with current dashboard" time="0.002" classname="HomeService overview feature not enabled"/>
  <testcase name="should go to /new-registered when new to bank customer" time="0.003" classname="HomeService overview feature not enabled"/>
  <testcase name="should display a delete icon" time="0.014" classname="Inline Action directive"/>
  <testcase name="should have danger-confirm class for Confirm button" time="0.015" classname="Inline Action directive"/>
  <testcase name="should have danger class for action item div" time="0.012" classname="Inline Action directive"/>
  <testcase name="should capitalize a title" time="0.013" classname="Inline Action directive"/>
  <testcase name="should clear the actionState when show state is false" time="0.009" classname="Inline Action directive"/>
  <testcase name="should display the delete message when clicking on the delete icon" time="0.01" classname="Inline Action directive clicking on delete icon"/>
  <testcase name="should display the delete icon again when clicking on cancel button" time="0.01" classname="Inline Action directive clicking on delete icon"/>
  <testcase name="should call the deleteFn when clicking on the confirm button" time="0.01" classname="Inline Action directive clicking on delete icon"/>
  <testcase name="should return success when the delete promise resolves" time="0.002" classname="Delete Controller when calling delete"/>
  <testcase name="should return error when the delete promise rejected" time="0.002" classname="Delete Controller when calling delete"/>
  <testcase name="should have country code span" time="0.042" classname="international phone number directive create simple contents"/>
  <testcase name="should have an input for cell phone number" time="0.022" classname="international phone number directive create simple contents"/>
  <testcase name="should have a div with the country type ahead" time="0.02" classname="international phone number directive create simple contents"/>
  <testcase name="should have country code objects with label function" time="0.022" classname="international phone number directive create countries values"/>
  <testcase name="should have value when only the dialling code dropdown is defined" time="0.032" classname="international phone number directive create changing the phone number"/>
  <testcase name="should have undefined country code and dialing when country is undefined" time="0.036" classname="international phone number directive create changing the phone number"/>
  <testcase name="should only have a value when the dialling code dropdown and the phone number input are defined" time="0.036" classname="international phone number directive create changing the phone number"/>
  <testcase name="should not use a leading zero in the phone number for non-SA" time="0.047" classname="international phone number directive create changing the phone number"/>
  <testcase name="should return contact details for non-sa and uk" time="0.042" classname="international phone number directive create changing the phone number"/>
  <testcase name="should keep the leading 0 for SA" time="0.042" classname="international phone number directive create changing the phone number"/>
  <testcase name="should warn when phone number starts with dialling code" time="0.039" classname="international phone number directive create changing the phone number"/>
  <testcase name="should display max length error when total length is longer than 15" time="0.042" classname="international phone number directive create changing the phone number"/>
  <testcase name="should display min length error when total length is shorter than 3" time="0.051" classname="international phone number directive create changing the phone number"/>
  <testcase name="should have south africa selected" time="0.027" classname="international phone number directive create default to south africa"/>
  <testcase name="should not display type ahead when value is selected" time="0.032" classname="international phone number directive create when type ahead is changed"/>
  <testcase name="should still display type ahead when value is cleared" time="0.028" classname="international phone number directive create when type ahead is changed"/>
  <testcase name="should not clear country code when type ahead is cleared" time="0.033" classname="international phone number directive create when type ahead is changed"/>
  <testcase name="should display max length error when total length is longer than 17" time="0.026" classname="international phone number directive create when type ahead is changed non-SA"/>
  <testcase name="should display min length error when total length is shorter than 3" time="0.027" classname="international phone number directive create when type ahead is changed non-SA"/>
  <testcase name="should display exact length error when phone number is not started with 0, and not exactly 9 numbers" time="0.026" classname="international phone number directive create when type ahead is changed SA"/>
  <testcase name="should display exact length error when phone number is started with 0, and not exactly 10 numbers" time="0.027" classname="international phone number directive create when type ahead is changed SA"/>
  <testcase name="should have down arrow when type ahead is hidden" time="0.026" classname="international phone number directive create up and down arrows on clickable span"/>
  <testcase name="should have up arrow when type ahead is displayed" time="0.023" classname="international phone number directive create up and down arrows on clickable span"/>
  <testcase name="should show warning message" time="0.027" classname="international phone number directive create warning message"/>
  <testcase name="should hide warning message" time="0.024" classname="international phone number directive create warning message"/>
  <testcase name="should hide type ahead when span is clicked" time="0.026" classname="international phone number directive create showing and hiding the type ahead"/>
  <testcase name="should be 15 when dialling code is 2 digital number" time="0.024" classname="international phone number directive create max phone number length"/>
  <testcase name="should be 17 when no country was selected" time="0.022" classname="international phone number directive create max phone number length"/>
  <testcase name="should be 2 when dialling code is 1 digital number" time="0.022" classname="international phone number directive create min phone number length"/>
  <testcase name="should be 3 when no country was selected" time="0.023" classname="international phone number directive create min phone number length"/>
  <testcase name="should change country" time="0.035" classname="international phone number directive modify on initializing contact details"/>
  <testcase name=", it should be named &apos;LithiumAuthenticationFlow&apos;" time="0.011" classname="Unit Test - LithiumAuthenticationFlow Given it has been instantiated"/>
  <testcase name=", it should call LithiumHelper.redirectToLithium() with the redirect url" time="0.006" classname="Unit Test - LithiumAuthenticationFlow Given it has been instantiated Given Standard bank authentication is successful  and the redirect url has been set , when lithium authentication is successful"/>
  <testcase name=", it should execute the failure function once" time="0.004" classname="Unit Test - LithiumAuthenticationFlow Given it has been instantiated Given a failure function is defined Given Standard Bank authentication is unsuccessful"/>
  <testcase name=", it should call the AuthenticationService.login(Jack, TheGiantSlayer) " time="0.004" classname="Unit Test - LithiumAuthenticationFlow Given it has been instantiated When LithiumAuthenticationFlow_start(Jack, TheGiantSlayer)"/>
  <testcase name=", it should call the RegistrationService.createDigitalID() with a username, password and preferred name." time="0.005" classname="Unit Test - Lithium Registration Flow Spec When LithiumRegistrationFlow_start() is called with a context"/>
  <testcase name=", it should call LithiumService.authenticate" time="0.003" classname="Unit Test - Lithium Registration Flow Spec When LithiumRegistrationFlow_start() is called with a context , the digital id registration is successful"/>
  <testcase name=", it should call LithiumHelper.redirectToLithium() with the redirect url" time="0.004" classname="Unit Test - Lithium Registration Flow Spec When LithiumRegistrationFlow_start() is called with a context , the digital id registration is successful , the redirect url has been set  and lithium authentication is successful"/>
  <testcase name=" it should throw an E" time="0.003" classname="Unit Test - Lithium Registration Flow Spec When LithiumRegistrationFlow_start() is called with a context , the digital id registration is successful , the redirect url has been set  and lithium authentication is unsuccessful"/>
  <testcase name=", it should redirect to the first page in the wizard" time="0.008" classname="Unit Test - Lithium Registration Flow Spec When LithiumRegistrationFlow_start() is called with a context , the digital id registration is unsuccessful"/>
  <testcase name=", it should return true" time="0.002" classname="Unit - LithiumHelper Given the valid Lithium url: http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Stories/monkey/car When LithiumHelper_isFromLithium(http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Stories/monkey/car)"/>
  <testcase name=", it should return true" time="0.002" classname="Unit - LithiumHelper Given the valid Lithium url: http://community_stage_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile When LithiumHelper_isFromLithium(http://community_stage_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile)"/>
  <testcase name=", it should return true" time="0.001" classname="Unit - LithiumHelper Given the valid Lithium url: https://community_stage_standardbank_co_za/ When LithiumHelper_isFromLithium(https://community_stage_standardbank_co_za/)"/>
  <testcase name=", it should return false" time="0.002" classname="Unit - LithiumHelper Given the invalid Lithium url: &apos;&apos; When LithiumHelper_isFromLithium(&apos;&apos;)"/>
  <testcase name=", it should return false" time="0.001" classname="Unit - LithiumHelper Given the invalid Lithium url: &apos;www_google_com&apos; When LithiumHelper_isFromLithium(&apos;www_google_com&apos;)"/>
  <testcase name=", it should append the referer url as a parameter at the end of the ssoUrl" time="0.002" classname="Unit - LithiumHelper Given the redirect url has been set , when redirectToLithium() is called with a url"/>
  <testcase name=", it should call QueryStringUtility.getParameter(&apos;referer&apos;)" time="0.007" classname="Unit - LithiumHelper Given the redirect url has been set , when redirectToLithium() is called with a url"/>
  <testcase name="it should call the ServiceEndpoint.lithiumAuthenticate.makeRequest()" time="0.003" classname="Unit Test - LithiumService When authenticate() is called"/>
  <testcase name="it should return a promise with a then clause that contains the token" time="0.002" classname="Unit Test - LithiumService When authenticate() is called Given lithium authentication was successful "/>
  <testcase name="should redirect to login" time="0.392" classname="Main Routes when a route is not found"/>
  <testcase name="should redirect to overview page" time="0.349" classname="Main Routes home route when overview feature enabled"/>
  <testcase name="should redirect to account summary page" time="0.349" classname="Main Routes home route when overview feature disnabled"/>
  <testcase name="should set the is mobile device indicator when on mobile" time="0.347" classname="Main when running the module"/>
  <testcase name="should set the is mobile device indicator when not on mobile" time="0.344" classname="Main when running the module"/>
  <testcase name="should hit endpoint Meniga/User.svc/GetUserCategories" time="0.006" classname="Meniga User Categories Service getUserCategories"/>
  <testcase name="should return the payload that the gateway has responded with" time="0.007" classname="Meniga User Categories Service getUserCategories successful response from gateway"/>
  <testcase name="should load data from the cache if we have it" time="0.004" classname="Meniga User Categories Service getUserCategories successful response from gateway caching of user categories"/>
  <testcase name="should load data from the meniga proxy if we have cleared the cache" time="0.004" classname="Meniga User Categories Service getUserCategories successful response from gateway caching of user categories"/>
  <testcase name="should not return a generic error upon 204 response with 999 header" time="0.004" classname="Meniga User Categories Service getUserCategories unsuccessful response from gateway"/>
  <testcase name="should return a generic rejection upon server failure" time="0.003" classname="Meniga User Categories Service getUserCategories unsuccessful response from gateway"/>
  <testcase name="should return the server error message when response is 200 but the SBG response type header is ERROR and the SBG response code header is not 9999" time="0.003" classname="Meniga User Categories Service getUserCategories unsuccessful response from gateway"/>
  <testcase name="should populate the cache with the companies listed in the CDI" time="0.004" classname="CDI service list companies in directory"/>
  <testcase name="should load list of CDIs from the cache if we have it" time="0.004" classname="CDI service list companies in directory"/>
  <testcase name="should load the data from the service if a second call lands before the first has the data" time="0.003" classname="CDI service list companies in directory"/>
  <testcase name="should not allow duplicate names" time="0.002" classname="CDI service list companies in directory"/>
  <testcase name="should return true as Yes and false as No" time="0.003" classname="LookUps boolean"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.003" classname="LookUps branch"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps branch"/>
  <testcase name="should resolve promise with the mapped values" time="0.003" classname="LookUps branch"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps branch"/>
  <testcase name="should return english and afrikaans" time="0.002" classname="LookUps language"/>
  <testcase name="should return SA ID and passport" time="0.002" classname="LookUps idType"/>
  <testcase name="should return RCP and Current" time="0.003" classname="LookUps productCategories"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps country"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps country"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps country"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps country"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps dialling codes"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps dialling codes"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps dialling codes"/>
  <testcase name="should cache the service call" time="0.007" classname="LookUps dialling codes"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.003" classname="LookUps employmentType"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps employmentType"/>
  <testcase name="should resolve promise with the mapped values" time="0.003" classname="LookUps employmentType"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps employmentType"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps expenseType"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps expenseType"/>
  <testcase name="should resolve promise with the mapped values" time="0.003" classname="LookUps expenseType"/>
  <testcase name="should cache the service call" time="0.002" classname="LookUps expenseType"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps incomeType"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps incomeType"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps incomeType"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps incomeType"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps levelOfEducation"/>
  <testcase name="should have mapped values if promise is resolved" time="0.002" classname="LookUps levelOfEducation"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps levelOfEducation"/>
  <testcase name="should cache the service call" time="0.012" classname="LookUps levelOfEducation"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.003" classname="LookUps maritalStatus"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps maritalStatus"/>
  <testcase name="should resolve promise with the mapped values" time="0.003" classname="LookUps maritalStatus"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps maritalStatus"/>
  <testcase name="should return static list of marital types" time="0.002" classname="LookUps maritalType"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.003" classname="LookUps occupationIndustry"/>
  <testcase name="should have mapped values if promise is resolved" time="0.002" classname="LookUps occupationIndustry"/>
  <testcase name="should resolve promise with the mapped values" time="0.003" classname="LookUps occupationIndustry"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps occupationIndustry"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps occupationLevel"/>
  <testcase name="should have mapped values if promise is resolved" time="0.002" classname="LookUps occupationLevel"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps occupationLevel"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps occupationLevel"/>
  <testcase name="should return static list of permit types" time="0.002" classname="LookUps permitType"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.004" classname="LookUps residentialStatus"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps residentialStatus"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps residentialStatus"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps residentialStatus"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps title"/>
  <testcase name="should have mapped values if promise is resolved" time="0.003" classname="LookUps title"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps title"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps title"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps unemploymentReason"/>
  <testcase name="should have mapped values if promise is resolved" time="0.002" classname="LookUps unemploymentReason"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps unemploymentReason"/>
  <testcase name="should cache the service call" time="0.003" classname="LookUps unemploymentReason"/>
  <testcase name="should have undefined values if promise is not resolved" time="0.002" classname="LookUps contactType"/>
  <testcase name="should have mapped values if promise is resolved" time="0.002" classname="LookUps contactType"/>
  <testcase name="should resolve promise with the mapped values" time="0.002" classname="LookUps contactType"/>
  <testcase name="should cache the service call" time="0.002" classname="LookUps contactType"/>
  <testcase name="should return all four marketing preferences" time="0.002" classname="LookUps consent"/>
  <testcase name="should populate the cache with the list of banks" time="0.01" classname="bank service list banks"/>
  <testcase name="should not populate the cache with the list of banks if the call fails" time="0.003" classname="bank service list banks"/>
  <testcase name="should load data from the cache if we have it" time="0.003" classname="bank service list banks"/>
  <testcase name="should load the data from the service if a second call lands before the first has the data" time="0.004" classname="bank service list banks"/>
  <testcase name="should populate the cache with the list of branches for a bank" time="0.003" classname="bank service list branches"/>
  <testcase name="should load data from the cache if we have it" time="0.004" classname="bank service list branches"/>
  <testcase name="should load the data from the service if a second call lands before the first has the data" time="0.003" classname="bank service list branches"/>
  <testcase name="should populate the cache with the list of branches" time="0.004" classname="bank service list walk in branches"/>
  <testcase name="should set the label in each item" time="0.003" classname="bank service list walk in branches"/>
  <testcase name="should not populate the cache with the list of banks if the call fails" time="0.003" classname="bank service list walk in branches"/>
  <testcase name="should load data from the cache if we have it" time="0.004" classname="bank service list walk in branches"/>
  <testcase name="should identify device as mobile when the device is generic_winmo_opera_sub1000beta" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is nokia_generic_symbian3" time="0.005" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is opwv_v63_generic" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is generic_netfront_ver4_0" time="0.001" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is generic_netfront_ver4_1" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is nokia_generic_maemo" time="0.001" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is blackberry_generic_ver6" time="0.001" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is blackberry_generic_ver5" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is android" time="0.001" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is ipad" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is playbook" time="0.002" classname="mobile"/>
  <testcase name="should identify device as mobile when the device is silk" time="0.002" classname="mobile"/>
  <testcase name="should identify device as not mobile when the device is Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36" time="0.001" classname="mobile"/>
  <testcase name="should identify device as not mobile when the device is Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0" time="0.001" classname="mobile"/>
  <testcase name="should identify device as not mobile when the device is Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko" time="0" classname="mobile"/>
  <testcase name="should identify device as not mobile based on navigator.vendor" time="0.001" classname="mobile"/>
  <testcase name="should identify device as not mobile based on window.opera" time="0.001" classname="mobile"/>
  <testcase name="Should have a modal message set to the scope" time="0.008" classname="given a modalMessage directive"/>
  <testcase name="should hide the modal dialog box" time="0.006" classname="given a modalMessage directive when modal instance isShown = false"/>
  <testcase name="should show the modal dialog box" time="0.011" classname="given a modalMessage directive when modal instance isShown = true"/>
  <testcase name="should set the title, the content and the closed callback of the modalInstance" time="0.007" classname="given a modalMessage directive when modal instance isShown = true"/>
  <testcase name="should call hideModal on ModalMessage service" time="0.007" classname="given a modalMessage directive when close is called"/>
  <testcase name="should have an instance of a modal object" time="0.001" classname="given ModalMessage service"/>
  <testcase name="should NOT show modal dialog box" time="0.001" classname="given ModalMessage service"/>
  <testcase name="should show modal dialog box" time="0.001" classname="given ModalMessage service when showMessage is called"/>
  <testcase name="should show modal dialog box with custom title" time="0.001" classname="given ModalMessage service when showMessage is called"/>
  <testcase name="should show modal dialog box with custom message" time="0" classname="given ModalMessage service when showMessage is called"/>
  <testcase name="should hide modal dialog box" time="0.001" classname="given ModalMessage service when hideModal is called and whenClosed is defined"/>
  <testcase name="should call the closed callback on the modal instance" time="0.001" classname="given ModalMessage service when hideModal is called and whenClosed is defined"/>
  <testcase name="should show the monthly limit" time="0.009" classname="Monthly payment limits directive"/>
  <testcase name="should show the monthly available limit" time="0.007" classname="Monthly payment limits directive"/>
  <testcase name="should show the monthly used limit" time="0.008" classname="Monthly payment limits directive"/>
  <testcase name="should show a progress bar" time="0.02" classname="Monthly payment limits directive"/>
  <testcase name="should return the percentage of limits" time="0.003" classname="Monthly payment limits MonthlyPaymentLimitsController progress bar"/>
  <testcase name="should default to 100% when progress is more than 100" time="0.003" classname="Monthly payment limits MonthlyPaymentLimitsController progress bar"/>
  <testcase name="should default used limit to 0 if no limits have been received from the service yet" time="0.002" classname="Monthly payment limits MonthlyPaymentLimitsController progress bar"/>
  <testcase name="should pass the current card to the account service" time="0.003" classname="Monthly payment limits MonthlyPaymentLimitsController"/>
  <testcase name="should know the current monthly EAP limit" time="0.002" classname="Monthly payment limits MonthlyPaymentLimitsController"/>
  <testcase name="should know the current used monthly EAP limit" time="0.002" classname="Monthly payment limits MonthlyPaymentLimitsController"/>
  <testcase name="should calculate the available monthly EAP limit" time="0.003" classname="Monthly payment limits MonthlyPaymentLimitsController"/>
  <testcase name=", it should set $window.location.href to www.google.com" time="0.001" classname="Unit Test - Navigator When Navigator_redirect(www_google_com) is called"/>
  <testcase name=", it should return a flow instance with the name &apos;newFlow&apos;" time="0.001" classname="flow constructor When FlowConstructor({name: &apos;newFlow&apos;}) is called, "/>
  <testcase name="it should have called the mockedStartFuncObj with" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function When the flow is started"/>
  <testcase name=", it should add the success promise resolution scenario to &apos;newFlow&apos; as a function" time="0.006" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added"/>
  <testcase name=", it should execute the defined function" time="0.002" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the success promise resolution scenario has been defined _ When resolution of the success promise resolution scenario occurs"/>
  <testcase name=", it should pass the arguments to the defined function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the success promise resolution scenario has been defined _ When resolution of the success promise resolution scenario occurs _ Given an Array resolution arguments where provided"/>
  <testcase name=", it should pass the argument to the defined function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the success promise resolution scenario has been defined _ When resolution of the success promise resolution scenario occurs _ Given one resolution argument"/>
  <testcase name=", it should add the failure promise resolution scenario to &apos;newFlow&apos; as a function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added"/>
  <testcase name=", it should execute the defined function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the failure promise resolution scenario has been defined _ When resolution of the failure promise resolution scenario occurs"/>
  <testcase name=", it should pass the arguments to the defined function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the failure promise resolution scenario has been defined _ When resolution of the failure promise resolution scenario occurs _ Given an Array resolution arguments where provided"/>
  <testcase name=", it should pass the argument to the defined function" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed with a start function Given a list of resolution scenarios have been added Given the resolution behavior for the failure promise resolution scenario has been defined _ When resolution of the failure promise resolution scenario occurs _ Given one resolution argument"/>
  <testcase name=", it should throw an error" time="0.001" classname="flow constructor Given a &apos;newFlow&apos; object has been constructed without a start function When the newFlow is started"/>
  <testcase name="should render the payment notification cost according to the ngModel" time="0.005" classname="Payment Notification"/>
  <testcase name="should not render the payment notification cost" time="0.004" classname="Payment Notification"/>
  <testcase name="get Email cost" time="0.001" classname="Notification Cost Service get notification cost"/>
  <testcase name="get SMS cost" time="0.001" classname="Notification Cost Service get notification cost"/>
  <testcase name="get Fax cost" time="0.001" classname="Notification Cost Service get notification cost"/>
  <testcase name="should show a print button with and id of print" time="0.008" classname="Print button directive"/>
  <testcase name="should have a title" time="0.007" classname="Print button directive"/>
  <testcase name="should default the button text to Print" time="0.007" classname="Print button directive"/>
  <testcase name="should set the button text" time="0.007" classname="Print button directive"/>
  <testcase name="should add any additional classes to the button" time="0.006" classname="Print button directive"/>
  <testcase name="should render an icon action button instead of a normal button when actionButton is specified" time="0.008" classname="Print button directive"/>
  <testcase name="should not render an icon action button unless actionButton is specified" time="0.013" classname="Print button directive"/>
  <testcase name="should call window.print on click" time="0.009" classname="Print button directive"/>
  <testcase name="should pass through the track-click attribute to the button" time="0.01" classname="Print button directive"/>
  <testcase name="should bind a click event if passed through" time="0.007" classname="Print button directive"/>
  <testcase name="should be hidden on mobile devices" time="0.019" classname="Print button directive"/>
  <testcase name="should be shown on not mobile devices" time="0.007" classname="Print button directive"/>
  <testcase name="should not show an error if repeatNumber is not present for a non repeat payment" time="0.016" classname="recurring payments template tests repeat number error"/>
  <testcase name="should not show an error if repeatNumber is in acceptable range" time="0.015" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is below 1" time="0.015" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is below 2" time="0.014" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is above the maximum repeat number for the current interval" time="0.018" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is not present for a repeat payment" time="0.022" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is not a number" time="0.017" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show an error if repeatNumber is not a whole number" time="0.015" classname="recurring payments template tests repeat number error"/>
  <testcase name="should show recurring payment checkbox" time="0.014" classname="recurring payments template tests is new"/>
  <testcase name="should show repeat interval dropdown" time="0.014" classname="recurring payments template tests is new"/>
  <testcase name="should hide recurring payment checkbox" time="0.013" classname="recurring payments template tests is not new"/>
  <testcase name="should replace repeat interval dropdown with label" time="0.014" classname="recurring payments template tests is not new"/>
  <testcase name="should have &apos;s&apos; after multiples" time="0.011" classname="recurring payments template tests repeat interval name"/>
  <testcase name="should not have &apos;s&apos; after single" time="0.027" classname="recurring payments template tests repeat interval name"/>
  <testcase name="should do nothing" time="0.006" classname="routing for allowedFrom when the next route has no allowedFrom property specified"/>
  <testcase name="should go to login when current is undefined " time="0.004" classname="routing for allowedFrom route change parameters"/>
  <testcase name="should go to route when current is defined " time="0.003" classname="routing for allowedFrom route change parameters"/>
  <testcase name="should not handle any route change when next is undefined " time="0.003" classname="routing for allowedFrom route change parameters"/>
  <testcase name="should set path to login if next is an authenticated route and user is not authenticated" time="0.004" classname="routing for allowedFrom route change parameters"/>
  <testcase name="should not change location" time="0.003" classname="routing for allowedFrom when the next route is disallowed"/>
  <testcase name="should navigate back to a safe return path, if one is provided" time="0.004" classname="routing for allowedFrom when the next route is disallowed"/>
  <testcase name="should allow the user to navigate" time="0.003" classname="routing for allowedFrom when the next route is disallowed with new format"/>
  <testcase name="should allow the user to navigate" time="0.003" classname="routing for allowedFrom when the next route has a disallowed condition"/>
  <testcase name="should allow the user to navigate" time="0.003" classname="routing for allowedFrom when the next route is allowed"/>
  <testcase name="should allow the user to navigate" time="0.003" classname="routing for allowedFrom when the next route has an allowed condition"/>
  <testcase name="should allow from a path that matches" time="0.004" classname="routing for allowedFrom when the from route is a simple regex"/>
  <testcase name="should not allow from a path that does not match" time="0.004" classname="routing for allowedFrom when the from route is a simple regex"/>
  <testcase name="should allow from a path that matches" time="0.004" classname="routing for allowedFrom when the from route is a complex regex"/>
  <testcase name="should not allow from a path that does not match" time="0.003" classname="routing for allowedFrom when the from route is a complex regex"/>
  <testcase name="should redirect to /login when changing route to path that requires authentication, e.g. /account-summary" time="0.003" classname="routing for unauthenticated when not logged in"/>
  <testcase name="should redirect to /login when changing route to path that requires authentication, e.g. /change-password" time="0.003" classname="routing for unauthenticated when not logged in"/>
  <testcase name="should allow to access any page that does not require authentication" time="0.002" classname="routing for unauthenticated when not logged in"/>
  <testcase name="should not handle any routing to &apos;/otp/verify&apos;" time="0.003" classname="routing for unauthenticated when not logged in"/>
  <testcase name="should allow to change to any page that requires authentication, e.g. /account-summary" time="0.003" classname="routing for unauthenticated when logged in"/>
  <testcase name="should allow to change to any page that requires authentication, e.g. /change-password" time="0.002" classname="routing for unauthenticated when logged in"/>
  <testcase name="should allow to change to any page that requires authentication, e.g. /otp/verify" time="0.003" classname="routing for unauthenticated when logged in"/>
  <testcase name="should not allow change to unauthenticated page, e.g. /login" time="0.002" classname="routing for unauthenticated when logged in"/>
  <testcase name="should redirect to login if requiring access for first time /login" time="0.003" classname="routing for unauthenticated when logged in"/>
  <testcase name="should not allow change to unauthenticated page, e.g. /reset-password" time="0.002" classname="routing for unauthenticated when logged in"/>
  <testcase name="should redirect to login if requiring access for first time /reset-password" time="0.002" classname="routing for unauthenticated when logged in"/>
  <testcase name="should not allow change to unauthenticated page, e.g. /reset-password/details" time="0.007" classname="routing for unauthenticated when logged in"/>
  <testcase name="should redirect to login if requiring access for first time /reset-password/details" time="0.005" classname="routing for unauthenticated when logged in"/>
  <testcase name="should not allow change to unauthenticated page, e.g. /register" time="0.005" classname="routing for unauthenticated when logged in"/>
  <testcase name="should redirect to login if requiring access for first time /register" time="0.003" classname="routing for unauthenticated when logged in"/>
  <testcase name="should not handle any routing to &apos;/otp/verify&apos;" time="0.003" classname="routing for unauthenticated when logged in"/>
  <testcase name="should allow periods" time="0.003" classname="amount factory invalid keycode"/>
  <testcase name="should invalidate more than one period" time="0.002" classname="amount factory invalid keycode"/>
  <testcase name="should validate digits" time="0.002" classname="amount factory invalid keycode"/>
  <testcase name="should validate numpad digits" time="0.002" classname="amount factory invalid keycode"/>
  <testcase name="should not allow any other characters" time="0.003" classname="amount factory invalid keycode"/>
  <testcase name="should always allow navigation keys" time="0.002" classname="amount factory invalid keycode"/>
  <testcase name="should consider period as invalid when noDecimal flag is true" time="0.002" classname="amount factory unwanted period key"/>
  <testcase name="should consider period as valid when noDecimal flag is set to false" time="0.003" classname="amount factory unwanted period key"/>
  <testcase name="should consider period as valid when sent key code is not period" time="0.004" classname="amount factory unwanted period key"/>
  <testcase name="should allow blank" time="0.025" classname="currency input field"/>
  <testcase name="should allow digits and navigation keys" time="0.008" classname="currency input field input prevention with keyCode"/>
  <testcase name="should not allow characters, special chars etc." time="0.007" classname="currency input field input prevention with keyCode"/>
  <testcase name="should allow digits and navigation keys" time="0.007" classname="currency input field input prevention with which"/>
  <testcase name="should not allow characters, special chars etc." time="0.007" classname="currency input field input prevention with which"/>
  <testcase name="should not allow period when no-decimal attribute has been set on the currency field" time="0.008" classname="currency input field input prevention with no-decimal"/>
  <testcase name="should  allow period when no-decimal attribute has not been set on the currency field" time="0.007" classname="currency input field input prevention with no-decimal"/>
  <testcase name="should set the model to invalid if the value is 0 and dirty" time="0.007" classname="currency input field"/>
  <testcase name="should be valid when pristine" time="0.007" classname="currency input field"/>
  <testcase name="should handle integers" time="0.008" classname="currency input field"/>
  <testcase name="should not allow alphabetic characters" time="0.008" classname="currency input field"/>
  <testcase name="should not allow spaces" time="0.007" classname="currency input field"/>
  <testcase name="should handle 1 decimal place" time="0.008" classname="currency input field"/>
  <testcase name="should handle 2 decimal places" time="0.007" classname="currency input field"/>
  <testcase name="should allow input with only fractional part" time="0.007" classname="currency input field"/>
  <testcase name="should not allow more than 2 decimal places" time="0.007" classname="currency input field"/>
  <testcase name="should not allow amount greater than 5,000,000.00" time="0.012" classname="currency input field"/>
  <testcase name="should not allow amount greater than provided max-limit" time="0.008" classname="currency input field"/>
  <testcase name="should not allow empty strings by default" time="0.007" classname="currency input field"/>
  <testcase name="should allow empty strings by configuration" time="0.007" classname="currency input field"/>
  <testcase name="should not allow zero by default" time="0.008" classname="currency input field"/>
  <testcase name="should allow zero by configuration" time="0.008" classname="currency input field"/>
  <testcase name="should not change visibility and width" time="0.013" classname="select in ie fixIeSelect directive"/>
  <testcase name="should not change text" time="0.008" classname="select in ie configuration_js"/>
  <testcase name="should focus the element" time="0.036" classname="onFocus"/>
  <testcase name="should focus on element when spinner is de-activated" time="0.023" classname="onFocus"/>
  <testcase name="should insert icon before input" time="0.005" classname="inputLeadingIcon directive initialize"/>
  <testcase name="should not insert icon if no icon class name is assigned" time="0.005" classname="inputLeadingIcon directive initialize"/>
  <testcase name="should throw exception" time="0.006" classname="inputLeadingIcon directive No input found"/>
  <testcase name="should have an error if value is negative" time="0.007" classname="number range directives empty min value defaults to zero"/>
  <testcase name="should not have an error if value is positive" time="0.006" classname="number range directives empty min value defaults to zero"/>
  <testcase name="should not have an error if value is Infinity" time="0.005" classname="number range directives empty max value defaults to Infinity"/>
  <testcase name="should have a min error if value is below the minimum" time="0.005" classname="number range directives with min and max both defined"/>
  <testcase name="should have no errors if value is between min and max" time="0.005" classname="number range directives with min and max both defined"/>
  <testcase name="should have a max error if value is above the maximum" time="0.005" classname="number range directives with min and max both defined"/>
  <testcase name="should know that it is optional" time="0.008" classname="rowField directive with ID attribute"/>
  <testcase name="should add ID attribute to &lt;li&gt;" time="0.007" classname="rowField directive with ID attribute"/>
  <testcase name="should know that label attribute is optional" time="0.007" classname="rowField directive with label attribute"/>
  <testcase name="should render a label div" time="0.008" classname="rowField directive with label attribute"/>
  <testcase name="should render the field content" time="0.008" classname="rowField directive with label attribute"/>
  <testcase name="should not render label div when row-field has no label" time="0.009" classname="rowField directive with label attribute"/>
  <testcase name="should be within a form" time="0.015" classname="SB input text input element"/>
  <testcase name="should not render a label element when no label attribute is present" time="0.016" classname="SB input label"/>
  <testcase name="should render a label element when the label attribute is present" time="0.015" classname="SB input label"/>
  <testcase name="should show leading icon if with iconClassName set" time="0.027" classname="SB input icon"/>
  <testcase name="should not render a tooltip element when no tooltip attribute is present" time="0.015" classname="SB input tooltip"/>
  <testcase name="should render a tooltip element when the tooltip and label attributes are present" time="0.014" classname="SB input tooltip"/>
  <testcase name="should render a tooltip with a negative tabindex" time="0.015" classname="SB input tooltip"/>
  <testcase name="should not be trimmed" time="0.015" classname="SB input password fields general"/>
  <testcase name="should NOT have its value trimmed" time="0.016" classname="SB input password fields general"/>
  <testcase name="should show password if has attr:show-password-button" time="0.015" classname="SB input password fields show/hide password"/>
  <testcase name="should not show password if do not has attr:show-password-button" time="0.014" classname="SB input password fields show/hide password"/>
  <testcase name="should not show password if is not mobile device" time="0.018" classname="SB input password fields show/hide password"/>
  <testcase name="should have a name" time="0.014" classname="SB input text input field"/>
  <testcase name="should have the same id and name when no id attribute is present" time="0.019" classname="SB input text input field"/>
  <testcase name="should render an id when id attribute is present" time="0.03" classname="SB input text input field"/>
  <testcase name="should have its value trimmed" time="0.015" classname="SB input text input field"/>
  <testcase name="should display default required message when empty" time="0.019" classname="SB input text input field"/>
  <testcase name="should allow for a custom required message when empty" time="0.019" classname="SB input text input field"/>
  <testcase name="should display default min length message" time="0.018" classname="SB input text input field"/>
  <testcase name="should allow for a custom min length message" time="0.018" classname="SB input text input field"/>
  <testcase name="should display default max length message" time="0.018" classname="SB input text input field"/>
  <testcase name="should allow for a custom max length message" time="0.018" classname="SB input text input field"/>
  <testcase name="should set class with has-been-visited" time="0.017" classname="SB input text input field on blur"/>
  <testcase name="should render as textarea only" time="0.031" classname="SB input text area field"/>
  <testcase name="should hide &quot;Characters left:&quot; by default" time="0.016" classname="SB input text area field"/>
  <testcase name="should update &quot;Characters left:&quot; when text changes" time="0.018" classname="SB input text area field"/>
  <testcase name="should hide &quot;Characters left:&quot; when the max-length is not assigned" time="0.023" classname="SB input text area field"/>
  <testcase name="should not update &quot;Characters left:&quot; when text changes without max-length" time="0.028" classname="SB input text area field"/>
  <testcase name="should not have an error if value is valid" time="0.006" classname="sbInteger directive"/>
  <testcase name="should have an error if value has letters" time="0.009" classname="sbInteger directive"/>
  <testcase name="should have an error if value has decimals" time="0.007" classname="sbInteger directive"/>
  <testcase name="should insert Show button after password input" time="0.006" classname="showHidePassword directive initialize"/>
  <testcase name="should not insert Show button after password input if show-hide-password not equal to &quot;true&quot;" time="0.005" classname="showHidePassword directive initialize"/>
  <testcase name="should switch the text to &quot;Hide&quot;" time="0.426" classname="showHidePassword directive click on &quot;Show&quot;"/>
  <testcase name="should change input type to text" time="0.347" classname="showHidePassword directive click on &quot;Show&quot;"/>
  <testcase name="should focus on input after click" time="0.339" classname="showHidePassword directive click on &quot;Show&quot;"/>
  <testcase name="should switch the text to &quot;Show&quot;" time="0.679" classname="showHidePassword directive click on &quot;Hide&quot;"/>
  <testcase name="should change input type to password" time="0.679" classname="showHidePassword directive click on &quot;Hide&quot;"/>
  <testcase name="should focus on input after click" time="0.672" classname="showHidePassword directive click on &quot;Hide&quot;"/>
  <testcase name="should throw exception" time="0.006" classname="showHidePassword directive No input found"/>
  <testcase name="should render the right regex in the ng-pattern attribute" time="0.016" classname="ng-pattern"/>
  <testcase name="should display a message when text is entered that doesn&apos;t match the regex pattern" time="0.018" classname="ng-pattern"/>
  <testcase name="should display no error value if value in field is zero" time="0.015" classname="validate-available-balance"/>
  <testcase name="should have an error if amount greater than available balance" time="0.009" classname="validate-available-balance"/>
  <testcase name="should have a valid amount if amount less than available balance" time="0.006" classname="validate-available-balance"/>
  <testcase name="should have an error for monthly transfer if amount greater than monthly transfer limit" time="0.006" classname="validate-available-balance"/>
  <testcase name="should have a valid amount for monthly transfer if amount less than monthly transfer limit" time="0.005" classname="validate-available-balance"/>
  <testcase name="should have an error for the available transfer if available transfer limit less than available balance" time="0.006" classname="validate-available-balance"/>
  <testcase name="should have an error for the available balance if available transfer limit greater than available balance" time="0.005" classname="validate-available-balance"/>
  <testcase name="should have an error for the available balance if available transfer limit equal to available balance" time="0.005" classname="validate-available-balance"/>
  <testcase name="should reset validation when invalid amount expression is false" time="0.005" classname="validate-available-balance"/>
  <testcase name="should trigger validation when available balance changes" time="0.006" classname="validate-available-balance"/>
  <testcase name="should trigger validation when monthly limit changes" time="0.005" classname="validate-available-balance"/>
  <testcase name="should display confirmation error when confirm attribute doesn&apos;t match input value" time="0.026" classname="confirm-input-name"/>
  <testcase name="should not render an error when the input value is the same as the confirm input attribute" time="0.034" classname="confirm-input-name"/>
  <testcase name="should render an error when length is not 3 or 5 is provided " time="0.022" classname="exact-length"/>
  <testcase name="should not render an error when the input&apos;s length is 3" time="0.019" classname="exact-length"/>
  <testcase name="should render max length error message when ng-maxlength is provided " time="0.017" classname="ng-maxlength"/>
  <testcase name="should render pattern error when ng-pattern is provided " time="0.021" classname="ng-pattern"/>
  <testcase name="should render a required attribute when ng-required is present" time="0.018" classname="ng-required"/>
  <testcase name="should not render a required error message when in pristine condition" time="0.014" classname="ng-required"/>
  <testcase name="should set the validity of the model to false if there are consecutive ascending numbers at the beginning when changing the input" time="0.004" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive ascending numbers at the beginning when changing the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive ascending numbers at the end when changing the input" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive ascending numbers at the end when changing the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive descending numbers at the beginning when changing the input" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive descending numbers at the beginning when changing the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive descending numbers at the end when changing the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are consecutive descending numbers at the end when changing the input" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if there arent consecutive numbers when changing the input" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if there arent consecutive numbers when changing the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if the value is null the scope" time="0.003" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if the value is null on the form" time="0.015" classname="prevent consecutive numbers directive valid details used to setup"/>
  <testcase name="should be valid if the parameter has an empty string" time="0.003" classname="prevent consecutive numbers directive"/>
  <testcase name="should set the validity of the model to false if there are repetitive numbers at the beginning when changing the input" time="0.008" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are repetitive numbers at the beginning when changing the scope" time="0.004" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are repetitive numbers at the end when changing the input" time="0.004" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to false if there are repetitive numbers at the end when changing the scope" time="0.003" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if there arent repetitive numbers when changing the input" time="0.004" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if there arent repetitive numbers when changing the scope" time="0.003" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if the value is null the scope" time="0.004" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should set the validity of the model to true if the value is null on the form" time="0.003" classname="prevent repetitive numbers directive valid details used to setup"/>
  <testcase name="should be valid if the parameter has an empty string" time="0.004" classname="prevent repetitive numbers directive"/>
  <testcase name="should not render" time="0.003" classname="serviceError directive"/>
  <testcase name="should render" time="0.004" classname="serviceError directive"/>
  <testcase name=". it should get the LithiumAuthenticationFlow" time="0.003" classname="Unit Test - SingleSignOn Given that the user is coming from Lithium When SingleSignOn_login() is called "/>
  <testcase name=", it should get the LithiumRegistrationFlow" time="0.005" classname="Unit Test - SingleSignOn Given that the user is coming from Lithium When SingleSignOn_register() is called"/>
  <testcase name=", it should get the InternetBankingAuthenticationFlow" time="0.003" classname="Unit Test - SingleSignOn Given the user isn&apos;t coming from Lithium When SingleSignOn_login() is called"/>
  <testcase name=", it should get the InternetBankingRegistrationFlow" time="0.004" classname="Unit Test - SingleSignOn Given the user isn&apos;t coming from Lithium When SingleSignOn_register() is called"/>
  <testcase name="should set the sort criteria" time="0.001" classname="sorter"/>
  <testcase name="should set the sort order as descending by default" time="0.002" classname="sorter"/>
  <testcase name="should toggle the sort order" time="0.001" classname="sorter"/>
  <testcase name="should assume global spinner is used by default" time="0.001" classname="Spinner Spinner"/>
  <testcase name="should return spinner style used for current request" time="0.001" classname="Spinner Spinner"/>
  <testcase name="should be hidden by default" time="0.003" classname="Spinner spinnerController"/>
  <testcase name="should update spinner style when any given request starts" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should be shown when spinner request is pending" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should be hidden when no pending requests" time="0.001" classname="Spinner spinnerController"/>
  <testcase name="should be hidden when request pending finishes" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should not hide the spinner when there are non-zero pending requests" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should not clear existing spinner when a spinnerless call is made" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should not display spinner if the only call in progress is spinnerless" time="0.001" classname="Spinner spinnerController"/>
  <testcase name="should be shown when request pending does not finish" time="0.006" classname="Spinner spinnerController"/>
  <testcase name="should delay the spinner deactivation when processing the login request" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should block out page and stop any spinners when an connectivityUnavailable event is broadcast" time="0.002" classname="Spinner spinnerController"/>
  <testcase name="should match on the full search string" time="0.002" classname="TypeAhead filter"/>
  <testcase name="should match on all words in the search string" time="0.001" classname="TypeAhead filter"/>
  <testcase name="should only match if all words in the search string match" time="0.002" classname="TypeAhead filter"/>
  <testcase name="should sort the filtered data by specified criteria" time="0.003" classname="TypeAhead filter"/>
  <testcase name="should not sort by anything when the seach criteria is empty" time="0.001" classname="TypeAhead filter"/>
  <testcase name="should be require an ng-model" time="0.011" classname="TypeAhead directive"/>
  <testcase name="should list the elements" time="0.013" classname="TypeAhead directive"/>
  <testcase name="should set the selectedItem if there was already a selected item in the scope" time="0.018" classname="TypeAhead directive"/>
  <testcase name="should set the selectedItem if there was already a selected item in the scope" time="0.011" classname="TypeAhead directive"/>
  <testcase name="should select the item in the list if it only has one item" time="0.01" classname="TypeAhead directive"/>
  <testcase name="should set the filteredItems to the empty list if data is undefined" time="0.013" classname="TypeAhead directive"/>
  <testcase name="should have a placeholder" time="0.013" classname="TypeAhead directive"/>
  <testcase name="may not have a deepFilter option" time="0.024" classname="TypeAhead directive"/>
  <testcase name="may have a deepFilter option" time="0.012" classname="TypeAhead directive"/>
  <testcase name="should set sortBy criteria" time="0.016" classname="TypeAhead directive"/>
  <testcase name="should clear the input value when the X is clicked" time="0.02" classname="TypeAhead directive"/>
  <testcase name="should change external scope value in ngmodel" time="0.013" classname="TypeAhead directive"/>
  <testcase name="should set the model based on the value-property" time="0.011" classname="TypeAhead directive with specific value property"/>
  <testcase name="should clear the model when no item has been selected" time="0.013" classname="TypeAhead directive with specific value property"/>
  <testcase name="should set the selected item based on the external scope value" time="0.012" classname="TypeAhead directive with specific value property"/>
  <testcase name="should set the items to hidden" time="0.012" classname="TypeAhead directive List select none"/>
  <testcase name="should clear the selected item" time="0.012" classname="TypeAhead directive List select none"/>
  <testcase name="should clear the item text" time="0.013" classname="TypeAhead directive List select none"/>
  <testcase name="should mark the validity of items in list to true" time="0.011" classname="TypeAhead directive List select none"/>
  <testcase name="should mark the validity of required to false" time="0.012" classname="TypeAhead directive List select none"/>
  <testcase name="should force placeholder display" time="0.012" classname="TypeAhead directive List select none"/>
  <testcase name="should not use placeholder polyfill on non-ie9" time="0.011" classname="TypeAhead directive List select none"/>
  <testcase name="should set the current item input to the current item model" time="0.029" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should set the model to the clicked item" time="0.017" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should set the model when selectItem is called" time="0.014" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should not set the model when selectItem is called with an invalid item" time="0.012" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should set the model when selectItem is called but not reevaluate validations" time="0.011" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should unhide the item list when the input is focused with more than one result" time="0.015" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should hide the item list when the input is focused with zero results" time="0.014" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should hide the item list when the input is blurred" time="0.012" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should not set the model and itemText if the selected item label is not the same as the itemText" time="0.012" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should not set the model and itemtext if the selected item label is not the same as the itemtext" time="0.013" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should mark the first result in the item list as current on focus" time="0.011" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should set current item to the first item in the item list when focused" time="0.015" classname="TypeAhead directive List autocomplete list"/>
  <testcase name="should set the item field to required if there is no valid selection" time="0.012" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should set the dirty class if the item input is not valid" time="0.012" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should set the item field to required if there is no input and it is dirty" time="0.012" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should mark the item input as invalid if the entered item is not in the item list" time="0.016" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should display an error message when the entered item is not in the item list" time="0.028" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should indicate item input as invalid when the entered item is not in the item list" time="0.012" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should mark the item input as valid if the entered item is in the item list" time="0.013" classname="TypeAhead directive List autocomplete list validations"/>
  <testcase name="should mark the first result in the filtered item list as current on keyup" time="0.012" classname="TypeAhead directive List action keys"/>
  <testcase name="should set the current item to the next item in the list when pressing down arrow" time="0.021" classname="TypeAhead directive List action keys"/>
  <testcase name="should do nothing when at the end of the item list when pressing down" time="0.012" classname="TypeAhead directive List action keys"/>
  <testcase name="should do nothing when at the beginning of the item list when pressing up" time="0.013" classname="TypeAhead directive List action keys"/>
  <testcase name="should choose the previous item in the list at the beginning of the item list when pressing up" time="0.017" classname="TypeAhead directive List action keys"/>
  <testcase name="should set currentIndex to zero when pressing any key" time="0.014" classname="TypeAhead directive List action keys"/>
  <testcase name="should do nothing when at the beginning of the item list when pressing up" time="0.013" classname="TypeAhead directive List action keys"/>
  <testcase name="should select the current item when pressing enter" time="0.013" classname="TypeAhead directive List action keys"/>
  <testcase name="should select the current item when pressing tab" time="0.012" classname="TypeAhead directive List action keys"/>
  <testcase name="should hide list when pressing esc" time="0.014" classname="TypeAhead directive List action keys"/>
  <testcase name="should not hide list when pressing upArrow" time="0.012" classname="TypeAhead directive List action keys"/>
  <testcase name="should hide list when pressing downArrow" time="0.011" classname="TypeAhead directive List action keys"/>
  <testcase name="should hide the item list when pressing enter" time="0.013" classname="TypeAhead directive List action keys"/>
  <testcase name="should unhide the item list when the input receives keydown and there is more than one result" time="0.031" classname="TypeAhead directive List action keys"/>
  <testcase name="should hide the item list when the input receives keydown and there is one or less results" time="0.014" classname="TypeAhead directive List action keys"/>
  <testcase name="should not get focus when pressing enter if the next input is lazy loaded" time="0.025" classname="TypeAhead directive List lazy load"/>
  <testcase name="should get focus when pressing enter if the next input is not lazy loaded" time="0.03" classname="TypeAhead directive List lazy load"/>
  <testcase name=", it should return the requested parameter" time="0.002" classname="Unit Test - QueryParameterUtilitySpec When getParameter() is called Given the queryString ?referer=monkey"/>
  <testcase name=", it should return the requested parameter" time="0.005" classname="Unit Test - QueryParameterUtilitySpec When getParameter() is called Given the queryString ?car=monkey"/>
  <testcase name="should be able to be found by the class user-terms-link" time="0.008" classname="Unit Test - User term and condition link replace with tag a"/>
  <testcase name="should has _blank as target" time="0.004" classname="Unit Test - User term and condition link replace with tag a"/>
  <testcase name="should has right link as href " time="0.003" classname="Unit Test - User term and condition link replace with tag a"/>
  <testcase name="should tracks click with right token" time="0.004" classname="Unit Test - User term and condition link replace with tag a"/>
  <testcase name="should replaces content with transclude text" time="0.004" classname="Unit Test - User term and condition link replace with tag a"/>
  <testcase name="sets valid to true if the value is undefined" time="0.005" classname="IdNumber Directive validation"/>
  <testcase name="sets valid to true if the value is null" time="0.004" classname="IdNumber Directive validation"/>
  <testcase name="sets valid to true for a valid id number" time="0.005" classname="IdNumber Directive validation"/>
  <testcase name="sets valid to false for an invalid id number" time="0.004" classname="IdNumber Directive validation"/>
  <testcase name="sets birthDate to true for an idnumber with an invalid birth date" time="0.003" classname="IdNumber Directive validation"/>
  <testcase name="sets birthDate to false for an idnumber with a valid birth date" time="0.003" classname="IdNumber Directive validation"/>
  <testcase name="sets eleventhDigit to true for an idnumber with an invalid eleventh digit" time="0.004" classname="IdNumber Directive validation"/>
  <testcase name="sets eleventhDigit to false for an idnumber with a valid eleventh digit" time="0.003" classname="IdNumber Directive validation"/>
  <testcase name="sets checkDigit to true for an idnumber with an invalid check digit" time="0.003" classname="IdNumber Directive validation"/>
  <testcase name="sets checkDigit to false for an idnumber with a valid check digit" time="0.008" classname="IdNumber Directive validation"/>
  <testcase name="is false for an id number with a wrong check digit" time="0.001" classname="IdNumber check digit validation"/>
  <testcase name="is false for an incorrect id number" time="0.001" classname="IdNumber check digit validation"/>
  <testcase name="is true for a correct id number" time="0.001" classname="IdNumber check digit validation"/>
  <testcase name="is false for an id number with an 11th digit that is greater than 2" time="0.001" classname="IdNumber 11th digit validation"/>
  <testcase name="is true for an id number with an 11th digit that is 0" time="0.001" classname="IdNumber 11th digit validation"/>
  <testcase name="is true for an id number with an 11th digit that is 1" time="0.001" classname="IdNumber 11th digit validation"/>
  <testcase name="is true for an id number with an 11th digit that is 2" time="0.001" classname="IdNumber 11th digit validation"/>
  <testcase name="is false for an invalid birthdate in the id number" time="0.001" classname="IdNumber birthdate validation"/>
  <testcase name="is true for a valid birthdate in the id number" time="0.002" classname="IdNumber birthdate validation"/>
  <testcase name="returns the birthdate starting with 20 from an id number starting with 2" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 20 from an id number starting with 1" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 20 from an id number starting with 0" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 9" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 8" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 7" time="0.005" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 6" time="0.002" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 5" time="0.002" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 4" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="returns the birthdate starting with 19 from an id number starting with 3" time="0.001" classname="IdNumber birthdate from id number"/>
  <testcase name="should replace the parent text notification with the hint" time="0.006" classname="limits directive hints"/>
  <testcase name="should remove the parent text notification if there is no hint set" time="0.004" classname="limits directive hints"/>
  <testcase name="should leave the parent text notification if there is no hinter function" time="0.004" classname="limits directive hints"/>
  <testcase name="should watch with the hintWatcher" time="0.02" classname="limits directive hints"/>
  <testcase name="should show the error message if the enforcer returns an error" time="0.004" classname="limits directive enforcer"/>
  <testcase name="should be greater than zero" time="0.002" classname="LimitsService #enforce amount"/>
  <testcase name="should not be undefined" time="0.002" classname="LimitsService #enforce amount"/>
  <testcase name="should be a valid amount" time="0.001" classname="LimitsService #enforce amount"/>
  <testcase name="should understand amount may be valid" time="0.001" classname="LimitsService #enforce available balance"/>
  <testcase name="should understand an amount may not exceed the available balance on the account when the payment is made today" time="0.006" classname="LimitsService #enforce available balance"/>
  <testcase name="should understand an amount may exceed the available balance on the account when the payment date is tomorrow" time="0.002" classname="LimitsService #enforce available balance"/>
  <testcase name="should understand an amount may exceed the available balance if it is scheduled after the current month" time="0.001" classname="LimitsService #enforce available balance"/>
  <testcase name="should understand the amount may not exceed five million rand" time="0.002" classname="LimitsService #enforce maximum amount"/>
  <testcase name="should configure resetPassword URL to /sbg-ib/rest/SecurityService/ResetPassword" time="0.002" classname="configuration when toggles are off"/>
  <testcase name="should configure cards URL to /sbg-ib/rest/SecurityService/CardsForSystemPrincipalId" time="0.002" classname="configuration when toggles are off"/>
  <testcase name="should configure migrate profile URL to /sbg-ib/rest/SecurityService/MigrateExistingUser" time="0.001" classname="configuration when toggles are off"/>
  <testcase name="should configure resetPassword URL to /sbg-ib/rest/SecurityService/ResetPassword" time="0.002" classname="configuration when toggles are on"/>
  <testcase name="should configure cards URL to /sbg-ib/rest/SecurityService/CardsAndPersonIdForSystemPrincipalId" time="0.002" classname="configuration when toggles are on"/>
  <testcase name="should configure migrate profile URL to /sbg-ib/rest/SecurityService/CopyIBUserProfile" time="0.001" classname="configuration when toggles are on"/>
  <testcase name="getUserCategories should ignore error response codes" time="0.003" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="createCustomer should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="createSavingsAccountApplication should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="getEAPLimit should ignore error response codes" time="0.001" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="addBeneficiary should ignore error response codes" time="0.006" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="changeBeneficiaryGroupMembership should ignore error response codes" time="0.003" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="deleteBeneficiary should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="addBeneficiaryGroup should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="renameBeneficiaryGroup should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="getUncollectedInstantMoneyVouchers should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="pay should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="transferBetweenAccounts should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="amendFutureTransactions should ignore error response codes" time="0.001" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="deleteFutureTransactions should ignore error response codes" time="0.001" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="paymentNotificationHistory should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="getAccountsNetIncome should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="prepaidHistory should ignore error response codes" time="0.003" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="prepaidRecharge should ignore error response codes" time="0.005" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="prepaidRechargePurchase should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="prepaidProviderDetails should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="maintainMonthlyPaymentLimit should ignore error response codes" time="0.001" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="register should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="changePassword should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="resetPassword should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="linkCard should ignore error response codes" time="0.006" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="linkCardStatus should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="migrateExistingUser should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="getOTPPreference should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="getTransactionsPage should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="paginatedStatements should ignore error response codes" time="0.003" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="formalStatementPreference should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="editFormalStatementPreference should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="targetedOffersGetOffer should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="targetedOffersGetTemplate should ignore error response codes" time="0.001" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateFraudConsentAndSourceOfFunds should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerIncomeAndExpenses should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerContactInfo should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerEmployment should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerConsent should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerAddress should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerBasicInfo should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="createCustomer should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="updateCustomerInformation should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="cancelInstantMoneyVouchers should ignore error response codes" time="0.002" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="Other endpoints should not ignore error response codes" time="0.025" classname="configuration ServiceEndpoint configuration"/>
  <testcase name="should store name, url, method and spinnerStyle" time="0.002" classname="EndpointDefinition create"/>
  <testcase name="should default spinnerStyle to global" time="0.002" classname="EndpointDefinition create"/>
  <testcase name="should call specified endpoint with empty data if payload not given" time="0.002" classname="EndpointDefinition makeRequest"/>
  <testcase name="should call specified endpoint with given payload" time="0.002" classname="EndpointDefinition makeRequest"/>
  <testcase name="should resolve with response when http call succeeds" time="0.003" classname="EndpointDefinition makeRequest"/>
  <testcase name="should reject with response when http call fails" time="0.002" classname="EndpointDefinition makeRequest"/>
  <testcase name="should reject with response when rejectAllFailures is on and response code is not 0000" time="0.003" classname="EndpointDefinition makeRequest"/>
  <testcase name="should display connectivity lost notification when http response status is 0" time="0.003" classname="EndpointDefinition makeRequest error notifications"/>
  <testcase name="should display service error notification when http call fails" time="0.004" classname="EndpointDefinition makeRequest error notifications"/>
  <testcase name="should not display service error notification when http call fails but omit flag is specified" time="0.004" classname="EndpointDefinition makeRequest error notifications"/>
  <testcase name="should not broadcast unsuccessfulMcaResponse when response code is 0000" time="0.004" classname="EndpointDefinition makeRequest error broadcasting"/>
  <testcase name="should broadcast unsuccessfulMcaResponse when response code is not 0000" time="0.004" classname="EndpointDefinition makeRequest error broadcasting"/>
  <testcase name="should broadcast unsuccessfulMcaResponse when http call fails" time="0.004" classname="EndpointDefinition makeRequest error broadcasting"/>
  <testcase name="should broadcast unsuccessfulMcaResponse when http response status is 0" time="0.004" classname="EndpointDefinition makeRequest error broadcasting"/>
  <testcase name="should set spinner style to endpoint default before making http call" time="0.007" classname="EndpointDefinition makeRequest spinner behavior"/>
  <testcase name="should reset spinner style to global after http call responds" time="0.004" classname="EndpointDefinition makeRequest spinner behavior"/>
  <testcase name="should set spinner style to specified one before making http call" time="0.008" classname="EndpointDefinition makeRequest spinner behavior"/>
  <testcase name="should record analytics form submission for a request" time="0.004" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should make a request when form is submitted" time="0.003" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should make a request when form is submitted with options" time="0.002" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should complete the analytics form submission if the promise is successfully resolved" time="0.003" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should cancel analytics form submission if there is an error code in the header of the response" time="0.003" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should cancel analytics form submission for rejection" time="0.003" classname="EndpointDefinition makeFormSubmissionRequest"/>
  <testcase name="should store the latest request&apos;s timestamp after a successful response" time="0.004" classname="Login Tests mcaHttp timestamp MCA calls"/>
  <testcase name="should store the latest request&apos;s timestamp after an unsuccessful response" time="0.004" classname="Login Tests mcaHttp timestamp MCA calls"/>
  <testcase name="should not remove timestamp if latest successful request does not have the header" time="0.003" classname="Login Tests mcaHttp timestamp MCA calls"/>
  <testcase name="should not remove timestamp if latest unsuccessful request does not have the header" time="0.003" classname="Login Tests mcaHttp timestamp MCA calls"/>
  <testcase name="should not touch timestamp upon a successful response" time="0.003" classname="Login Tests mcaHttp timestamp non-MCA calls"/>
  <testcase name="should not touch timestamp upon an unsuccessful response" time="0.002" classname="Login Tests mcaHttp timestamp non-MCA calls"/>
  <testcase name="should add the SBG token to the headers" time="0.007" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should redirect to login page if user is not logged in and tries to visit otp verify page" time="0.004" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should not redirect to login page if user registering and tries to visit otp verify page" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should not redirect to login page if user resetting password and tries to visit otp verify page" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should redirect to actual page if user is logged in and tries to visit page other than register or login" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should allow access to any page that does not require authentication if user is not logged in" time="0.004" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should redirect to login page when a 403 is returned from mca" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should remove DigitalId when a 403 is returned from mca" time="0.004" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should remove Card when a 403 is returned from mca" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should reject response when an error other than 403 nor 500 is returned from mca" time="0.003" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should not broadcast httpResponseError for a 500 that is not a timeout or not found error" time="0.004" classname="Login Tests mcaHttp authorisation"/>
  <testcase name="should go to OTP input page if a step-up is required" time="0.003" classname="Login Tests mcaHttp OTP"/>
  <testcase name="should broadcast httpRequestStarted" time="0.018" classname="Login Tests mcaHttp httpRequestStarted"/>
  <testcase name="should not broadcast httpRequestStarted if hash is top" time="0.003" classname="Login Tests mcaHttp httpRequestStarted"/>
  <testcase name="should expose the address properties" time="0" classname="Address"/>
  <testcase name="should return the specific address usage" time="0" classname="Address"/>
  <testcase name="should return false when the status code is not 2004, current code is 2003" time="0" classname="Dashboard isHotCarded"/>
  <testcase name="should return false when the status code is not 2004, current code is 7509" time="0" classname="Dashboard isHotCarded"/>
  <testcase name="should return false when the status code is not 2004, current code is 7510" time="0" classname="Dashboard isHotCarded"/>
  <testcase name="should return false when the status code is not 2004, current code is 7513" time="0" classname="Dashboard isHotCarded"/>
  <testcase name="should return false when the status code is not 2004, current code is 0000" time="0.001" classname="Dashboard isHotCarded"/>
  <testcase name="should return true when card is status code 2004" time="0" classname="Dashboard isHotCarded"/>
  <testcase name="should return false when there is no card error" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return false when there is a card error not in the list of blocked codes or status 500" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when the card error code is 2003" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when the card error code is 2004" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when the card error code is 7509" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when the card error code is 7510" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when the card error code is 7513" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return true when there is a card error with status 500" time="0" classname="Dashboard isBlocked"/>
  <testcase name="should return false when there is no card error" time="0.005" classname="Dashboard canBeActivated"/>
  <testcase name="should return false when there is a card error not in the list of activate response codes" time="0" classname="Dashboard canBeActivated"/>
  <testcase name="should return true when the card error code is 7506" time="0" classname="Dashboard canBeActivated"/>
  <testcase name="should return true when the card error code is 7516" time="0" classname="Dashboard canBeActivated"/>
  <testcase name="should return true when the card error code is 7501" time="0" classname="Dashboard canBeActivated"/>
  <testcase name="should return true when the card error code is 7515" time="0" classname="Dashboard canBeActivated"/>
  <testcase name="should return false when the response code is not in the list of activate OTP response codes" time="0" classname="Dashboard requiresActivateOTP"/>
  <testcase name="should return true when the response code is 7506" time="0" classname="Dashboard requiresActivateOTP"/>
  <testcase name="should return true when the response code is 7516" time="0" classname="Dashboard requiresActivateOTP"/>
  <testcase name="should return true when the response code is 7501" time="0" classname="Dashboard requiresActivateOTP"/>
  <testcase name="should return false when the response code is not 7515" time="0" classname="Dashboard requiresAmendAccessDirect"/>
  <testcase name="should return true when the response code is 7515" time="0.001" classname="Dashboard requiresAmendAccessDirect"/>
  <testcase name="should return error message if no suitable status can be determined" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return active if we have a card number" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Blocked when the card error code is 2003" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Blocked when the card error code is 2004" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Blocked when the card error code is 7509" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Blocked when the card error code is 7510" time="0.005" classname="Dashboard cardStatus"/>
  <testcase name="should return Blocked when the card error code is 7513" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7506" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7516" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7501" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should return Activate internet banking when the card error code is 7515" time="0" classname="Dashboard cardStatus"/>
  <testcase name="should set the card number" time="0" classname="Dashboard set card for a valid card"/>
  <testcase name="should mask a 9 digit card number" time="0" classname="Dashboard set card for a valid card"/>
  <testcase name="should not mask a non-9 digit card number" time="0" classname="Dashboard set card for a valid card"/>
  <testcase name="should set the cardHolder" time="0" classname="Dashboard set card for a valid card for SED profiles"/>
  <testcase name="should clear the card error" time="0" classname="Dashboard set card for a valid card for a dashboard with an existing card"/>
  <testcase name="should set the cardError" time="0" classname="Dashboard set card for an invalid card"/>
  <testcase name="should set the masked card number" time="0" classname="Dashboard set card for an invalid card"/>
  <testcase name="should set the cardError if there is no card number" time="0" classname="Dashboard set card for an invalid card"/>
  <testcase name="should clear the card error" time="0" classname="Dashboard set card for an invalid card for a dashboard with an existing card"/>
  <testcase name="should set the unmasked card number for a non 9 digit card with a success status code " time="0" classname="Dashboard set card for a given card"/>
  <testcase name="should set the unmasked card number for a non 9 digit card with a non success status code " time="0" classname="Dashboard set card for a given card"/>
  <testcase name="should set the card number for a 9 digit card with a success status code " time="0.001" classname="Dashboard set card for a given card"/>
  <testcase name="should set the card number for a 9 digit card with a non success status code" time="0" classname="Dashboard set card for a given card"/>
  <testcase name="should mask only 9 digit card numbers" time="0" classname="Dashboard set card for a given card"/>
  <testcase name="should not mask a card number which is not  9 digits long" time="0" classname="Dashboard set card for a given card"/>
  <testcase name="should be set to false for single payments" time="0.001" classname="Payment Detail is recurring payment"/>
  <testcase name="should be set to true for daily payments" time="0" classname="Payment Detail is recurring payment"/>
  <testcase name="should be set to true for weekly payments" time="0" classname="Payment Detail is recurring payment"/>
  <testcase name="should be set to true for monthly payments" time="0" classname="Payment Detail is recurring payment"/>
  <testcase name="should say payment date when not recurring" time="0" classname="Payment Detail payment date label"/>
  <testcase name="should say first payment date when recurring" time="0" classname="Payment Detail payment date label"/>
  <testcase name="should be undefined when not recurring" time="0" classname="Payment Detail interval name"/>
  <testcase name="should calculate correctly in days" time="0" classname="Payment Detail interval name for recurring payments"/>
  <testcase name="should calculate correctly in weeks" time="0.004" classname="Payment Detail interval name for recurring payments"/>
  <testcase name="should calculate correctly in months" time="0" classname="Payment Detail interval name for recurring payments"/>
  <testcase name="should return the interval value for use in constructing the dropdown on the partial" time="0.001" classname="Payment Detail get intervals"/>
  <testcase name="should return undefined for non-recurring payments" time="0" classname="Payment Detail get to date"/>
  <testcase name="should calculate correctly in days" time="0.004" classname="Payment Detail get to date for recurring payments"/>
  <testcase name="should calculate correctly in weeks" time="0.001" classname="Payment Detail get to date for recurring payments"/>
  <testcase name="should calculate correctly in months" time="0.002" classname="Payment Detail get to date for recurring payments"/>
  <testcase name="should be 0 when no repeat interval specified" time="0" classname="Payment Detail get maximum repeats"/>
  <testcase name="should be 366 for daily" time="0.001" classname="Payment Detail get maximum repeats"/>
  <testcase name="should be 53 for weekly" time="0" classname="Payment Detail get maximum repeats"/>
  <testcase name="should be 12 for monthly" time="0.001" classname="Payment Detail get maximum repeats"/>
  <testcase name="should return today for non recurring payments" time="0" classname="Payment Detail earliest payment date"/>
  <testcase name="should return tomorrow for recurring payments" time="0" classname="Payment Detail earliest payment date"/>
  <testcase name="should be one year from today" time="0.004" classname="Payment Detail latest payment date"/>
  <testcase name="should set repeat interval to single" time="0.001" classname="Payment Detail state changed to not recurring"/>
  <testcase name="should unset repeat number" time="0" classname="Payment Detail state changed to not recurring"/>
  <testcase name="should set from date to provided date" time="0" classname="Payment Detail state changed to not recurring"/>
  <testcase name="should set repeat interval to default (Monthly)" time="0" classname="Payment Detail state changed to recurring payment"/>
  <testcase name="should set repeat number to default (2)" time="0.001" classname="Payment Detail state changed to recurring payment"/>
  <testcase name="when set to today should change to tomorrow" time="0.003" classname="Payment Detail state changed to recurring payment from date"/>
  <testcase name="when set to future date should maintain that date" time="0.001" classname="Payment Detail state changed to recurring payment from date"/>
  <testcase name="should take 2 as default" time="0" classname="Payment Detail minimum repeat number"/>
  <testcase name="should take number from constructor properties" time="0" classname="Payment Detail minimum repeat number"/>
  <testcase name="should return one for 1 as default" time="0" classname="Payment Detail minimum repeat words"/>
  <testcase name="should return two for 2" time="0" classname="Payment Detail minimum repeat words"/>
  <testcase name="should return empty for any other number" time="0" classname="Payment Detail minimum repeat words"/>
  <testcase name="should set repeat number to default (2)" time="0.004" classname="Payment Detail default repeat number"/>
  <testcase name="should generate message using repeat interval name and repeat number" time="0.001" classname="Payment Detail get payment description"/>
  <testcase name="should not make the call to get operators when no SED profile exists" time="0.003" classname="OperatorController OperatorController not make the call to get operators"/>
  <testcase name="should return viewUsers when you have active users" time="0.003" classname="OperatorController OperatorController Get the number active operators"/>
  <testcase name="should return getStarted when there are no active users" time="0.003" classname="OperatorController OperatorController Get the number active operators"/>
  <testcase name="should return register when only businessAccounts Exist" time="0.003" classname="OperatorController OperatorController Get the number active operators"/>
  <testcase name="should contain the systemPrincipalIdentifiers provided to the payload then get the response" time="0.005" classname="OperatorService"/>
  <testcase name="should return an undefined error message on a 500 response" time="0.008" classname="OperatorService"/>
  <testcase name="should use the correct template" time="0.002" classname="Account Sharing Add User Details routes when adding a new user"/>
  <testcase name="should use the correct controller" time="0.003" classname="Account Sharing Add User Details routes when adding a new user"/>
  <testcase name="should create flow with add user steps" time="0.007" classname="Account Sharing Add User Details AddUserDetailsController flow setup"/>
  <testcase name="should have the flow headername set to Add user" time="0.003" classname="Account Sharing Add User Details AddUserDetailsController flow setup"/>
  <testcase name="should have the controller headername set to the flow user" time="0.003" classname="Account Sharing Add User Details AddUserDetailsController flow setup"/>
  <testcase name="should get lookup values from Lookups" time="0.002" classname="Account Sharing Add User Details AddUserDetailsController id type lookups"/>
  <testcase name="should know when the user details are for a foreign person" time="0.002" classname="Account Sharing Add User Details AddUserDetailsController id type lookups"/>
  <testcase name="should know when the user details are for a south african person" time="0.002" classname="Account Sharing Add User Details AddUserDetailsController id type lookups"/>
  <testcase name="should set the default idType to SA ID" time="0.002" classname="Account Sharing Add User Details AddUserDetailsController id type lookups"/>
  <testcase name="should navigate back to where the user came from when cancelling" time="0.002" classname="Account Sharing Add User Details AddUserDetailsController navigation"/>
  <testcase name="should redirect user to provisional statement upon clicking on the account" time="0.004" classname="Account Summary Unit Test AccountSummaryController Account Summary show statement"/>
  <testcase name="should populate the main menu when user is authenticated" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary menu"/>
  <testcase name="should not highlight its menu item when it is not active" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary menu"/>
  <testcase name="should activate the menu if the current page is the account summary page " time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary menu"/>
  <testcase name="should have a default welcome greeting" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary greeting"/>
  <testcase name="should have a newly linked card greeting" time="0.006" classname="Account Summary Unit Test AccountSummaryController Account Summary greeting"/>
  <testcase name="should have a newly linked business greeting" time="0.005" classname="Account Summary Unit Test AccountSummaryController Account Summary greeting"/>
  <testcase name="should set CashflowChartPropertyMapping to Income when the route&apos;s CashflowChartPropertyMapping parameters = transactional-cash-in" time="0.005" classname="Account Summary Unit Test AccountSummaryController Account Summary initialize"/>
  <testcase name="should set CashflowChartPropertyMapping to Expenses when the route&apos;s CashflowChartPropertyMapping paramters = transactional-cash-out" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary initialize"/>
  <testcase name="should not set CashflowChartPropertyMapping when the route&apos;s CashflowChartPropertyMapping paramters != transactional-cash-out or transactional-cash-out" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary initialize"/>
  <testcase name="Should call availableAccounts" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary initialize"/>
  <testcase name="should list all available accounts" time="0.004" classname="Account Summary Unit Test AccountSummaryController Account Summary available accounts"/>
  <testcase name="should show info message without available account" time="0.004" classname="Account Summary Unit Test AccountSummaryController Account Summary available accounts"/>
  <testcase name="should have empty list of accounts when accounts cannot be retrieved" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary available accounts"/>
  <testcase name="should display an error when accounts cannot be retrieved" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary available accounts"/>
  <testcase name="should have empty list of accounts when service call is successful but no accounts are available" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary available accounts"/>
  <testcase name="should know the information bar can be removed on load of account summary page" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has info"/>
  <testcase name="should know when there are no transaction accounts" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are transaction accounts" time="0.017" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are no credit card accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are credit card accounts" time="0.002" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are no loan accounts" time="0.006" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are loan accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are no investment accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are investment accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are no unknown accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know when there are unknown accounts" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should return false when accounts array passed into it is undefined" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary has accounts"/>
  <testcase name="should know the password has changed successfully" time="0.007" classname="Account Summary Unit Test AccountSummaryController Account Summary is successful"/>
  <testcase name="Should build a menigaProfile with the list of accounts and  personal finance management id" time="0.004" classname="Account Summary Unit Test AccountSummaryController Account Summary Given a list of accounts and a personal finance management id With personalFinanceManagementToggle on"/>
  <testcase name="Should Not build a MenigaProfile when the user has no card" time="0.004" classname="Account Summary Unit Test AccountSummaryController Account Summary Given a list of accounts and a personal finance management id With personalFinanceManagementToggle on"/>
  <testcase name="Should NOT build a menigaProfile with the list of accounts and  personal finance management id" time="0.003" classname="Account Summary Unit Test AccountSummaryController Account Summary Given a list of accounts and a personal finance management id With personalFinanceManagementToggle off"/>
  <testcase name="should not replace the custom tag when personalFinanceManagement is turned off" time="0.007" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should replace the custom tag" time="0.025" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should render a div" time="0.018" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should have isolated scope with variables set to the values passed to it" time="0.013" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the cashflow type on the scope to the cashflow type bount to it" time="0.012" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the cashflow colour to red if cashflowPropertyMapping = Expenses" time="0.013" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the cashflow colour to black if cashflowPropertyMapping != Expenses or Income" time="0.012" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the cashflow colour to green if cashflowPropertyMapping = Income" time="0.013" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the chart header to &quot;Cash in&quot; if cashflowPropertyMapping = Income" time="0.012" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the chart header to &quot;Cash out&quot; if cashflowPropertyMapping = Expenses" time="0.031" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set the chart header to &quot;&quot; if cashflowPropertyMapping != Expenses or Income" time="0.013" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should set account types colour palette" time="0.012" classname="Accounts Cashflows Chart Directive"/>
  <testcase name="should call getAccountsCashflows on menigaNetIncome service" time="0.013" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="should set the chart colours based on the account cashflows returned" time="0.014" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="should set the chart data based on the income in the account cashflows returned" time="0.015" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="should set the chart cashflows data based on the income in the account cashflows returned" time="0.02" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="should set from month scope variable to earliest month in data" time="0.014" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="should set Cashflow Total scope variable to the absolute sum of the values in the data" time="0.015" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful with account cashflows data"/>
  <testcase name="recycle the chart colours if there is more data than colours" time="0.015" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful chart segment colouring"/>
  <testcase name="should set directive properties based on data" time="0.021" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows successful without account cashflows data"/>
  <testcase name="should set the error message on scope" time="0.014" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows unsuccessful"/>
  <testcase name="should not set directive scope properties based on any data" time="0.032" classname="Accounts Cashflows Chart Directive initialiseAccountsCashflows unsuccessful"/>
  <testcase name="should call initialiseAccountsNetIncome" time="0.013" classname="Accounts Cashflows Chart Directive when accounts array is changed"/>
  <testcase name="should return the correct colours" time="0.002" classname="accounts cashflows chart colours"/>
  <testcase name="should populate the main menu when user is authenticated" time="0.005" classname="Account Origination Apply for Account menu"/>
  <testcase name="should not highlight its menu item when it is not active" time="0.004" classname="Account Origination Apply for Account menu"/>
  <testcase name="should activate the menu if the current page is the account origination products" time="0.003" classname="Account Origination Apply for Account menu"/>
  <testcase name="should activate the menu if the current page is the customer information page" time="0.004" classname="Account Origination Apply for Account menu"/>
  <testcase name="should activate the menu if the current page is the account origination offers" time="0.003" classname="Account Origination Apply for Account menu"/>
  <testcase name="should assign application to scope" time="0.012" classname="accepted offer directive offer about to expire"/>
  <testcase name="should be enabled by default" time="0.013" classname="apply for account directive is enabled behaviour"/>
  <testcase name="should be disabled when the bound property to is-disabled is set to true" time="0.012" classname="apply for account directive is enabled behaviour"/>
  <testcase name="should be Next if pure-save provider" time="0.011" classname="apply for account directive button text"/>
  <testcase name="should be Apply now if rcp provider" time="0.009" classname="apply for account directive button text"/>
  <testcase name="should start current account application" time="0.01" classname="apply for account directive Current Account Type"/>
  <testcase name="should create the flow with the current account application steps" time="0.008" classname="apply for account directive Current Account Type"/>
  <testcase name="should have the flow header as Your Details" time="0.008" classname="apply for account directive Current Account Type"/>
  <testcase name="should go to current account pre-screen page" time="0.01" classname="apply for account directive Current Account Type"/>
  <testcase name="should know whether modal should be shown" time="0.004" classname="Cancel confirmation Service"/>
  <testcase name="should navigate to the set location" time="0.003" classname="Cancel confirmation Service when cancelling editing of customer information given edit form has been set and it is pristine"/>
  <testcase name="should revert customer information" time="0.003" classname="Cancel confirmation Service when cancelling editing of customer information given edit form has been set and it is pristine"/>
  <testcase name="should not navigate" time="0.006" classname="Cancel confirmation Service when cancelling editing of customer information given edit form has not been set"/>
  <testcase name="should set cancel confirmation modal to true" time="0.003" classname="Cancel confirmation Service when cancelling editing of customer information given edit form has not been set"/>
  <testcase name="should set show modal to false" time="0.003" classname="Cancel confirmation Service hide()"/>
  <testcase name="should set show modal to false" time="0.002" classname="Cancel confirmation Service confirmCancel()"/>
  <testcase name="should revert customer information data" time="0.003" classname="Cancel confirmation Service confirmCancel()"/>
  <testcase name="should navigate if navigate callback has been set" time="0.002" classname="Cancel confirmation Service confirmCancel()"/>
  <testcase name="should navigate to location specified in the $routeParams" time="0.003" classname="Cancel confirmation Service confirmCancel()"/>
  <testcase name="should rely on cancel confirmation service to cancel editing of customer information" time="0.002" classname="Cancel confirmation Controller"/>
  <testcase name="should rely on cancel confirmation service to find out when modal should be shown" time="0.002" classname="Cancel confirmation Controller"/>
  <testcase name="should rely on cancel confirmation service to navigate back" time="0.002" classname="Cancel confirmation Controller"/>
  <testcase name="should set the form in cancel confirmation service given it exists" time="0.002" classname="Cancel confirmation Controller with edit form"/>
  <testcase name="should not set the form in cancel confirmation service given it does not exist" time="0.002" classname="Cancel confirmation Controller with edit form"/>
  <testcase name="should display cancel confirmation modal" time="0.026" classname="Cancel confirmation Directive when show modal is true"/>
  <testcase name="should hide cancel confirmation modal" time="0.009" classname="Cancel confirmation Directive when show modal is false"/>
  <testcase name="pending icon should be visible" time="0.012" classname="pending offer directive offer about to expire"/>
  <testcase name="scheduled icon should not be visible" time="0.008" classname="pending offer directive offer about to expire"/>
  <testcase name="pending icon should not be visible" time="0.008" classname="pending offer directive offer not about to expire"/>
  <testcase name="scheduled icon should be visible" time="0.007" classname="pending offer directive offer not about to expire"/>
  <testcase name="should display date of application" time="0.007" classname="pending offer directive offer not about to expire"/>
  <testcase name="should have product title" time="0.018" classname="Product tile For new applications"/>
  <testcase name="should have product description" time="0.015" classname="Product tile For new applications"/>
  <testcase name="should have image source" time="0.015" classname="Product tile For new applications"/>
  <testcase name="should have image alternative text" time="0.013" classname="Product tile For new applications"/>
  <testcase name="should NOT have a text notification" time="0.015" classname="Product tile For new applications"/>
  <testcase name="should NOT have an account information section" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should have a apply-for-account button for the product type" time="0.013" classname="Product tile For new applications"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.019" classname="Product tile For new applications"/>
  <testcase name="should NOT have pending offer details" time="0.024" classname="Product tile For new applications"/>
  <testcase name="should NOT have accepted offer details" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should NOT have product description" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have a text notification" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an account information section" time="0.03" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a apply-for-account button for the product type" time="0.016" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have pending offer details" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have accepted offer details" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should have product title" time="0.015" classname="Product tile For pending applications"/>
  <testcase name="should have product description" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have image source" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have image alternative text" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should NOT have a text notification" time="0.016" classname="Product tile For pending applications"/>
  <testcase name="should NOT have an account information section" time="0.017" classname="Product tile For pending applications"/>
  <testcase name="should NOT have an apply-for-account button" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have pending offer details" time="0.024" classname="Product tile For pending applications"/>
  <testcase name="should NOT have accepted offer details" time="0.018" classname="Product tile For pending applications"/>
  <testcase name="should have product title" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have product description" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should have image source" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have image alternative text" time="0.016" classname="Product tile For accepted applications"/>
  <testcase name="should have a text notification" time="0.038" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an account information section" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an apply-for-account button" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have pending offer details" time="0.012" classname="Product tile For accepted applications"/>
  <testcase name="should have accepted offer details" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have product title" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have product description" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have image source" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have image alternative text" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have a text notification" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have an account information section" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have an apply-for-account button" time="0.022" classname="Product tile For customer who already have an account"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.018" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have pending offer details" time="0.016" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have accepted offer details" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should use product&apos;s title when application is new and the application product name is set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is new and the application product name is NOT set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is pending and the application product name is set" time="0.03" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is pending and the application product name is NOT set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use application&apos;s product name when application is EXISTING and the application product name is set" time="0.015" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is EXISTING and the application product name is NOT set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use application&apos;s product name when application is ACCEPTED and the application product name is set" time="0.013" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is ACCEPTED and the application product name is NOT set" time="0.013" classname="Product tile Conditional product title"/>
  <testcase name="should call the continue application function bound to it" time="0.015" classname="Product tile Continue application"/>
  <testcase name="should have product title" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should have product description" time="0.013" classname="Product tile For new applications"/>
  <testcase name="should have image source" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should have image alternative text" time="0.018" classname="Product tile For new applications"/>
  <testcase name="should NOT have a text notification" time="0.02" classname="Product tile For new applications"/>
  <testcase name="should NOT have an account information section" time="0.015" classname="Product tile For new applications"/>
  <testcase name="should have a apply-for-account button for the product type" time="0.013" classname="Product tile For new applications"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.015" classname="Product tile For new applications"/>
  <testcase name="should NOT have pending offer details" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should NOT have accepted offer details" time="0.014" classname="Product tile For new applications"/>
  <testcase name="should NOT have product description" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have a text notification" time="0.03" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an account information section" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a apply-for-account button for the product type" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have pending offer details" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have accepted offer details" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have product title" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have product description" time="0.015" classname="Product tile For pending applications"/>
  <testcase name="should have image source" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have image alternative text" time="0.013" classname="Product tile For pending applications"/>
  <testcase name="should NOT have a text notification" time="0.018" classname="Product tile For pending applications"/>
  <testcase name="should NOT have an account information section" time="0.019" classname="Product tile For pending applications"/>
  <testcase name="should NOT have an apply-for-account button" time="0.016" classname="Product tile For pending applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have pending offer details" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should NOT have accepted offer details" time="0.014" classname="Product tile For pending applications"/>
  <testcase name="should have product title" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have product description" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have image source" time="0.029" classname="Product tile For accepted applications"/>
  <testcase name="should have image alternative text" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have a text notification" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an account information section" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have an apply-for-account button" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have a link to the product&apos;s details page which contains a track click for the product" time="0.014" classname="Product tile For accepted applications"/>
  <testcase name="should NOT have pending offer details" time="0.013" classname="Product tile For accepted applications"/>
  <testcase name="should have accepted offer details" time="0.012" classname="Product tile For accepted applications"/>
  <testcase name="should have product title" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have product description" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have image source" time="0.02" classname="Product tile For customer who already have an account"/>
  <testcase name="should have image alternative text" time="0.017" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have a text notification" time="0.016" classname="Product tile For customer who already have an account"/>
  <testcase name="should have an account information section" time="0.015" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have an apply-for-account button" time="0.014" classname="Product tile For customer who already have an account"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.015" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have pending offer details" time="0.013" classname="Product tile For customer who already have an account"/>
  <testcase name="should NOT have accepted offer details" time="0.013" classname="Product tile For customer who already have an account"/>
  <testcase name="should use product&apos;s title when application is new and the application product name is set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is new and the application product name is NOT set" time="0.035" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is pending and the application product name is set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is pending and the application product name is NOT set" time="0.013" classname="Product tile Conditional product title"/>
  <testcase name="should use application&apos;s product name when application is EXISTING and the application product name is set" time="0.013" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is EXISTING and the application product name is NOT set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use application&apos;s product name when application is ACCEPTED and the application product name is set" time="0.014" classname="Product tile Conditional product title"/>
  <testcase name="should use product&apos;s title when application is ACCEPTED and the application product name is NOT set" time="0.013" classname="Product tile Conditional product title"/>
  <testcase name="should call the continue application function bound to it" time="0.014" classname="Product tile Continue application"/>
  <testcase name="Apply now should be hidden and account number should be visible" time="0.023" classname="available products template Current Account Section EXISTING Current Account"/>
  <testcase name="should show product accepted" time="0.019" classname="available products template Current Account Section EXISTING Current Account"/>
  <testcase name="should not show application in progress icon" time="0.018" classname="available products template Current Account Section EXISTING Current Account"/>
  <testcase name="should show current account description" time="0.017" classname="available products template Current Account Section EXISTING Current Account"/>
  <testcase name="Apply now should be visible and account number should be hidden" time="0.017" classname="available products template Current Account Section NEW Current Account"/>
  <testcase name="should show product accepted" time="0.017" classname="available products template Current Account Section NEW Current Account"/>
  <testcase name="should show current account description" time="0.034" classname="available products template Current Account Section NEW Current Account"/>
  <testcase name="Apply now should be hidden and account number should be hidden" time="0.017" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="Details should be hidden" time="0.017" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="Pending offer component should be present" time="0.016" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="should show product accepted" time="0.016" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="should not show application in progress icon" time="0.017" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="should show current account description" time="0.018" classname="available products template Current Account Section PENDING Current Account"/>
  <testcase name="Apply now should be hidden and account number should be hidden" time="0.017" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="Details should be hidden" time="0.018" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="Accepted offer component should be present" time="0.017" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="should show product accepted" time="0.027" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="should show application in progress icon" time="0.022" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="should  notshow current account description" time="0.034" classname="available products template Current Account Section ACCEPTED Current Account"/>
  <testcase name="Apply now should be hidden and account number should be visible" time="0.018" classname="available products template RCP Account Section with existing RCP account"/>
  <testcase name="Pending offer component should not be present" time="0.018" classname="available products template RCP Account Section with existing RCP account"/>
  <testcase name="should show borrow again text" time="0.017" classname="available products template RCP Account Section with existing RCP account"/>
  <testcase name="Apply now should be visible and account number should be hidden" time="0.017" classname="available products template RCP Account Section new RCP application"/>
  <testcase name="Pending offer component should not be present" time="0.017" classname="available products template RCP Account Section new RCP application"/>
  <testcase name="should show borrow again text" time="0.016" classname="available products template RCP Account Section new RCP application"/>
  <testcase name="Apply now should be hidden and account number should not be visible" time="0.017" classname="available products template RCP Account Section pending RCP application"/>
  <testcase name="Details button should not be present" time="0.017" classname="available products template RCP Account Section pending RCP application"/>
  <testcase name="Pending offer component should be present" time="0.016" classname="available products template RCP Account Section pending RCP application"/>
  <testcase name="should show borrow again text" time="0.016" classname="available products template RCP Account Section pending RCP application"/>
  <testcase name="Apply now should be hidden" time="0.017" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="Existing offer should not be visible" time="0.034" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="Pending offer should not be visible" time="0.023" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="Details button should not be present" time="0.022" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="Accepted offer component should be present with account number and accepted date" time="0.019" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="should show application in progress icon" time="0.017" classname="available products template RCP Account Section accepted RCP application"/>
  <testcase name="should use the correct template" time="0.003" classname="Available Products routes when selecting Apply for Account tab"/>
  <testcase name="should use the correct controller" time="0.002" classname="Available Products routes when selecting Apply for Account tab"/>
  <testcase name="currentAccount should be undefined" time="0.003" classname="Available Products AvailableProductsController current account without Current Account"/>
  <testcase name="currentAccountTitle should be Current account" time="0.003" classname="Available Products AvailableProductsController current account without Current Account"/>
  <testcase name="should be defined" time="0.002" classname="Available Products AvailableProductsController current account with Current Account"/>
  <testcase name="currentAccountTitle should be Current account" time="0.003" classname="Available Products AvailableProductsController current account with Current Account"/>
  <testcase name="currentAccountTitle should be Current account" time="0.002" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount"/>
  <testcase name="should invoke the CurrentAccountOffersService service with the given application number" time="0.003" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount successfull response"/>
  <testcase name="should continue the Current Account application with the offer that was returned" time="0.003" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount successfull response"/>
  <testcase name="should navigate to the current account pre-screen page" time="0.007" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount successfull response"/>
  <testcase name="should create the Flow" time="0.006" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount successfull response"/>
  <testcase name="should continue to the next step of flow" time="0.005" classname="Available Products AvailableProductsController current account With a pending Current Account application continueCurrentAccount successfull response"/>
  <testcase name="rcpAccount should exist" time="0.003" classname="Available Products AvailableProductsController RCP account with RCP account"/>
  <testcase name="rcpAccount should be undefined" time="0.003" classname="Available Products AvailableProductsController RCP account without RCP account"/>
  <testcase name="should be a new application" time="0.003" classname="Available Products AvailableProductsController RCP account without RCP account"/>
  <testcase name="should invoke the quotation service with the given application number" time="0.003" classname="Available Products AvailableProductsController RCP account With a pending RCP application rcpViewOffer happy path"/>
  <testcase name="should continue the rcp application with the offer that was returned" time="0.003" classname="Available Products AvailableProductsController RCP account With a pending RCP application rcpViewOffer happy path"/>
  <testcase name="should navigate to the rcp offer page" time="0.003" classname="Available Products AvailableProductsController RCP account With a pending RCP application rcpViewOffer happy path"/>
  <testcase name="Should invoke the notification service" time="0.002" classname="Available Products AvailableProductsController RCP account service error"/>
  <testcase name="should have service with getOffers" time="0.004" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should have a function called continueToApplication" time="0.004" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should direct to correct location" time="0.004" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should have isNew function" time="0.026" classname="AccountOriginationProvider offer provider for current-account application"/>
  <testcase name="should have offer function" time="0.003" classname="AccountOriginationProvider offer provider for current-account application"/>
  <testcase name="should have decline function" time="0.003" classname="AccountOriginationProvider offer provider for current-account application"/>
  <testcase name="should have a start function" time="0.003" classname="AccountOriginationProvider offer provider for current-account application"/>
  <testcase name="should have paths.offer" time="0.003" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should have offerText" time="0.003" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should have applyText" time="0.003" classname="AccountOriginationProvider offer provider for current-account"/>
  <testcase name="should have service with getOffers" time="0.003" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should have a function called continueToApplication" time="0.003" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should direct to correct location" time="0.003" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should have isNew function" time="0.003" classname="AccountOriginationProvider offer provider for rcp application"/>
  <testcase name="should have offer function" time="0.007" classname="AccountOriginationProvider offer provider for rcp application"/>
  <testcase name="should have decline function" time="0.006" classname="AccountOriginationProvider offer provider for rcp application"/>
  <testcase name="should have a start function" time="0.006" classname="AccountOriginationProvider offer provider for rcp application"/>
  <testcase name="should have paths.offer" time="0.004" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should have offerText" time="0.003" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should have applyText" time="0.003" classname="AccountOriginationProvider offer provider for rcp"/>
  <testcase name="should have service with getOffers" time="0.003" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should have a function called continueToApplication" time="0.003" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should direct to correct location" time="0.003" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should have isNew function" time="0.003" classname="AccountOriginationProvider offer provider for pure-save application"/>
  <testcase name="should have offer function" time="0.003" classname="AccountOriginationProvider offer provider for pure-save application"/>
  <testcase name="should have decline function" time="0.003" classname="AccountOriginationProvider offer provider for pure-save application"/>
  <testcase name="should have a start function" time="0.003" classname="AccountOriginationProvider offer provider for pure-save application"/>
  <testcase name="should have paths.offer" time="0.004" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should have offerText" time="0.004" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should have applyText" time="0.003" classname="AccountOriginationProvider offer provider for pure-save"/>
  <testcase name="should have service with getOffers" time="0.007" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should have a function called continueToApplication" time="0.003" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should direct to correct location" time="0.004" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should have isNew function" time="0.004" classname="AccountOriginationProvider offer provider for market-link application"/>
  <testcase name="should have offer function" time="0.027" classname="AccountOriginationProvider offer provider for market-link application"/>
  <testcase name="should have decline function" time="0.003" classname="AccountOriginationProvider offer provider for market-link application"/>
  <testcase name="should have a start function" time="0.003" classname="AccountOriginationProvider offer provider for market-link application"/>
  <testcase name="should have paths.offer" time="0.003" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should have offerText" time="0.003" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should have applyText" time="0.004" classname="AccountOriginationProvider offer provider for market-link"/>
  <testcase name="should have service with getOffers" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="should have a function called continueToApplication" time="0.003" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="should direct to correct location" time="0.003" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="should have isNew function" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account application"/>
  <testcase name="should have offer function" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account application"/>
  <testcase name="should have decline function" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account application"/>
  <testcase name="should have a start function" time="0.003" classname="AccountOriginationProvider offer provider for tax-free-call-account application"/>
  <testcase name="should have paths.offer" time="0.007" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="should have offerText" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="should have applyText" time="0.004" classname="AccountOriginationProvider offer provider for tax-free-call-account"/>
  <testcase name="with user that has no customer information rcp and current should be NEW" time="0.005" classname="ApplicationLoader"/>
  <testcase name="with EXISTING status when account is present" time="0.004" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="with EXISTING status when account and item for approval are present" time="0.004" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="with PENDING status when quotation is present" time="0.005" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="with ACCEPTED status when item for approval and quotation are present" time="0.004" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="with NEW status when no account or started application is present" time="0.004" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="should not load accounts for new customer" time="0.003" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="should handle errors" time="0.003" classname="ApplicationLoader should load application for RCP"/>
  <testcase name="with EXISTING status when account is present" time="0.003" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="with EXISTING status when account and item for approval are present" time="0.002" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="with PENDING status when quotation is present" time="0.004" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="with ACCEPTED status when item for approval and quotation are present" time="0.026" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="with NEW status when no account or started application is present" time="0.003" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="should not load accounts for new customer" time="0.003" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="should handle errors" time="0.007" classname="ApplicationLoader should load application for CURRENT"/>
  <testcase name="response contains current and RCP account" time="0.004" classname="Items for approval service getItemsForApproval list"/>
  <testcase name="response contains current account only" time="0.004" classname="Items for approval service getItemsForApproval list"/>
  <testcase name="response contains rcp account only" time="0.004" classname="Items for approval service getItemsForApproval list"/>
  <testcase name="should resolve with null rcp and current quotations when none are present" time="0.017" classname="QuotationsService list"/>
  <testcase name="should invoke getQuotations using the user principal" time="0.004" classname="QuotationsService list"/>
  <testcase name="should return latest rcp and current account quotations" time="0.006" classname="QuotationsService list"/>
  <testcase name="should calculate expiry according to the current date" time="0.004" classname="QuotationsService list"/>
  <testcase name="should ignore declined quotations " time="0.005" classname="QuotationsService list"/>
  <testcase name="should return first rcp offer details object " time="0.009" classname="QuotationsService getRcpQuotationDetails"/>
  <testcase name="should not request overdraft documents if overdraft accepted" time="0.012" classname="what happens next directive"/>
  <testcase name="should request overdraft documents if overdraft accepted" time="0.008" classname="what happens next directive"/>
  <testcase name="should request overdraft documents if overdraft accepted" time="0.012" classname="what happens next directive"/>
  <testcase name="should show offer validity instructions if overdraft accepted" time="0.008" classname="what happens next directive"/>
  <testcase name="should not show offer validity instructions if overdraft accepted" time="0.011" classname="what happens next directive"/>
  <testcase name="should include account number in mailto link" time="0.007" classname="what happens next directive"/>
  <testcase name="should have less text on short version" time="0.007" classname="what happens next directive"/>
  <testcase name="should have more text on non short version" time="0.007" classname="what happens next directive"/>
  <testcase name="should not ask for customer documents if customer is KYC" time="0.007" classname="what happens next directive"/>
  <testcase name="should ask for customer documents if customer is not KYC" time="0.006" classname="what happens next directive"/>
  <testcase name="should show linking card instructions if customer is new to bank" time="0.007" classname="what happens next directive"/>
  <testcase name="should not show linking card instructions if customer is not new to bank" time="0.007" classname="what happens next directive"/>
  <testcase name="prescreening should report that it has not been completed by default" time="0.001" classname="Current Account Application Factory"/>
  <testcase name="should be falsy if not started" time="0.001" classname="Current Account Application Factory isNew"/>
  <testcase name="should be truthy if started" time="0.001" classname="Current Account Application Factory isNew"/>
  <testcase name="should be falsy if not continued" time="0.001" classname="Current Account Application Factory isPending"/>
  <testcase name="should be truthy if continued" time="0.001" classname="Current Account Application Factory isPending"/>
  <testcase name="should be falsy if product is not selected" time="0.001" classname="Current Account Application Factory isInProgress"/>
  <testcase name="should be truthy if product is selected" time="0.001" classname="Current Account Application Factory isInProgress"/>
  <testcase name="customer should not be able to apply for overdraft" time="0.001" classname="Current Account Application Factory when customer is under debt review"/>
  <testcase name="customer should not be able to apply for overdraft" time="0.001" classname="Current Account Application Factory when pre-screening is completed"/>
  <testcase name="should set the offer to the declined offer" time="0.001" classname="Current Account Application Factory decline Current account offer"/>
  <testcase name="should return true for isDeclined" time="0.026" classname="Current Account Application Factory decline Current account offer"/>
  <testcase name="should include applicationNumber" time="0.002" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should include timestamp" time="0.002" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should include productFamily with content" time="0.001" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should include overdraft with default amount" time="0.001" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should exclude unsupported products" time="0.001" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should include supported products with content" time="0.002" classname="Offer prepareForDisplay supported product family"/>
  <testcase name="should exclude non-private banking products" time="0.001" classname="Offer prepareForDisplay supported product family private banking product family"/>
  <testcase name="should set productFamily as falsy" time="0.001" classname="Offer prepareForDisplay unsupported product family"/>
  <testcase name="should use the correct controller " time="0.006" classname="Accept offer routes when an offer is received"/>
  <testcase name="should use the correct template " time="0.004" classname="Accept offer routes when an offer is received"/>
  <testcase name="should allow an in-progress current account application" time="0.003" classname="Accept offer routes path configurations"/>
  <testcase name="should not allow a current account application if it is not in progress" time="0.003" classname="Accept offer routes path configurations"/>
  <testcase name="should set the offer in the scope from the view model" time="0.003" classname="Accept offer AcceptOfferController should set all default values"/>
  <testcase name="should set the preferred branch name in the scope from the view model" time="0.004" classname="Accept offer AcceptOfferController should set all default values"/>
  <testcase name="should set overdraft on scope" time="0.002" classname="Accept offer AcceptOfferController should set all default values"/>
  <testcase name="should set system principal on scope" time="0.002" classname="Accept offer AcceptOfferController should set all default values"/>
  <testcase name="should be truthy when overdraft offer is accepted" time="0.003" classname="Accept offer AcceptOfferController overdraftSelected"/>
  <testcase name="should be falsy when overdraft offer is not accepted" time="0.003" classname="Accept offer AcceptOfferController overdraftSelected"/>
  <testcase name="should be false by default" time="0.003" classname="Accept offer AcceptOfferController hasDownloadedAgreement"/>
  <testcase name="should be true once agreement has been downloaded" time="0.003" classname="Accept offer AcceptOfferController hasDownloadedAgreement"/>
  <testcase name="should be false if there is an error" time="0.007" classname="Accept offer AcceptOfferController canSubmit"/>
  <testcase name="should be false if the agreement is accepted but there is an error" time="0.003" classname="Accept offer AcceptOfferController canSubmit"/>
  <testcase name="should be true if agreement is accepted and there are no errors" time="0.003" classname="Accept offer AcceptOfferController canSubmit with generateCostOfCredit feature turned on"/>
  <testcase name="should be false if agreement is accepted and overdraft is selected and agreement is not downloaded" time="0.003" classname="Accept offer AcceptOfferController canSubmit with generateCostOfCredit feature turned off"/>
  <testcase name="should be false if agreement is not accepted and overdraft is selected and agreement is not downloaded" time="0.003" classname="Accept offer AcceptOfferController canSubmit with generateCostOfCredit feature turned off"/>
  <testcase name="should be true if agreement is accepted and overdraft is selected and agreement is downloaded" time="0.002" classname="Accept offer AcceptOfferController canSubmit with generateCostOfCredit feature turned off"/>
  <testcase name="should set previous on the flow" time="0.003" classname="Accept offer AcceptOfferController back"/>
  <testcase name="should set the location to offers" time="0.003" classname="Accept offer AcceptOfferController back"/>
  <testcase name="should save the service response" time="0.003" classname="Accept offer AcceptOfferController submit success"/>
  <testcase name="should redirect to the debit order switching page" time="0.003" classname="Accept offer AcceptOfferController submit success with debitOrderSwitching feature turned on"/>
  <testcase name="should redirect to the cheque card page" time="0.002" classname="Accept offer AcceptOfferController submit success with debitOrderSwitching feature turned off"/>
  <testcase name="should redirect to success page when response has no cross sell" time="0.003" classname="Accept offer AcceptOfferController submit success with debitOrderSwitching feature turned off"/>
  <testcase name="should call the accept offer service with the application, product number and preferredBranch" time="0.003" classname="Accept offer AcceptOfferController submit success"/>
  <testcase name="should submit overdraft when selected" time="0.003" classname="Accept offer AcceptOfferController submit success"/>
  <testcase name="should submit overdraft" time="0.006" classname="Accept offer AcceptOfferController submit success overdraft selected"/>
  <testcase name="it should set electronic statement consents properties" time="0.004" classname="Accept offer AcceptOfferController submit success overdraft selected"/>
  <testcase name="should know when the offer is a private banking product" time="0.003" classname="Accept offer AcceptOfferController with private banking product"/>
  <testcase name="should not set the preferred branch name in the scope from the view model" time="0.003" classname="Accept offer AcceptOfferController with private banking product"/>
  <testcase name="should disable confirm button when canSubmit is false" time="0.013" classname="accept offer template"/>
  <testcase name="should enable confirm button when canSubmit is true" time="0.012" classname="accept offer template"/>
  <testcase name="should disable confirm button on service error" time="0.035" classname="accept offer template"/>
  <testcase name="should be visible for non-private banking product" time="0.012" classname="accept offer template preferred branch"/>
  <testcase name="should not be visible for private banking product" time="0.012" classname="accept offer template preferred branch"/>
  <testcase name="should show overdraft section" time="0.014" classname="accept offer template overdraft state enabled"/>
  <testcase name="should show the terms and conditions with overdraft agreement part" time="0.015" classname="accept offer template overdraft state enabled"/>
  <testcase name="should show &quot;overdraft agreement&quot; as a link when rcp is toggled on" time="0.014" classname="accept offer template overdraft state enabled"/>
  <testcase name="should not show overdraft section" time="0.016" classname="accept offer template overdraft state disabled"/>
  <testcase name="should not have overdraft terms and conditions" time="0.013" classname="accept offer template overdraft state disabled"/>
  <testcase name="should only allow entry from debit order switching page" time="0.003" classname="Cheque card debit order switching enabled routes"/>
  <testcase name="should use the correct controller " time="0.003" classname="Cheque card routes when an offer is received"/>
  <testcase name="should use the correct template " time="0.003" classname="Cheque card routes when an offer is received"/>
  <testcase name="should only allow entry from confirm page" time="0.003" classname="Cheque card routes when an offer is received"/>
  <testcase name="should safely redirect any denied entry to account origination page" time="0.003" classname="Cheque card routes when an offer is received"/>
  <testcase name="should allow new current account application" time="0.003" classname="Cheque card routes path configuration"/>
  <testcase name="should not allow a current account application if it is not in progress" time="0.003" classname="Cheque card routes path configuration"/>
  <testcase name="should set cheque card options on the scope" time="0.003" classname="Cheque card ChequeCardController more than one cheque card offered"/>
  <testcase name="should set cheque card image on the scope" time="0.002" classname="Cheque card ChequeCardController more than one cheque card offered"/>
  <testcase name="should set moreThanOne to true" time="0.003" classname="Cheque card ChequeCardController more than one cheque card offered"/>
  <testcase name="should not set default card selection" time="0.002" classname="Cheque card ChequeCardController more than one cheque card offered"/>
  <testcase name="should set the product family offered" time="0.007" classname="Cheque card ChequeCardController more than one cheque card offered"/>
  <testcase name="should set cheque card option on the scope" time="0.004" classname="Cheque card ChequeCardController only one cheque card offered"/>
  <testcase name="should set moreThanOne to false" time="0.005" classname="Cheque card ChequeCardController only one cheque card offered"/>
  <testcase name="should set default card selection" time="0.003" classname="Cheque card ChequeCardController only one cheque card offered"/>
  <testcase name="should call the service with the selected cheque card" time="0.003" classname="Cheque card ChequeCardController next on success"/>
  <testcase name="should set next on the flow" time="0.003" classname="Cheque card ChequeCardController next on success"/>
  <testcase name="should redirect to the finish page" time="0.021" classname="Cheque card ChequeCardController next on success"/>
  <testcase name="should set selected cheque card on the view model" time="0.003" classname="Cheque card ChequeCardController next on success"/>
  <testcase name="should navigate to application results" time="0.003" classname="Cheque card ChequeCardController next on failure"/>
  <testcase name="should not set selected cheque card" time="0.003" classname="Cheque card ChequeCardController next on failure"/>
  <testcase name="should set error flag for cheque card" time="0.003" classname="Cheque card ChequeCardController next on failure"/>
  <testcase name="should only allow entry from accept offer page" time="0.003" classname="DebitOrderSwitchingController routes with debit order switching"/>
  <testcase name="should allow an in-progress current account application" time="0.008" classname="DebitOrderSwitchingController path configurations"/>
  <testcase name="should not allow a current account application if it is not in progress" time="0.003" classname="DebitOrderSwitchingController path configurations"/>
  <testcase name="should load the debit order switching controller" time="0.004" classname="DebitOrderSwitchingController routes"/>
  <testcase name="should load the debit order switching template" time="0.003" classname="DebitOrderSwitchingController routes"/>
  <testcase name="should not allow entry to debit order switching when debit order switching is off" time="0.002" classname="DebitOrderSwitchingController routes"/>
  <testcase name="should safely redirect any denied entry to account origination page" time="0.003" classname="DebitOrderSwitchingController routes"/>
  <testcase name="should accept debit order switching" time="0.003" classname="DebitOrderSwitchingController controller when user chooses to switch debit orders and service response is successful"/>
  <testcase name="should navigate on success" time="0.003" classname="DebitOrderSwitchingController controller when user chooses to switch debit orders and service response is successful"/>
  <testcase name="should navigate on error" time="0.003" classname="DebitOrderSwitchingController controller when user chooses to switch debit orders"/>
  <testcase name="should go to cross sell when customer has debit cards available" time="0.002" classname="DebitOrderSwitchingController controller when user chooses not to switch debit orders"/>
  <testcase name="should go to finish when customer has no debit cards to select" time="0.004" classname="DebitOrderSwitchingController controller when user chooses not to switch debit orders and there is no debit card to select"/>
  <testcase name="should go to next step in the flow" time="0.002" classname="DebitOrderSwitchingController controller when user chooses not to switch debit orders and there is no debit card to select"/>
  <testcase name="should use the correct template " time="0.012" classname="Decline Offer routes when an offer is declined"/>
  <testcase name="should use the correct controller" time="0.005" classname="Decline Offer routes when an offer is declined"/>
  <testcase name="should have a URL and required parameters for the declined offer letter document in scope" time="0.004" classname="Decline Offer CurrentAccountDeclinedOfferController"/>
  <testcase name="should not required parameters for the declined offer letter document in scope if user has not been created (hasBasicCustomerInformation)" time="0.004" classname="Decline Offer CurrentAccountDeclinedOfferController"/>
  <testcase name="should set customer as not new to bank" time="0.004" classname="Decline Offer CurrentAccountDeclinedOfferController when the user has a card"/>
  <testcase name="should set customer as new to bank" time="0.003" classname="Decline Offer CurrentAccountDeclinedOfferController when the user does not have a card"/>
  <testcase name="should set existing title when the decline reason is for an existing RCP" time="0.003" classname="Decline Offer CurrentAccountDeclinedOfferController"/>
  <testcase name="should only allow entry from debit order switching and cheque card pages" time="0.003" classname="Offers routes with debit order switching enabled"/>
  <testcase name="should use the correct controller " time="0.002" classname="Offers routes when an offer is confirmed"/>
  <testcase name="should use the correct template " time="0.002" classname="Offers routes when an offer is confirmed"/>
  <testcase name="should only allow entry from accept offer and cheque card pages" time="0.002" classname="Offers routes when an offer is confirmed"/>
  <testcase name="should safely redirect any denied entry to account origination page" time="0.002" classname="Offers routes when an offer is confirmed"/>
  <testcase name="should allow for a current application that is in progress" time="0.007" classname="Offers routes path configurations if not debit order switching"/>
  <testcase name="should not allow for a current application that is not in progress" time="0.003" classname="Offers routes path configurations if not debit order switching"/>
  <testcase name="should allow for a current application that is in progress" time="0.003" classname="Offers routes path configurations if debit order switching"/>
  <testcase name="should not allow for a current application that is not in progress" time="0.002" classname="Offers routes path configurations if debit order switching"/>
  <testcase name="should indicate that an overdraft is selected" time="0.004" classname="Offers CurrentAccountFinishApplicationController when offer has an overdraft"/>
  <testcase name="should indicate that an statements consent is selected" time="0.003" classname="Offers CurrentAccountFinishApplicationController when offer has an overdraft"/>
  <testcase name="should indicate that an statements consent is not selected" time="0.003" classname="Offers CurrentAccountFinishApplicationController when offer has an overdraft"/>
  <testcase name="should set the accepted product in the scope" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the preferred branch in the scope" time="0.004" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the account number in the scope" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the application number in the scope" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the letter date in the scope" time="0.002" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should know when the offer is a private banking product" time="0.027" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set isCustomerKycCompliant flag in the scope when customer is not compliant" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the customer in the scope" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set the selected cheque card as undefined" time="0.007" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should flag service error on cross sell" time="0.004" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set customer as new to bank" time="0.003" classname="Offers CurrentAccountFinishApplicationController when loading the page"/>
  <testcase name="should set customer as not new to bank" time="0.004" classname="Offers CurrentAccountFinishApplicationController when customer has a card"/>
  <testcase name="should set the selected cheque card in the scope" time="0.003" classname="Offers CurrentAccountFinishApplicationController when coming from selecting a cheque card"/>
  <testcase name="should set the selected cheque card in the scope as undefined" time="0.003" classname="Offers CurrentAccountFinishApplicationController when there is an error accepting a cheque card"/>
  <testcase name="should set the cross sell error in the scope as true" time="0.003" classname="Offers CurrentAccountFinishApplicationController when there is an error accepting a cheque card"/>
  <testcase name="default offer: KYC compliant, existing customer, no card, no card error, no overdraft" time="0.027" classname="confirm offer template"/>
  <testcase name="offer with overdraft" time="0.021" classname="confirm offer template"/>
  <testcase name="offer with card" time="0.019" classname="confirm offer template"/>
  <testcase name="offer with card error" time="0.02" classname="confirm offer template"/>
  <testcase name="offer for new to bank customer" time="0.019" classname="confirm offer template"/>
  <testcase name="offer for non KYC compliant customer" time="0.02" classname="confirm offer template"/>
  <testcase name="offer for private banking" time="0.047" classname="confirm offer template"/>
  <testcase name="should display if more than one product" time="0.047" classname="offers template product selection"/>
  <testcase name="should not display only one product" time="0.034" classname="offers template product selection"/>
  <testcase name="should not display customer care line for private banking product" time="0.033" classname="offers template product selection"/>
  <testcase name="should display overdraft section" time="0.033" classname="offers template overdraft toggle"/>
  <testcase name="should not display overdraft options" time="0.03" classname="offers template overdraft toggle"/>
  <testcase name="should apply for overdraft" time="0.058" classname="offers template overdraft chosen"/>
  <testcase name="should apply with custom amount" time="0.035" classname="offers template overdraft chosen"/>
  <testcase name="should not have validation errors" time="0.033" classname="offers template overdraft chosen"/>
  <testcase name="should enable apply button" time="0.033" classname="offers template overdraft chosen"/>
  <testcase name="should validate amount using the enforcer" time="0.058" classname="offers template overdraft chosen"/>
  <testcase name="should not disable amount input" time="0.058" classname="offers template overdraft chosen"/>
  <testcase name="should display overdraft disclaimer" time="0.033" classname="offers template overdraft chosen"/>
  <testcase name="consent should be checked by default" time="0.035" classname="offers template overdraft chosen account statement consent"/>
  <testcase name="should show consent branch account fields" time="0.034" classname="offers template overdraft chosen account statement consent consent"/>
  <testcase name="should not show consent branch account fields" time="0.034" classname="offers template overdraft chosen account statement consent do not consent"/>
  <testcase name="should apply without overdraft" time="0.039" classname="offers template overdraft not chosen"/>
  <testcase name="should not disable apply despite invalid amount" time="0.05" classname="offers template overdraft not chosen"/>
  <testcase name="should disable amount input" time="0.033" classname="offers template overdraft not chosen"/>
  <testcase name="should re-set amount to zero" time="0.035" classname="offers template overdraft not chosen"/>
  <testcase name="should not display overdraft disclaimer" time="0.033" classname="offers template overdraft not chosen"/>
  <testcase name="should use the correct controller " time="0.003" classname="Offers routes when an offer is received"/>
  <testcase name="should use the correct template " time="0.003" classname="Offers routes when an offer is received"/>
  <testcase name="should specify the safe return path" time="0.002" classname="Offers routes when an offer is received"/>
  <testcase name="should only allow specific locations" time="0.003" classname="Offers routes when an offer is received"/>
  <testcase name="should allow for an application with an offer from current-account submit" time="0.003" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should not allow for an application without an offer from current-account submit" time="0.002" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should not allow for an application with an offer from not current-account submit" time="0.003" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should allow for an application with an offer from confirm" time="0.002" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should not allow for an application without an offer from confirm" time="0.003" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should allow for an application with an offer from pre-screen" time="0.002" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should not allow for an application without an offer from pre-screen" time="0.003" classname="Offers routes when an offer is received path conditions"/>
  <testcase name="should use the correct template " time="0.005" classname="Offers routes when an offer is not supported"/>
  <testcase name="should put letter date on scope" time="0.011" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives multiple product offers"/>
  <testcase name="should put offer on scope" time="0.007" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives multiple product offers"/>
  <testcase name="should set moreThanOne to false" time="0.022" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives multiple product offers"/>
  <testcase name="should know when an offer is not a private banking product" time="0.004" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives multiple product offers"/>
  <testcase name="should set moreThanOne to true" time="0.004" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives one product offer"/>
  <testcase name="should set selection.selected product to the first object in the products array" time="0.004" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives one product offer"/>
  <testcase name="should know when an offer is a private banking product" time="0.005" classname="Offers CurrentAccountOffersController get offer from CurrentAccountApplication and receives one product offer"/>
  <testcase name="should put customer on scope" time="0.004" classname="Offers CurrentAccountOffersController get customer from CustomerInformationData"/>
  <testcase name="should set the branches to the scope" time="0.004" classname="Offers CurrentAccountOffersController get customer from CustomerInformationData"/>
  <testcase name="should set the selected branch to the users preferred branch" time="0.005" classname="Offers CurrentAccountOffersController get customer from CustomerInformationData"/>
  <testcase name="should set selection on scope" time="0.005" classname="Offers CurrentAccountOffersController when CurrentAccountApplication has selection"/>
  <testcase name="should start undefined" time="0.005" classname="Offers CurrentAccountOffersController selected product index"/>
  <testcase name="should change when product is chosen" time="0.005" classname="Offers CurrentAccountOffersController selected product index"/>
  <testcase name="should set the next flow" time="0.005" classname="Offers CurrentAccountOffersController on accept"/>
  <testcase name="should set the offer" time="0.004" classname="Offers CurrentAccountOffersController on accept"/>
  <testcase name="should set the selection" time="0.005" classname="Offers CurrentAccountOffersController on accept"/>
  <testcase name="should send the user to the Ts &amp; Cs page" time="0.004" classname="Offers CurrentAccountOffersController on accept"/>
  <testcase name="should set overdraft on the offer" time="0.005" classname="Offers CurrentAccountOffersController overdraft"/>
  <testcase name="should reset amount to zero when overdraft not selected" time="0.004" classname="Offers CurrentAccountOffersController overdraft"/>
  <testcase name="should not set amount to zero when overdraft is selected" time="0.005" classname="Offers CurrentAccountOffersController overdraft"/>
  <testcase name="should not offer overdraft" time="0.004" classname="Offers CurrentAccountOffersController overdraft"/>
  <testcase name="should dirty amount on overdraft toggle" time="0.012" classname="Offers CurrentAccountOffersController overdraft"/>
  <testcase name="should offer overdraft" time="0.005" classname="Offers CurrentAccountOffersController overdraft with overdraft offer"/>
  <testcase name="should allow overdraft application if overdraft is offered and pre-screen condition is met" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer"/>
  <testcase name="should retrieve a list of banks and label them" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent"/>
  <testcase name="should use only two account types - CURRENT and SAVINGS" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent"/>
  <testcase name="should clear branches" time="0.005" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent onBankChanged()"/>
  <testcase name="should update banks" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent onBankChanged()"/>
  <testcase name="should not update when there are branches" time="0.008" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent onBankChanged()"/>
  <testcase name="should not update when there are branches" time="0.005" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent onBankChanged()"/>
  <testcase name="it should return a list of branches for selected bank" time="0.03" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent selectedBankBranches"/>
  <testcase name="should return default list when no bank is selected" time="0.005" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent selectedBankBranches"/>
  <testcase name="should record that the consent has not yet been selected" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent analytics on consent"/>
  <testcase name="should record that the consent has been deselected" time="0.004" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent analytics on consent"/>
  <testcase name="should record that the consent has been deselected" time="0.003" classname="Offers CurrentAccountOffersController overdraft with overdraft offer electronic statements consent analytics on consent"/>
  <testcase name="should enforce using OverdraftLimitsService" time="0.004" classname="Offers CurrentAccountOffersController overdraft enforcer"/>
  <testcase name="should use amount from view but importantly, pass coverage" time="0.005" classname="Offers CurrentAccountOffersController overdraft enforcer"/>
  <testcase name="should not enforce when overdraft is not selected" time="0.003" classname="Offers CurrentAccountOffersController overdraft enforcer"/>
  <testcase name="should hint" time="0.003" classname="Offers CurrentAccountOffersController overdraft enforcer"/>
  <testcase name="should use the correct controller " time="0.007" classname="Account Origination - Pre Screening routes pre screening route"/>
  <testcase name="should use the correct template" time="0.003" classname="Account Origination - Pre Screening routes pre screening route"/>
  <testcase name="should specify the safe return path" time="0.003" classname="Account Origination - Pre Screening routes pre screening route"/>
  <testcase name="should allow pending application" time="0.003" classname="Account Origination - Pre Screening routes pre screening route path conditions"/>
  <testcase name="should allow new application" time="0.003" classname="Account Origination - Pre Screening routes pre screening route path conditions"/>
  <testcase name="should not allow application not in pending or new" time="0.003" classname="Account Origination - Pre Screening routes pre screening route path conditions"/>
  <testcase name="should default pre-screening questions to expected answers for most users" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application"/>
  <testcase name="should show heading for a new application" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application"/>
  <testcase name="should be new application" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application"/>
  <testcase name="should initialise CustomerInformationData" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions Existing Customers"/>
  <testcase name="should record a form submission for analytics" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions Existing Customers"/>
  <testcase name="should not showCannotProceedModal" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions Existing Customers"/>
  <testcase name="should complete the pre-screening for the application" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions Existing Customers"/>
  <testcase name="should display customer information" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions Existing Customers"/>
  <testcase name="should go to capture customer basic information when customer is new" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions"/>
  <testcase name="should allow overdraft if not under debt review" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions"/>
  <testcase name="should not allow overdraft if under debt review" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on valid pre-screening questions"/>
  <testcase name="should showCannotProceedModal" time="0.007" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: sequestration"/>
  <testcase name="should not change location" time="0.007" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: sequestration"/>
  <testcase name="should not complete the pre-screening for the application" time="0.023" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: sequestration"/>
  <testcase name="should showCannotProceedModal" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: insolvent"/>
  <testcase name="should not change location" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: insolvent"/>
  <testcase name="should not complete the pre-screening for the application" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on new application submit with credit and fraud consent on invalid pre-screening question: insolvent"/>
  <testcase name="should default pre-screening questions to expected answers for most users" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application"/>
  <testcase name="should show heading to continue an application" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application"/>
  <testcase name="should not be new application" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application"/>
  <testcase name="should initialise CustomerInformationData" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should record a form submission for analytics" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should go to the offers page" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should complete the pre-screening for the application" time="0.004" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should allow overdraft if not under debt review" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should not allow overdraft if under debt review" time="0.003" classname="Account Origination - Pre Screening routes CurrentAccountPrescreeningController on pending application submit"/>
  <testcase name="should show all questions if new application" time="0.024" classname="preScreening template"/>
  <testcase name="should show only debt review if pending application" time="0.015" classname="preScreening template"/>
  <testcase name="should have the correct heading text" time="0.014" classname="preScreening template"/>
  <testcase name="should enable next button on creditAndFraudCheckConsent" time="0.013" classname="preScreening template"/>
  <testcase name="should disable next button on creditAndFraudCheckConsent set to false" time="0.013" classname="preScreening template"/>
  <testcase name="should show error details when insolvent" time="0.014" classname="preScreening template"/>
  <testcase name="should show error details when under sequestration" time="0.04" classname="preScreening template"/>
  <testcase name="should hide error details when close is clicked" time="0.014" classname="preScreening template"/>
  <testcase name="existing current account" time="0.022" classname="account product template"/>
  <testcase name="can apply" time="0.015" classname="account product template"/>
  <testcase name="cannot apply" time="0.014" classname="account product template"/>
  <testcase name="should use the correct template " time="0.003" classname="Products routes when selecting a product"/>
  <testcase name="should use the correct controller " time="0.003" classname="Products routes when selecting a product"/>
  <testcase name="should assign products to currentAccountProductFamilyContent" time="0.007" classname="Products CurrentAccountProductController"/>
  <testcase name="should be true if status is  EXISTING" time="0.005" classname="Products CurrentAccountProductController load application status has current account"/>
  <testcase name="should be false if status is Not EXISTING" time="0.005" classname="Products CurrentAccountProductController load application status has current account"/>
  <testcase name="should be true if status is  NEW" time="0.004" classname="Products CurrentAccountProductController load application status can apply"/>
  <testcase name="should be false if status is Not NEW" time="0.003" classname="Products CurrentAccountProductController load application status can apply"/>
  <testcase name="should change location to /apply" time="0.003" classname="Products CurrentAccountProductController load application status not NEW or EXISTING application"/>
  <testcase name="should use the correct template " time="0.003" classname="Products routes when selecting a product"/>
  <testcase name="should use the correct controller " time="0.003" classname="Products routes when selecting a product"/>
  <testcase name="should assign products to currentAccountProductFamilyContent" time="0.004" classname="Products OldCurrentAccountProductController"/>
  <testcase name="should be false if User has Dashboards" time="0.004" classname="Products OldCurrentAccountProductController new to bank"/>
  <testcase name="should be true if User does not have Dashboards" time="0.007" classname="Products OldCurrentAccountProductController new to bank"/>
  <testcase name="should get customer when user has basic customer information" time="0.006" classname="Products OldCurrentAccountProductController kycCompliant"/>
  <testcase name="should not get customer when user does not have basic customer information" time="0.003" classname="Products OldCurrentAccountProductController kycCompliant"/>
  <testcase name="should be true if customer is kycCompliant" time="0.006" classname="Products OldCurrentAccountProductController kycCompliant"/>
  <testcase name="should be false if customer is not kycCompliant" time="0.005" classname="Products OldCurrentAccountProductController kycCompliant"/>
  <testcase name="should be true if status is  EXISTING" time="0.004" classname="Products OldCurrentAccountProductController load application status has current account"/>
  <testcase name="should be false if status is Not EXISTING" time="0.003" classname="Products OldCurrentAccountProductController load application status has current account"/>
  <testcase name="should be Current Account solutions when EXISTING" time="0.004" classname="Products OldCurrentAccountProductController load application status page title"/>
  <testcase name="should be Current Account solutions when NEW" time="0.004" classname="Products OldCurrentAccountProductController load application status page title"/>
  <testcase name="should be &quot;Pending offer when PENDING" time="0.003" classname="Products OldCurrentAccountProductController load application status page title"/>
  <testcase name="should be &quot;Accepted offer when ACCEPTED" time="0.003" classname="Products OldCurrentAccountProductController load application status page title"/>
  <testcase name="should be true if has overdraft" time="0.004" classname="Products OldCurrentAccountProductController load application status has overdraft"/>
  <testcase name="should be false if does not have overdraft" time="0.003" classname="Products OldCurrentAccountProductController load application status has overdraft"/>
  <testcase name="should be true if status is  PENDING" time="0.022" classname="Products OldCurrentAccountProductController load application status has pending offer"/>
  <testcase name="should invoke the CurrentAccountOffersService service with the given application number" time="0.004" classname="Products OldCurrentAccountProductController load application status has pending offer viewOffer successful response"/>
  <testcase name="should continue the Current Account application with the offer that was returned" time="0.009" classname="Products OldCurrentAccountProductController load application status has pending offer viewOffer successful response"/>
  <testcase name="should navigate to the current account pre-screen page" time="0.004" classname="Products OldCurrentAccountProductController load application status has pending offer viewOffer successful response"/>
  <testcase name="should create the Flow" time="0.005" classname="Products OldCurrentAccountProductController load application status has pending offer viewOffer successful response"/>
  <testcase name="should continue to the next step of flow" time="0.004" classname="Products OldCurrentAccountProductController load application status has pending offer viewOffer successful response"/>
  <testcase name="should be false if status is Not PENDING" time="0.004" classname="Products OldCurrentAccountProductController load application status has pending offer"/>
  <testcase name="should be true if status is  ACCEPTED" time="0.003" classname="Products OldCurrentAccountProductController load application status has accepted offer"/>
  <testcase name="should  remove CURRENT ACCOUNT from productName when accepted offer" time="0.003" classname="Products OldCurrentAccountProductController load application status has accepted offer modify product name"/>
  <testcase name="should set isPrivateBanking on the scope if offer has been accepted" time="0.004" classname="Products OldCurrentAccountProductController load application status has accepted offer modify product name"/>
  <testcase name="should not set isPrivateBanking on the scope if offer is still pending" time="0.004" classname="Products OldCurrentAccountProductController load application status has accepted offer modify product name"/>
  <testcase name="should be false if status is Not PENDING" time="0.004" classname="Products OldCurrentAccountProductController load application status has accepted offer"/>
  <testcase name="should be true if status is  NEW" time="0.004" classname="Products OldCurrentAccountProductController load application status can apply"/>
  <testcase name="should be false if status is Not NEW" time="0.003" classname="Products OldCurrentAccountProductController load application status can apply"/>
  <testcase name="should call the endpoint" time="0.005" classname="AcceptCardCrossSellService acceptCardCrossSell success"/>
  <testcase name="should resolve with the service response" time="0.004" classname="AcceptCardCrossSellService acceptCardCrossSell success"/>
  <testcase name="should resolve with the service response" time="0.004" classname="AcceptCardCrossSellService acceptCardCrossSell failure"/>
  <testcase name="should return readable product names" time="0.007" classname="AcceptedOfferResponseParser chequeCard crosssell"/>
  <testcase name="should filter products that are not cheque cards" time="0.002" classname="AcceptedOfferResponseParser chequeCard crosssell"/>
  <testcase name="should not return offerDetails when there are no valid products" time="0.001" classname="AcceptedOfferResponseParser chequeCard crosssell"/>
  <testcase name="should return Mastercard product image" time="0.002" classname="AcceptedOfferResponseParser chequeCard crosssell with product image"/>
  <testcase name="should return Visa product image" time="0.001" classname="AcceptedOfferResponseParser chequeCard crosssell with product image"/>
  <testcase name="should invoke the current account offers endpoint" time="0.011" classname="CurrentAccountOffersService getOffers success"/>
  <testcase name="should reject if the call fails" time="0.003" classname="CurrentAccountOffersService getOffers failure"/>
  <testcase name="should reject with unsupported response if product family is empty" time="0.004" classname="CurrentAccountOffersService getOffers unsupported offer"/>
  <testcase name="should reject with unsupported response if products count is zero" time="0.004" classname="CurrentAccountOffersService getOffers unsupported offer"/>
  <testcase name="should reject with the service response" time="0.004" classname="CurrentAccountOffersService getOffers offer rejected"/>
  <testcase name="should invoke the get quotation details endpoint" time="0.004" classname="CurrentAccountOffersService getQuotationDetails success"/>
  <testcase name="should reject if the call fails" time="0.004" classname="CurrentAccountOffersService getQuotationDetails failure"/>
  <testcase name="should reject with unsupported response if product family is empty" time="0.003" classname="CurrentAccountOffersService getQuotationDetails unsupported offer"/>
  <testcase name="should reject with unsupported response if products count is zero" time="0.004" classname="CurrentAccountOffersService getQuotationDetails unsupported offer"/>
  <testcase name="should reject with the service response" time="0.003" classname="CurrentAccountOffersService getQuotationDetails offer rejected"/>
  <testcase name="should call the endpoint" time="0.003" classname="CurrentAccountOffersService accept offer"/>
  <testcase name="should call the endpoint correct with overdraft electronic consents details" time="0.003" classname="CurrentAccountOffersService accept offer with overdraft selected"/>
  <testcase name="should resolve with the service response" time="0.007" classname="CurrentAccountOffersService accept offer"/>
  <testcase name="should know the content for consolidator" time="0.031" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for consolidator plus" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite 2" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite 132" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite 9141" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite plus 641" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite plus 643" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for elite plus 645" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for prestige" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for prestige plus" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for private" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff consolidator" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff consolidator plus" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite 151" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite 157" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite 229" time="0" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite plus 647" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite plus 650" time="0.005" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff elite plus 651" time="0.002" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff prestige plus" time="0.001" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should know the content for staff private" time="0.002" classname="AO Content CurrentAccountProductContent"/>
  <testcase name="should return content for Prestige Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return content for Elite Banking product family" time="0.002" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return content for Consolidator Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Elite content for Achiever Banking product family" time="0.002" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Elite content for Classic Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Private content for Private Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Elite content for Staff Achiever Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Elite content for Staff Classic Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Consolidator content for Staff Consolidator Banking product family" time="0.002" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Elite content for Staff Elite Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Prestige content for Staff Prestige Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return Private content for Staff Private Banking product family" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should return list of products" time="0.001" classname="AO Content ProductFamilyContent"/>
  <testcase name="should call the debit order switching endpoint" time="0.009" classname="DebitOrderSwitchingService acceptDebitOrderSwitching success"/>
  <testcase name="should reject if call fails" time="0.004" classname="DebitOrderSwitchingService acceptDebitOrderSwitching failure"/>
  <testcase name="should reject if call does not return SUCCESS" time="0.003" classname="DebitOrderSwitchingService acceptDebitOrderSwitching failure"/>
  <testcase name="should reject if call returns error headers" time="0.003" classname="DebitOrderSwitchingService acceptDebitOrderSwitching failure"/>
  <testcase name="should set hint" time="0.002" classname="OverdraftLimitsService"/>
  <testcase name="should set error message when amount is zero" time="0.002" classname="OverdraftLimitsService"/>
  <testcase name="should set error message when amount has decimals" time="0.001" classname="OverdraftLimitsService"/>
  <testcase name="should set error message when amount format is invalid" time="0.001" classname="OverdraftLimitsService"/>
  <testcase name="should set error message when amount is greater than limit" time="0.001" classname="OverdraftLimitsService"/>
  <testcase name="should set error message when amount is not in multiples of hundred" time="0.001" classname="OverdraftLimitsService"/>
  <testcase name="should load the address controller" time="0.003" classname="AddressController routes"/>
  <testcase name="should load the address template" time="0.002" classname="AddressController routes"/>
  <testcase name="should redirect to edit address page if customer has no residential address" time="0.004" classname="AddressController routes when resolving"/>
  <testcase name="should not redirect to edit address page if customer has residential address" time="0.003" classname="AddressController routes when resolving"/>
  <testcase name="should not redirect to edit address page if customer has residential address" time="0.005" classname="AddressController controller"/>
  <testcase name="should stash any changes and navigate to edit when the edit button is clicked" time="0.004" classname="AddressController controller"/>
  <testcase name="should navigate to employment when next is clicked" time="0.003" classname="AddressController controller"/>
  <testcase name="should get the correct capture basic template" time="0.004" classname="Capture Basic Routing"/>
  <testcase name="should get the correct capture basic controller" time="0.003" classname="Capture Basic Routing"/>
  <testcase name="should specify the safe return path" time="0.003" classname="Capture Basic Routing"/>
  <testcase name="should only allow pre-screening" time="0.003" classname="Capture Basic Routing"/>
  <testcase name="should allow new application" time="0.003" classname="Capture Basic Routing path conditions for current account application"/>
  <testcase name="should not allow application in any other state" time="0.003" classname="Capture Basic Routing path conditions for current account application"/>
  <testcase name="should allow new application" time="0.002" classname="Capture Basic Routing path conditions for RCP application"/>
  <testcase name="titles" time="0.008" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="countries" time="0.027" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="marital statuses" time="0.005" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="marital types" time="0.01" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="permit types" time="0.008" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="ID types" time="0.007" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="genders" time="0.007" classname="Capture Basic CaptureBasicController drop down options"/>
  <testcase name="should set ID type to South African ID" time="0.006" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should set an empty cell phone as contact" time="0.006" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should be have a cellphone contact" time="0.005" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should set the preferred communication language to english" time="0.007" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should set latestDateOfBirth to current date" time="0.006" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should set latestDateOfPermitIssue to current date" time="0.005" classname="Capture Basic CaptureBasicController initialize"/>
  <testcase name="should return false if idType value is &apos;South African ID&apos;" time="0.005" classname="Capture Basic CaptureBasicController conditions"/>
  <testcase name="should return true if idType value is &apos;Passport&apos;" time="0.005" classname="Capture Basic CaptureBasicController conditions"/>
  <testcase name="should navigate to the capture address page" time="0.008" classname="Capture Basic CaptureBasicController complete the form next"/>
  <testcase name="should clear the permit details when customer has no passport" time="0.007" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should not clear the permit details when customer has passport" time="0.007" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should call createCustomer with correct request when using SA ID" time="0.008" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should call createCustomer with correct request when using passport" time="0.012" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should remove any space from customer initial" time="0.007" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should set edit status to undefined" time="0.007" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should goto customer information page" time="0.037" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should goto customer information page" time="0.007" classname="Capture Basic CaptureBasicController complete the form save"/>
  <testcase name="should set server error message if error code is not &apos;4444&apos;" time="0.008" classname="Capture Basic CaptureBasicController complete the form save when server returns error"/>
  <testcase name="should show &apos;customer already exists&apos; modal if error code is &apos;4444&apos;" time="0.007" classname="Capture Basic CaptureBasicController complete the form save when server returns error because customer already exists"/>
  <testcase name="should navigate to link card if customer chooses to link existing card" time="0.007" classname="Capture Basic CaptureBasicController complete the form save when server returns error because customer already exists"/>
  <testcase name="should set declined reason on rcp application if error code is &apos;4445&apos;" time="0.008" classname="Capture Basic CaptureBasicController complete the form save when server returns error because customer has open RCP account"/>
  <testcase name="should navigate to rcp decline path" time="0.006" classname="Capture Basic CaptureBasicController complete the form save when server returns error because customer has open RCP account"/>
  <testcase name="should call parent cancelCapture" time="0.006" classname="Capture Basic CaptureBasicController complete the form cancel"/>
  <testcase name="should change gender to 2 when select title Ms" time="0.007" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should change gender to 1 when select title Mr" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should change gender to 2 when select title Mrs" time="0.005" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should change gender to 2 when select title Miss" time="0.011" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should change gender to 1 when select title Sir" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Dr" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Prof" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title The honourable" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Sgt" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Lt" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Maj" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Major-general" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Gen" time="0.006" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should not change gender when select title Rev" time="0.034" classname="Capture Basic CaptureBasicController on change"/>
  <testcase name="should remove date of birth and error as well as country of nationality, birth and citizenship" time="0.005" classname="Capture Basic CaptureBasicController on change when changing id type"/>
  <testcase name="should remove ID number and error from scope when changing ID type to passport" time="0.005" classname="Capture Basic CaptureBasicController on change when changing id type"/>
  <testcase name="should remove passport related properties and errors from scope when changing ID type to south african ID" time="0.006" classname="Capture Basic CaptureBasicController on change when changing id type"/>
  <testcase name="should set idNumber error message when the eleventh digit is not equal to zero, one, or two" time="0.005" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should get dateOfBirth from ID and not show dob error message" time="0.007" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should get dateOfBirth from ID for birth days in the 2000s and show dob error message" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should not set idNumber error message when the eleventh digit is equal to zero, one, or two" time="0.007" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should not set idNumber error message when the element is undefined" time="0.01" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should clear idNumber error message when the element is invalid" time="0.005" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should clear idNumber error message when the element is empty" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should clear idNumber error message when the calculated last digit is 0" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set idNumber error message when the check digit is wrong" time="0.005" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should call checkGender if IdNumber is valid" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set idNumber error message when birth date is wrong format" time="0.005" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set idNumber error message when the check digit is wrong" time="0.004" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set dob error message when age is less than 18" time="0.007" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should not set idNumber error message when age is 18" time="0.011" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should not set error messages when the Passport ID type is selected and the country of citizenship is not South Africa" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set  error message when the Passport ID type is selected and the country of citizenship is South Africa" time="0.005" classname="Capture Basic CaptureBasicController validation SA ID number"/>
  <testcase name="should set dateOfBirth error message when date of birth does not match that of ID" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number with date of birth"/>
  <testcase name="should not set dateOfBirth error message when date of birth matches that of ID" time="0.006" classname="Capture Basic CaptureBasicController validation SA ID number with date of birth"/>
  <testcase name="should not set dateOfBirth error message when date of birth matches that of ID for a century ago" time="0.034" classname="Capture Basic CaptureBasicController validation SA ID number with date of birth"/>
  <testcase name="should set date of birth error message when age is younger than 18" time="0.007" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should clear date of birth error message when age is younger than 18" time="0.006" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set passport expiry date error message when current moment" time="0.007" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set passport expiry date error message when it is within the next 3 months" time="0.01" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set passport expiry date error message when it is within the next 3 months" time="0.006" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set permit expiry date error message when current moment" time="0.006" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set permit expiry date error message when it is within the next 3 months" time="0.006" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set permit expiry date error message when it is within the next 3 months" time="0.005" classname="Capture Basic CaptureBasicController validation passport"/>
  <testcase name="should set title and gender error message when they are not matching" time="0.005" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should clear title and gender error message when they are matching" time="0.005" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should clear title and gender error message when title is unisex" time="0.005" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should clear error messages if title, gender and id number match" time="0.004" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should set title, gender and id number error message if id number does not match" time="0.004" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should not set id number error message if its empty" time="0.011" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should not set error messages if title and gender are empty" time="0.006" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should not set title error message if title is unisex" time="0.006" classname="Capture Basic CaptureBasicController validation gender"/>
  <testcase name="should not validate if first name and initial is empty" time="0.006" classname="Capture Basic CaptureBasicController validation first name"/>
  <testcase name="should set error message if first letter of first name is different from first letter of initial" time="0.006" classname="Capture Basic CaptureBasicController validation first name"/>
  <testcase name="should clear error message if initial is equal to first name" time="0.005" classname="Capture Basic CaptureBasicController validation first name"/>
  <testcase name="should return false if date of birth is not valid" time="0.006" classname="Capture Basic CaptureBasicController validation date"/>
  <testcase name="should return false if passport expiry date is not valid" time="0.009" classname="Capture Basic CaptureBasicController validation date"/>
  <testcase name="should return false if permit expiry date is not valid" time="0.006" classname="Capture Basic CaptureBasicController validation date"/>
  <testcase name="should return true if all dates are valid" time="0.006" classname="Capture Basic CaptureBasicController validation date"/>
  <testcase name="should set country of birth, nationality and citizenship to &apos;ZA&apos; if customer management v4 toggle is on" time="0.034" classname="Capture Basic CaptureBasicController with countries when dealing with a SA citizen"/>
  <testcase name="should only set citizenship to ZA if customer management v4 toggle is off" time="0.005" classname="Capture Basic CaptureBasicController with countries when dealing with a SA citizen"/>
  <testcase name="should not set country of birth, nationality and citizenship to &apos;ZA&apos;" time="0.006" classname="Capture Basic CaptureBasicController with countries when dealing with non SA citizen"/>
  <testcase name="should set country of nationality and citizenship to that of passport origin if customer management v4 toggle is on" time="0.005" classname="Capture Basic CaptureBasicController with countries when dealing with passport holder"/>
  <testcase name="should only set citizenship to that of passport origin if customer management v4 toggle is off" time="0.006" classname="Capture Basic CaptureBasicController with countries when dealing with passport holder"/>
  <testcase name="should not set any country to &apos;ZA&apos; if ID number is empty" time="0.006" classname="Capture Basic CaptureBasicController with countries"/>
  <testcase name="should not set any country to &apos;ZA&apos; if ID number is invalid" time="0.005" classname="Capture Basic CaptureBasicController with countries"/>
  <testcase name="should return true if customer selects idType as passport " time="0.006" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should return false if customer has no national id " time="0.005" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should return false if customer&apos;s SA identityNumber is undefined" time="0.005" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should return false if customer&apos;s SA identityNumber is not equal to 13 digits" time="0.005" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should return false if customer&apos;s SA identityNumber has a 11th digit of 0" time="0.009" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should return true if customer&apos;s SA identityNumber has a 11th digit of 1" time="0.005" classname="Capture Basic CaptureBasicController isNotSACitizen"/>
  <testcase name="should goto customer information page" time="0.005" classname="Capture Basic CaptureBasicController on user with customer information"/>
  <testcase name="should update the customer information" time="0.004" classname="Capture Basic CustomerService"/>
  <testcase name="should get the correct consent template" time="0.004" classname="Consent routes"/>
  <testcase name="should get the correct consent controller" time="0.004" classname="Consent routes"/>
  <testcase name="should redirect to edit consents page" time="0.004" classname="Consent routes on resolving when the customer has no marketing consents"/>
  <testcase name="should not redirect to edit consent page" time="0.004" classname="Consent routes on resolving when the customer has marketing consents"/>
  <testcase name="should expose the current customer to the scope" time="0.009" classname="Consent controller - current account on initialize"/>
  <testcase name="should expose $routeParams product to the scope" time="0.005" classname="Consent controller - current account on initialize"/>
  <testcase name="should set getOfferButtonText on the scope" time="0.011" classname="Consent controller - current account on initialize"/>
  <testcase name="should stash current customer" time="0.005" classname="Consent controller - current account edit()"/>
  <testcase name="should redirect to edit consent page" time="0.004" classname="Consent controller - current account edit()"/>
  <testcase name="should toggle the value of showValidationModal" time="0.004" classname="Consent controller - current account toggleValidationModal()"/>
  <testcase name="should set the value of showValidationModal to false" time="0.005" classname="Consent controller - current account validationModalYes()"/>
  <testcase name="should navigate to the customer information section that is invalid" time="0.036" classname="Consent controller - current account validationModalYes()"/>
  <testcase name="should change location to offers page" time="0.005" classname="Consent controller - current account submit() successful offer"/>
  <testcase name="should go to flow next page" time="0.005" classname="Consent controller - current account submit() successful offer"/>
  <testcase name="should redirect to the unsupported offer page" time="0.005" classname="Consent controller - current account submit() unsupported product offer"/>
  <testcase name="should redirect to the declined offer page" time="0.005" classname="Consent controller - current account submit() offer declined"/>
  <testcase name="should call the notification service" time="0.005" classname="Consent controller - current account submit() service error"/>
  <testcase name="should go to flow next page" time="0.01" classname="Consent controller - pure-save submit() successful offer"/>
  <testcase name="should change location to the path from the account offer service transfer page" time="0.006" classname="Consent controller - pure-save submit() successful offer"/>
  <testcase name="should go to flow next page" time="0.006" classname="Consent controller - market-link submit() successful offer"/>
  <testcase name="should change location to the path from the account offer service transfer page" time="0.005" classname="Consent controller - market-link submit() successful offer"/>
  <testcase name="should go to flow next page" time="0.006" classname="Consent controller - tax-free-call-account submit() successful offer"/>
  <testcase name="should change location to the path from the account offer service transfer page" time="0.006" classname="Consent controller - tax-free-call-account submit() successful offer"/>
  <testcase name="should return true if customerData is empty" time="0" classname="AddressValidation validateSection"/>
  <testcase name="should fail validation if customer has no residential address" time="0.001" classname="AddressValidation validateSection"/>
  <testcase name="should pass validation if customer has residential address" time="0" classname="AddressValidation validateSection"/>
  <testcase name="should return message prompting for address when customer has no residential address" time="0.004" classname="AddressValidation getNotificationMessage"/>
  <testcase name="should have called nagivateCallback when navigateToSection is called" time="0" classname="AddressValidation navigateToSection"/>
  <testcase name="should have called editCallback with address when customer has no address and editSection is called" time="0" classname="AddressValidation editSection"/>
  <testcase name="should return true if customerData is empty" time="0.001" classname="BasicInfoValidation validateSection"/>
  <testcase name="should return true if customerManagementV4 toggle is false" time="0" classname="BasicInfoValidation validateSection"/>
  <testcase name="should fail validation if customer has incomplete basic info" time="0" classname="BasicInfoValidation validateSection"/>
  <testcase name="should pass validation if customer has complete basic info" time="0" classname="BasicInfoValidation validateSection"/>
  <testcase name="should return message prompting for basic info when customer is missing some basic info" time="0" classname="BasicInfoValidation getNotificationMessage"/>
  <testcase name="should have called nagivateCallback when navigateToSection is called" time="0" classname="BasicInfoValidation navigateToSection"/>
  <testcase name="should have called editCallback with additionalBasic when customer basic info is incomplete and editSection is called" time="0" classname="BasicInfoValidation editSection"/>
  <testcase name="should return a list of customer info sections that are invalid" time="0.005" classname="CustomerInfoValidation Validation Service"/>
  <testcase name="should not return customer info sections that are valid" time="0.009" classname="CustomerInfoValidation Validation Service"/>
  <testcase name="should not provide notification for valid sections" time="0.004" classname="CustomerInfoValidation Validation Service getValidationNotificationForSection() with validation"/>
  <testcase name="should provide validation notification for an invalid section" time="0.004" classname="CustomerInfoValidation Validation Service getValidationNotificationForSection() with validation"/>
  <testcase name="should not provide validation notification when validation has not been performed" time="0.004" classname="CustomerInfoValidation Validation Service getValidationNotificationForSection()"/>
  <testcase name="should return true if customerData is empty" time="0" classname="EmploymentValidation validateSection"/>
  <testcase name="should pass validation if customer has employment details" time="0.001" classname="EmploymentValidation validateSection"/>
  <testcase name="should pass validation if customer has tertiary qualification code" time="0" classname="EmploymentValidation validateSection when customer has no employment details if customer management V4 is toggled off"/>
  <testcase name="should fail validation if customer has no tertiary qualification code" time="0" classname="EmploymentValidation validateSection when customer has no employment details if customer management V4 is toggled off"/>
  <testcase name="should fail validation" time="0" classname="EmploymentValidation validateSection when customer has no employment details if customer management V4 is toggled on"/>
  <testcase name="should return message prompting for employment when customer has no employment" time="0" classname="EmploymentValidation getNotificationMessage"/>
  <testcase name="should have called nagivateCallback when navigateToSection is called" time="0.001" classname="EmploymentValidation navigateToSection"/>
  <testcase name="should have called editCallback with add if customer has no employment" time="0" classname="EmploymentValidation editSection"/>
  <testcase name="should return true if customerData is empty" time="0" classname="IncomeAndExpenseValidation validateSection"/>
  <testcase name="should fail validation if customer has no income" time="0" classname="IncomeAndExpenseValidation validateSection"/>
  <testcase name="should fail validation if customer has income but no expense" time="0" classname="IncomeAndExpenseValidation validateSection"/>
  <testcase name="should pass validation if customer has income and expense" time="0" classname="IncomeAndExpenseValidation validateSection"/>
  <testcase name="should return message prompting for income when customer has income and no expense" time="0" classname="IncomeAndExpenseValidation getNotificationMessage"/>
  <testcase name="should return message prompting for expense when customer has expenses and no income" time="0" classname="IncomeAndExpenseValidation getNotificationMessage"/>
  <testcase name="should return message prompting for income and expense when customer has no expenses and no income" time="0" classname="IncomeAndExpenseValidation getNotificationMessage"/>
  <testcase name="should return empty message when customer has expenses and income" time="0" classname="IncomeAndExpenseValidation getNotificationMessage"/>
  <testcase name="should have called nagivateCallback when navigateToSection is called" time="0" classname="IncomeAndExpenseValidation navigateToSection"/>
  <testcase name="should have called editCallback with expenses if customer has income but no expenses" time="0.001" classname="IncomeAndExpenseValidation editSection"/>
  <testcase name="should have called editCallback with income if customer has expenses but no income" time="0" classname="IncomeAndExpenseValidation editSection"/>
  <testcase name="should have called editCallback with income if customer has no income and no expenses" time="0" classname="IncomeAndExpenseValidation editSection"/>
  <testcase name="should set undefined employment details to an empty list" time="0.005" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should set undefined address details to an empty list" time="0.005" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should set undefined income and expenses to an empty list" time="0.004" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should set undefined consent clauses to an empty list" time="0.004" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should allow the user to modify addresses" time="0.005" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should allow the user to modify contact information" time="0.004" classname="CustomerInformationData initialize with customer initialize when there are no properties"/>
  <testcase name="should split address with multiple usage into two different addresses" time="0.004" classname="CustomerInformationData initialize with customer initialize"/>
  <testcase name="should set permit details to an empty list if customer is a passport holder with no permit info" time="0.005" classname="CustomerInformationData initialize with customer initialize with permit details when customer management v4 is toggled on"/>
  <testcase name="should not set permit details to an empty list if customer is a passport holder with partial permit info" time="0.004" classname="CustomerInformationData initialize with customer initialize with permit details when customer management v4 is toggled on"/>
  <testcase name="should not set permit details to an empty list if customer already has complete permit info" time="0.004" classname="CustomerInformationData initialize with customer initialize with permit details when customer management v4 is toggled on"/>
  <testcase name="should get permit details from work expiry date" time="0.01" classname="CustomerInformationData initialize with customer initialize with permit details when customer management v4 is toggled off"/>
  <testcase name="should expose the customers properties" time="0.006" classname="CustomerInformationData initialize with customer initialize"/>
  <testcase name="should return data for letter header" time="0.033" classname="CustomerInformationData initialize with customer letter data"/>
  <testcase name="should return data for letter header with no title if not mapped" time="0.005" classname="CustomerInformationData initialize with customer letter data"/>
  <testcase name="should return customers income items" time="0.006" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should return customers gross income" time="0.009" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should know if customer has income items" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should know if customer does not have income items" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should add incomes numerically" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should return zero if income has not itemAmount" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with incomes"/>
  <testcase name="should return zero if customer has no total expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should return zero if customer total expense item has no amount defined" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should get total expense item amount" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should get total expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should know if customer does not have total expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should know if customer does have total expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses"/>
  <testcase name="should filter out all expense items if more than one item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses filter expense items"/>
  <testcase name="should keep the total expense if it is the only expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses filter expense items"/>
  <testcase name="should filter out zero amount total expense item" time="0.004" classname="CustomerInformationData initialize with customer income and expenses with expenses filter expense items"/>
  <testcase name="should return true when customer has a cell phone number" time="0.009" classname="CustomerInformationData initialize with customer with cellphone contact info"/>
  <testcase name="should return false when customer has no cell phone number" time="0.005" classname="CustomerInformationData initialize with customer with cellphone contact info"/>
  <testcase name="should return true when customer is employed" time="0.004" classname="CustomerInformationData initialize with customer employment information isEmployed()"/>
  <testcase name="should return false when customer has no employment details" time="0.003" classname="CustomerInformationData initialize with customer employment information isEmployed()"/>
  <testcase name="should return false when customer has old employment details" time="0.004" classname="CustomerInformationData initialize with customer employment information isEmployed()"/>
  <testcase name="should return true when end date is either unset or in the future" time="0.004" classname="CustomerInformationData initialize with customer employment information isEmployedForLessThanAYear()"/>
  <testcase name="should return false when customer has been employed for at least a year" time="0.004" classname="CustomerInformationData initialize with customer employment information isEmployedForLessThanAYear()"/>
  <testcase name="should return false when customer is no longer employed" time="0.005" classname="CustomerInformationData initialize with customer employment information isEmployedForLessThanAYear()"/>
  <testcase name="should return current employment details" time="0.003" classname="CustomerInformationData initialize with customer employment information with current employment"/>
  <testcase name="should return undefined when customer is not currently employed" time="0.003" classname="CustomerInformationData initialize with customer employment information with current employment"/>
  <testcase name="should get the previous employment details" time="0.003" classname="CustomerInformationData initialize with customer employment information"/>
  <testcase name="should add employment in customer employment details" time="0.004" classname="CustomerInformationData initialize with customer employment information addEmployment()"/>
  <testcase name="should not add employment with empty employer name" time="0.009" classname="CustomerInformationData initialize with customer employment information addEmployment() when employment is invalid"/>
  <testcase name="should not add employment without start date" time="0.004" classname="CustomerInformationData initialize with customer employment information addEmployment() when employment is invalid"/>
  <testcase name="should not add employment with invalid start date" time="0.005" classname="CustomerInformationData initialize with customer employment information addEmployment() when employment is invalid"/>
  <testcase name="should not add duplicate employments" time="0.013" classname="CustomerInformationData initialize with customer employment information addEmployment()"/>
  <testcase name="should know when customer has previous employment details" time="0.008" classname="CustomerInformationData initialize with customer employment information hasPreviousEmployment()"/>
  <testcase name="should know when customer does not have previous employment details" time="0.006" classname="CustomerInformationData initialize with customer employment information hasPreviousEmployment()"/>
  <testcase name="should know when customer has employment details" time="0.004" classname="CustomerInformationData initialize with customer employment information hasEmploymentDetails()"/>
  <testcase name="should know when customer does not have any employment details" time="0.025" classname="CustomerInformationData initialize with customer employment information hasEmploymentDetails()"/>
  <testcase name="should know when customer has unemployment details" time="0.005" classname="CustomerInformationData initialize with customer employment information hasEmploymentDetails()"/>
  <testcase name="should know when customer does not have any employment details" time="0.004" classname="CustomerInformationData initialize with customer employment information hasEmploymentDetails()"/>
  <testcase name="should return true when customer is missing employment details and unemployment reason" time="0.003" classname="CustomerInformationData initialize with customer employment information hasNoEmploymentStatus()"/>
  <testcase name="should return false when customer has any employment details" time="0.003" classname="CustomerInformationData initialize with customer employment information hasNoEmploymentStatus()"/>
  <testcase name="should return false when customer is no employment details but unemployment reason" time="0.004" classname="CustomerInformationData initialize with customer employment information hasNoEmploymentStatus()"/>
  <testcase name="should know the current residential address" time="0.004" classname="CustomerInformationData initialize with customer address information residential addresses"/>
  <testcase name="should know the previous residential address" time="0.005" classname="CustomerInformationData initialize with customer address information residential addresses"/>
  <testcase name="should know when the current residential address is less than a year" time="0.005" classname="CustomerInformationData initialize with customer address information residential addresses"/>
  <testcase name="should know when the current residential address is not less than a year" time="0.004" classname="CustomerInformationData initialize with customer address information residential addresses"/>
  <testcase name="should know when customer has a current residential address" time="0.005" classname="CustomerInformationData initialize with customer address information residential addresses hasCurrentResidentialAddress()"/>
  <testcase name="should know when customer does not have a current residential address" time="0.009" classname="CustomerInformationData initialize with customer address information residential addresses hasCurrentResidentialAddress()"/>
  <testcase name="should make the home and postal addresses readonly" time="0.005" classname="CustomerInformationData initialize with customer address information residential addresses makeAddressesReadonly()"/>
  <testcase name="should make the contact information readonly" time="0.004" classname="CustomerInformationData initialize with customer address information residential addresses makeContactInformationReadonly()"/>
  <testcase name="should know the current residential postal address" time="0.004" classname="CustomerInformationData initialize with customer address information"/>
  <testcase name="should know the current po box postal address" time="0.004" classname="CustomerInformationData initialize with customer address information"/>
  <testcase name="should get the national id" time="0.004" classname="CustomerInformationData initialize with customer with identity documents"/>
  <testcase name="should get the passport" time="0.003" classname="CustomerInformationData initialize with customer with identity documents"/>
  <testcase name="should get permit from permit details" time="0.004" classname="CustomerInformationData initialize with customer with identity documents when getting permit"/>
  <testcase name="should know if the customer is a citizen" time="0.003" classname="CustomerInformationData initialize with customer with identity documents SA citizen"/>
  <testcase name="should know that the customer is not a citizen if 11th digit is not 0" time="0.004" classname="CustomerInformationData initialize with customer with identity documents SA citizen non SA citizen"/>
  <testcase name="should know that the customer is not a citizen if there is no SA ID" time="0.003" classname="CustomerInformationData initialize with customer with identity documents SA citizen non SA citizen"/>
  <testcase name="should know that the customer is not a citizen if ID number is missing" time="0.003" classname="CustomerInformationData initialize with customer with identity documents SA citizen non SA citizen"/>
  <testcase name="should know if the customer is KYC compliant" time="0.009" classname="CustomerInformationData initialize with customer compliance"/>
  <testcase name="should know if the customer is not KYC compliant" time="0.004" classname="CustomerInformationData initialize with customer compliance"/>
  <testcase name="should know if the customer is not KYC compliant when it has no compliance items" time="0.004" classname="CustomerInformationData initialize with customer compliance"/>
  <testcase name="should return consent that corresponds to a specific code" time="0.005" classname="CustomerInformationData initialize with customer consent"/>
  <testcase name="should return false when customer has no consent" time="0.004" classname="CustomerInformationData initialize with customer consent when checking if customer has consent"/>
  <testcase name="should return true when customer has any marketing-related consent" time="0.004" classname="CustomerInformationData initialize with customer consent when checking if customer has consent"/>
  <testcase name="should return when customer only has fraud consent" time="0.004" classname="CustomerInformationData initialize with customer consent when checking if customer has consent"/>
  <testcase name="should create a consent if it does not exist" time="0.003" classname="CustomerInformationData initialize with customer consent when setting consent"/>
  <testcase name="should update a consent it does exist" time="0.005" classname="CustomerInformationData initialize with customer consent when setting consent"/>
  <testcase name="should return true when customer is missing information on citizenship" time="0.005" classname="CustomerInformationData initialize with customer with country related fields"/>
  <testcase name="should return true when customer is missing information on nationality" time="0.004" classname="CustomerInformationData initialize with customer with country related fields"/>
  <testcase name="should return true when customer is missing information on country of birth" time="0.005" classname="CustomerInformationData initialize with customer with country related fields"/>
  <testcase name="should return false when customer has given all necessary information" time="0.004" classname="CustomerInformationData initialize with customer with country related fields"/>
  <testcase name="should return true when customer is missing information on permit type" time="0.033" classname="CustomerInformationData initialize with customer with passport related fields"/>
  <testcase name="should return true when customer is missing information on permit number" time="0.008" classname="CustomerInformationData initialize with customer with passport related fields"/>
  <testcase name="should return true when customer is missing information on permit issue date" time="0.005" classname="CustomerInformationData initialize with customer with passport related fields"/>
  <testcase name="should return true when customer is missing information on permit expiry date" time="0.004" classname="CustomerInformationData initialize with customer with passport related fields"/>
  <testcase name="should return false when customer has given all necessary information" time="0.005" classname="CustomerInformationData initialize with customer with passport related fields"/>
  <testcase name="should revert current customer to the customer that was previously stashed" time="0.004" classname="CustomerInformationData revert"/>
  <testcase name="should reset the stashed customer" time="0.004" classname="CustomerInformationData apply"/>
  <testcase name="should return false when customer has not been stashed" time="0.004" classname="CustomerInformationData hasEditedEmploymentDetails"/>
  <testcase name="should return false when employment details have not been changed" time="0.005" classname="CustomerInformationData hasEditedEmploymentDetails"/>
  <testcase name="should return true when employment details have been changed" time="0.005" classname="CustomerInformationData hasEditedEmploymentDetails"/>
  <testcase name="should return true when unemployment reason has been changed" time="0.006" classname="CustomerInformationData hasEditedEmploymentDetails"/>
  <testcase name="should return true when qualification code has been changed" time="0.005" classname="CustomerInformationData hasEditedEmploymentDetails"/>
  <testcase name="should return false when customer has not been stashed" time="0.006" classname="CustomerInformationData hasEditedConsentClauses"/>
  <testcase name="should return false when consent clauses have not been changed" time="0.006" classname="CustomerInformationData hasEditedConsentClauses"/>
  <testcase name="should return true when consent clauses have been changed" time="0.005" classname="CustomerInformationData hasEditedConsentClauses"/>
  <testcase name="should initialize customer information data with customer record returned from the customer service" time="0.004" classname="CustomerInformationLoader When customerService returns a customer record"/>
  <testcase name="should reject the promise returned by the service" time="0.004" classname="CustomerInformationLoader When customerService throws an error"/>
  <testcase name="should invoke the customer information service" time="0.004" classname="CustomerService getCustomer"/>
  <testcase name="should resolve with customer information" time="0.003" classname="CustomerService getCustomer"/>
  <testcase name="should update the customer information" time="0.004" classname="CustomerService updateCustomer"/>
  <testcase name="should should reject errors on save" time="0.004" classname="CustomerService updateCustomer"/>
  <testcase name="should update the customer income and expenses" time="0.003" classname="CustomerService updateIncomeAndExpenses"/>
  <testcase name="should update the customer fraud consent and source of funds" time="0.003" classname="CustomerService updateFraudConsentAndSourceOfFunds"/>
  <testcase name="should update the customer contact information" time="0.003" classname="CustomerService updateContactInfo"/>
  <testcase name="should update customer employment" time="0.003" classname="CustomerService updateEmployment"/>
  <testcase name="should update customer address with address(es) edited today" time="0.037" classname="CustomerService updateAddress"/>
  <testcase name="should update customer consent" time="0.005" classname="CustomerService updateConsent"/>
  <testcase name="should update customer basic info" time="0.005" classname="CustomerService updateBasicInfo"/>
  <testcase name="should call isCustomerCompliant on the gateway" time="0.004" classname="CustomerService check customer validity information given card number and analytics string when isCustomerCompliant is called"/>
  <testcase name="should return resolve whether the customer is compliant or not" time="0.004" classname="CustomerService check customer validity information given card number and analytics string when isCustomerCompliant is called"/>
  <testcase name="should reject to promise" time="0.005" classname="CustomerService check customer validity information given card number and analytics string when the gateway returns an unexpected error"/>
  <testcase name="should reject to promise" time="0.006" classname="CustomerService check customer validity information given card number and analytics string when the gateway returns an expected error"/>
  <testcase name="should not navigate away if the the target page is the same as the current" time="0.006" classname="customer information navigation directive controller view"/>
  <testcase name="should navigate away if the page is in view mode" time="0.005" classname="customer information navigation directive controller view"/>
  <testcase name="should call cancel edit using cancel confirmation service if in edit mode" time="0.044" classname="customer information navigation directive controller edit"/>
  <testcase name="should compile the partial correctly" time="0.016" classname="customer information navigation directive directive"/>
  <testcase name="should load the edit address controller" time="0.003" classname="EditAddressController routes"/>
  <testcase name="should retrieve all the accommodation types" time="0.005" classname="EditAddressController controller initialize"/>
  <testcase name="should make customer info available on the scope" time="0.006" classname="EditAddressController controller initialize"/>
  <testcase name="should set empty residential address on scope if customer address does not exist" time="0.005" classname="EditAddressController controller initialize when getting residential address"/>
  <testcase name="should set residential address on scope if customer address does exist" time="0.02" classname="EditAddressController controller initialize when getting residential address"/>
  <testcase name="should set empty postal address on scope if customer address does not exist" time="0.007" classname="EditAddressController controller initialize when getting postal address"/>
  <testcase name="should set postal address on scope if customer address does exist" time="0.008" classname="EditAddressController controller initialize when getting postal address"/>
  <testcase name="should set isSamePostalAndResidential to undefined if customer has no residential address" time="0.008" classname="EditAddressController controller initialize when setting isSamePostalAndResidential on scope"/>
  <testcase name="should set isSamePostalAndResidential to undefined if customer has no postal address" time="0.008" classname="EditAddressController controller initialize when setting isSamePostalAndResidential on scope"/>
  <testcase name="should set isSamePostalAndResidential to true if customer residential and postal address match" time="0.015" classname="EditAddressController controller initialize when setting isSamePostalAndResidential on scope"/>
  <testcase name="should set isSamePostalAndResidential to false if customer residential and postal address do not match" time="0.009" classname="EditAddressController controller initialize when setting isSamePostalAndResidential on scope"/>
  <testcase name="should set isSamePostalAndResidential to false if setPostalSameAsResidential called with false" time="0.009" classname="EditAddressController controller when setting postal address"/>
  <testcase name="should set isSamePostalAndResidential to true if setPostalSameAsResidential called with true" time="0.008" classname="EditAddressController controller when setting postal address"/>
  <testcase name="should clear postal address if setPostalSameAsResidential called with false" time="0.009" classname="EditAddressController controller when setting postal address"/>
  <testcase name="should not set error message if street PO Box is undefined" time="0.008" classname="EditAddressController controller check street details when editing residential address"/>
  <testcase name="should know when street name is missing" time="0.009" classname="EditAddressController controller check street details when editing residential address"/>
  <testcase name="should know when street number is missing" time="0.007" classname="EditAddressController controller check street details when editing residential address"/>
  <testcase name="should navigate to employment page while cancelling customer information edit" time="0.009" classname="EditAddressController controller on next"/>
  <testcase name="should cancel edit using CancelConfirmationService" time="0.047" classname="EditAddressController controller cancel"/>
  <testcase name="should call cancel confirmation and go back one in history" time="0.007" classname="EditAddressController controller cancel"/>
  <testcase name="should cancel save if both residential and postal addresses have not changed" time="0.075" classname="EditAddressController controller on save"/>
  <testcase name="should set validFrom to today if residential address has been changed" time="0.01" classname="EditAddressController controller on save residential address usage validFrom"/>
  <testcase name="should not set validFrom to today if residential address has not been changed" time="0.159" classname="EditAddressController controller on save residential address usage validFrom"/>
  <testcase name="should set validFrom to today if postal address has been changed" time="0.014" classname="EditAddressController controller on save postal address usage validFrom"/>
  <testcase name="should not set validFrom to today if postal address has not been changed" time="0.007" classname="EditAddressController controller on save postal address usage validFrom"/>
  <testcase name="should call save when the customer should be created" time="0.005" classname="EditAddressController controller on save on create"/>
  <testcase name="should not delete the permit details if a passport has been captured" time="0.005" classname="EditAddressController controller on save on create"/>
  <testcase name="should show the modal when save fails for an existing customer" time="0.005" classname="EditAddressController controller on save on create"/>
  <testcase name="should navigate to link card if customer chooses to link existing card" time="0.004" classname="EditAddressController controller on save on create"/>
  <testcase name="should set declined reason on rcp application if error code is &apos;4445&apos;" time="0.006" classname="EditAddressController controller on save on create because customer has open RCP account"/>
  <testcase name="should navigate to rcp decline path" time="0.007" classname="EditAddressController controller on save on create because customer has open RCP account"/>
  <testcase name="should return to edit address when save fails for a customer" time="0.006" classname="EditAddressController controller on save on create"/>
  <testcase name="should call update when the customer should not be created" time="0.005" classname="EditAddressController controller on save on update"/>
  <testcase name="should redirect to view address page" time="0.004" classname="EditAddressController controller on save on update on success"/>
  <testcase name="should push error message into ApplicationParameters for an existing customer" time="0.004" classname="EditAddressController controller on save on update on error"/>
  <testcase name="should not push error message into ApplicationParameters for a new customer" time="0.004" classname="EditAddressController controller on save on update on error"/>
  <testcase name="should make the error message available to the scope" time="0.004" classname="EditAddressController controller on save on update on error"/>
  <testcase name="should not redirect the customer to view address page" time="0.005" classname="EditAddressController controller on save on update on error"/>
  <testcase name="should set validFrom of address usage to today&apos;s date for both addresses" time="0.01" classname="EditAddressController controller on save on saving residential and postal address"/>
  <testcase name="should ensure address details in customer request only contains one residential and one postal address" time="0.006" classname="EditAddressController controller on save on saving residential and postal address adding addresses"/>
  <testcase name="should ensure address details in customer request contains both residential and postal address if postal equals residential" time="0.005" classname="EditAddressController controller on save on saving residential and postal address adding addresses"/>
  <testcase name="should ensure address details in customer request only contains residential address being edited" time="0.006" classname="EditAddressController controller on save on saving residential and postal address editing addresses"/>
  <testcase name="should ensure address details in customer request only contains postal address being edited" time="0.007" classname="EditAddressController controller on save on saving residential and postal address editing addresses"/>
  <testcase name="should ensure address details in customer request has matching residential and postal addresses if isSamePostalAndResidential is true" time="0.006" classname="EditAddressController controller on save on saving residential and postal address editing addresses"/>
  <testcase name="should populate countries" time="0.006" classname="EditBasicController initialize"/>
  <testcase name="should set citizenship and nationality to ZA when they are missing on customer profile" time="0.006" classname="EditBasicController initialize with countries for a SA citizen"/>
  <testcase name="should not update citizenship and nationality to ZA when they already exist" time="0.005" classname="EditBasicController initialize with countries for a SA citizen"/>
  <testcase name="should not populate citizenship and nationality" time="0.004" classname="EditBasicController initialize with countries for non-SA citizen"/>
  <testcase name="should create empty permit if customer has no permit information" time="0.026" classname="EditBasicController when customer has passport when populating permit"/>
  <testcase name="should use customer existing permit information if available" time="0.005" classname="EditBasicController when customer has passport when populating permit"/>
  <testcase name="should populate permit types" time="0.004" classname="EditBasicController when customer has passport"/>
  <testcase name="should set latestDateOfPermitIssue to current date" time="0.004" classname="EditBasicController when customer has passport"/>
  <testcase name="should populate passport origin" time="0.005" classname="EditBasicController when customer has passport"/>
  <testcase name="should set permit expiry date error message when current moment" time="0.005" classname="EditBasicController when customer has passport"/>
  <testcase name="should set permit expiry date error message when it is within the next 3 months" time="0.006" classname="EditBasicController when customer has passport"/>
  <testcase name="should set permit expiry date error message when it is within the next 3 months" time="0.005" classname="EditBasicController when customer has passport"/>
  <testcase name="should return false if permit expiry date is not valid" time="0.005" classname="EditBasicController when customer has passport allDatesValid"/>
  <testcase name="should return true if all dates are valid" time="0.005" classname="EditBasicController when customer has passport allDatesValid"/>
  <testcase name="should get customer info validation for basic info" time="0.004" classname="EditBasicController getValidationNotification"/>
  <testcase name="should add cRUDIndicator &quot;D&quot; on existing customer permit details" time="0.005" classname="EditBasicController on save when updating permit info"/>
  <testcase name="should push permit onto customer permit details" time="0.005" classname="EditBasicController on save when updating permit info"/>
  <testcase name="should call save and redirect to view" time="0.004" classname="EditBasicController on save"/>
  <testcase name="should not redirect to view on error" time="0.009" classname="EditBasicController on save on error"/>
  <testcase name="should set server error message on scope" time="0.005" classname="EditBasicController on save on error"/>
  <testcase name="should show any otp errors for an existing customer" time="0.004" classname="EditBasicController on save on error"/>
  <testcase name="should call cancel confirmation and go back one in history " time="0.005" classname="EditBasicController on cancel"/>
  <testcase name="should cancel editing of customer information" time="0.005" classname="EditBasicController next"/>
  <testcase name="should go to address section" time="0.004" classname="EditBasicController next"/>
  <testcase name="should get the correct template url" time="0.003" classname="Edit Consent routes"/>
  <testcase name="should get the correct controller" time="0.003" classname="Edit Consent routes"/>
  <testcase name="should have the consents" time="0.028" classname="Edit Consent controller initialize"/>
  <testcase name="should set editStatus on the scope" time="0.005" classname="Edit Consent controller initialize"/>
  <testcase name="should populate the consent clauses" time="0.003" classname="Edit Consent controller initialize with customer consents when customer has no consent information"/>
  <testcase name="should return true when the consent clauses have not been added on customer yet" time="0.003" classname="Edit Consent controller initialize with customer consents when customer has no consent information"/>
  <testcase name="should not populate consent clauses again" time="0.005" classname="Edit Consent controller initialize with customer consents when customer has consent information"/>
  <testcase name="should not mark the consent form as dirty" time="0.012" classname="Edit Consent controller initialize with customer consents when customer has consent information"/>
  <testcase name="should return false when the consent clauses have already been saved on customer profile" time="0.008" classname="Edit Consent controller initialize with customer consents when customer has consent information"/>
  <testcase name="should set consent form dirty when there are no marketing consents" time="0.004" classname="Edit Consent controller on save with marketing consents"/>
  <testcase name="should not set consent form dirty when there are marketing consents" time="0.004" classname="Edit Consent controller on save with marketing consents"/>
  <testcase name="should not call update consent in Customer service" time="0.005" classname="Edit Consent controller on save when consent details have not been changed"/>
  <testcase name="should cancel editing of customer consents" time="0.005" classname="Edit Consent controller on save when consent details have not been changed"/>
  <testcase name="should call update consent in CustomerService" time="0.003" classname="Edit Consent controller on save when consent form has been changed"/>
  <testcase name="should redirect to view consent page upon saving consents" time="0.003" classname="Edit Consent controller on save when consent form has been changed"/>
  <testcase name="should set server error message" time="0.004" classname="Edit Consent controller on save when consent form has been changed on error"/>
  <testcase name="should set otp error message when user has dashboards" time="0.005" classname="Edit Consent controller on save when consent form has been changed on error"/>
  <testcase name="should not set otp error message when user has no dashboard" time="0.004" classname="Edit Consent controller on save when consent form has been changed on error"/>
  <testcase name="should not redirect to view consents page" time="0.004" classname="Edit Consent controller on save when consent form has been changed on error"/>
  <testcase name="should cancel edit using CancelConfirmationService" time="0.009" classname="Edit Consent controller on cancel"/>
  <testcase name="should call cancel confirmation and go back one in history" time="0.005" classname="Edit Consent controller on cancel"/>
  <testcase name="languages" time="0.006" classname="EditContactController initialize drop down options"/>
  <testcase name="contact types" time="0.005" classname="EditContactController initialize drop down options"/>
  <testcase name="should set the edit status on the scope" time="0.004" classname="EditContactController initialize"/>
  <testcase name="should add contact with default comm type (voice)" time="0.006" classname="EditContactController communication information"/>
  <testcase name="should remove first contact" time="0.005" classname="EditContactController communication information"/>
  <testcase name="should keep an invalid value when comm type changed" time="0.006" classname="EditContactController communication information"/>
  <testcase name="should set view value and model value to keep the invalid value" time="0.006" classname="EditContactController communication information"/>
  <testcase name="should call invalidContact and return true if user has valid contact(s)" time="0.027" classname="EditContactController communication information when contact is valid"/>
  <testcase name="should return false if user has invalid contact(s)" time="0.023" classname="EditContactController communication information when contact is valid"/>
  <testcase name="should return true if contact valid" time="0.005" classname="EditContactController communication information with invalid contact"/>
  <testcase name="should return false if contact invalid" time="0.004" classname="EditContactController communication information with invalid contact"/>
  <testcase name="should return correct message for e-mail address" time="0.005" classname="EditContactController communication information with invalid contact when retrieving invalid pattern message"/>
  <testcase name="should return correct message for cell phone" time="0.009" classname="EditContactController communication information with invalid contact when retrieving invalid pattern message"/>
  <testcase name="should return correct message for fax" time="0.005" classname="EditContactController communication information with invalid contact when retrieving invalid pattern message"/>
  <testcase name="should return correct message for telephone" time="0.005" classname="EditContactController communication information with invalid contact when retrieving invalid pattern message"/>
  <testcase name="should navigate to address page while cancelling customer information edit" time="0.004" classname="EditContactController on next"/>
  <testcase name="should call save and redirect to view" time="0.005" classname="EditContactController on save"/>
  <testcase name="should show any otp errors for an existing user" time="0.004" classname="EditContactController on save on error"/>
  <testcase name="should not show any otp errors for new user" time="0.004" classname="EditContactController on save on error"/>
  <testcase name="should set server error message on scope" time="0.004" classname="EditContactController on save on error"/>
  <testcase name="should not redirect to view" time="0.004" classname="EditContactController on save on error"/>
  <testcase name="should call cancel confirmation" time="0.004" classname="EditContactController on cancel"/>
  <testcase name="should resolve the edit employment route correctly" time="0.003" classname="EditEmploymentController routes"/>
  <testcase name="should resolve the add employment route correctly" time="0.003" classname="EditEmploymentController routes"/>
  <testcase name="should load the correct controller" time="0.007" classname="EditEmploymentController routes"/>
  <testcase name="should load the correct template" time="0.003" classname="EditEmploymentController routes"/>
  <testcase name="occupation industries" time="0.008" classname="EditEmploymentController controller drop down options"/>
  <testcase name="occupation levels" time="0.006" classname="EditEmploymentController controller drop down options"/>
  <testcase name="levels of education" time="0.005" classname="EditEmploymentController controller drop down options"/>
  <testcase name="study type" time="0.005" classname="EditEmploymentController controller drop down options"/>
  <testcase name="should set latestEmploymentStartDate to current date" time="0.005" classname="EditEmploymentController controller initialize"/>
  <testcase name="should know whether customer is currently employed" time="0.005" classname="EditEmploymentController controller initialize"/>
  <testcase name="should get otp error message for existing customer" time="0.029" classname="EditEmploymentController controller initialize with server error message"/>
  <testcase name="should not get otp error message for new customer" time="0.005" classname="EditEmploymentController controller initialize with server error message"/>
  <testcase name="should set isEmployed to true when adding a new employment" time="0.006" classname="EditEmploymentController controller initialize for isEmployed"/>
  <testcase name="should set isEmployed to isCustomerEmployed if customer has unemployment reason" time="0.006" classname="EditEmploymentController controller initialize for isEmployed when modifying existing employment"/>
  <testcase name="should set isEmployed to undefined if customer lacks both employment details and unemployment reason" time="0.006" classname="EditEmploymentController controller initialize for isEmployed when modifying existing employment"/>
  <testcase name="should clear previous employment end date when it is in the future" time="0.006" classname="EditEmploymentController controller initialize with previous employment"/>
  <testcase name="should not clear previous employment end date when it is in the past" time="0.005" classname="EditEmploymentController controller initialize with previous employment"/>
  <testcase name="should filter options in levelOfEducation" time="0.007" classname="EditEmploymentController controller on change study type"/>
  <testcase name="should return an empty employment details when adding employment" time="0.007" classname="EditEmploymentController controller current employment"/>
  <testcase name="should return current employment details when customer has current employment details" time="0.006" classname="EditEmploymentController controller current employment when modifying employment"/>
  <testcase name="should return an empty employment details when customer has no current employment details" time="0.006" classname="EditEmploymentController controller current employment when modifying employment"/>
  <testcase name="should return previous employment details when modifying a customer currently employed" time="0.006" classname="EditEmploymentController controller previous employment"/>
  <testcase name="should return current employment details when updating a customer moving from being employed to unemployed" time="0.005" classname="EditEmploymentController controller previous employment"/>
  <testcase name="should return previous employment details when updating a customer who is already unemployed" time="0.007" classname="EditEmploymentController controller previous employment"/>
  <testcase name="should set scope isEmployed to true" time="0.006" classname="EditEmploymentController controller addEmployment"/>
  <testcase name="should set current employment end date to the end of time" time="0.005" classname="EditEmploymentController controller addEmployment"/>
  <testcase name="should delete unemployment reason" time="0.005" classname="EditEmploymentController controller addEmployment"/>
  <testcase name="should set customer to employed" time="0.005" classname="EditEmploymentController controller removeEmployment"/>
  <testcase name="should reset current employment to its original state" time="0.005" classname="EditEmploymentController controller removeEmployment"/>
  <testcase name="should delete current employment end date" time="0.026" classname="EditEmploymentController controller removeEmployment"/>
  <testcase name="should return false when current employment start date is empty" time="0.006" classname="EditEmploymentController controller currentEmploymentIsLessThanAYear"/>
  <testcase name="should return false when current employment start date is at least a year" time="0.007" classname="EditEmploymentController controller currentEmploymentIsLessThanAYear"/>
  <testcase name="should return true when current employment start date is less than a year" time="0.007" classname="EditEmploymentController controller currentEmploymentIsLessThanAYear"/>
  <testcase name="should return true when customer is no longer employed but has employment details" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when modifying"/>
  <testcase name="should return false when modifying current employment details" time="0.007" classname="EditEmploymentController controller needPreviousEmployment when modifying"/>
  <testcase name="should return true when a customer already has employment details" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when adding"/>
  <testcase name="should return true when it is less than a year" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when adding for first time employment"/>
  <testcase name="should return true when customer has been employed before" time="0.007" classname="EditEmploymentController controller needPreviousEmployment when adding for first time employment"/>
  <testcase name="should return false when customer has not been employed before" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when adding for first time employment"/>
  <testcase name="should return false for first employment that is at least a year" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when adding"/>
  <testcase name="should return false when current employment start date is still empty" time="0.006" classname="EditEmploymentController controller needPreviousEmployment when adding"/>
  <testcase name="should set earliest date to previous employment end date when end date is in the past" time="0.006" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should set earliest date one day after previous employment start date when end date is in the future" time="0.006" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should return false when modifying current employment details" time="0.007" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should set earliest date one day after previous employment start date when there is no end date" time="0.01" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should set earliest date to one day after previous employment end date when end date matches previous employment start date" time="0.009" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should set earliest date to &apos;01 Jan 1970&apos; when there is no previous employment" time="0.005" classname="EditEmploymentController controller getEarliestDateForCurrentEmployment"/>
  <testcase name="should set latest date to employment start date if start date is not empty" time="0.022" classname="EditEmploymentController controller getLatestDateForPreviousEmployment when adding employment"/>
  <testcase name="should set latest date to employment to yesterday if start date is empty" time="0.006" classname="EditEmploymentController controller getLatestDateForPreviousEmployment when adding employment"/>
  <testcase name="should return false when customer has not been employed before" time="0.007" classname="EditEmploymentController controller getLatestDateForPreviousEmployment when adding employment"/>
  <testcase name="should set latest date to todays date when modifying employment" time="0.005" classname="EditEmploymentController controller getLatestDateForPreviousEmployment"/>
  <testcase name="should return true if customer has no previous employment" time="0.007" classname="EditEmploymentController controller canBeWithoutPreviousEmployment when adding employment that is less than a year"/>
  <testcase name="should return false if customer has previous employment" time="0.006" classname="EditEmploymentController controller canBeWithoutPreviousEmployment when adding employment that is less than a year"/>
  <testcase name="should clean fields related to previous employment if customer has no employment details" time="0.006" classname="EditEmploymentController controller cleanPreviousEmployment when customer has been employed for more than a year"/>
  <testcase name="should not clean fields related to previous employment if customer has employment details" time="0.006" classname="EditEmploymentController controller cleanPreviousEmployment when customer has been employed for more than a year"/>
  <testcase name="should not clean fields related to previous employment" time="0.006" classname="EditEmploymentController controller cleanPreviousEmployment when customer has been employed for less than a year"/>
  <testcase name="should return true given isCustomerEmployed is true" time="0.01" classname="EditEmploymentController controller canToggleEmploymentStatus"/>
  <testcase name="should return true given customer has no employment status" time="0.005" classname="EditEmploymentController controller canToggleEmploymentStatus with isCustomerEmployed set to false"/>
  <testcase name="should return false given customer has employment status" time="0.006" classname="EditEmploymentController controller canToggleEmploymentStatus with isCustomerEmployed set to false"/>
  <testcase name="should clear previous employment fields if first employment" time="0.006" classname="EditEmploymentController controller when toggling first employment"/>
  <testcase name="should not clear previous employment fields if not first employment" time="0.006" classname="EditEmploymentController controller when toggling first employment"/>
  <testcase name="should get customer info validation for employment" time="0.005" classname="EditEmploymentController controller getValidationNotification"/>
  <testcase name="should return label text followed by *" time="0.005" classname="EditEmploymentController controller getLabelFor"/>
  <testcase name="should omit the * when the customer has previous employment" time="0.005" classname="EditEmploymentController controller getLabelFor"/>
  <testcase name="should not call update employment in Customer service" time="0.006" classname="EditEmploymentController controller save when employment details have not been changed"/>
  <testcase name="should cancel editing of customer employment" time="0.005" classname="EditEmploymentController controller save when employment details have not been changed"/>
  <testcase name="should call update employment in CustomerService" time="0.026" classname="EditEmploymentController controller save when employment details have been changed and customer is employed"/>
  <testcase name="should redirect to view employment page upon saving employment" time="0.007" classname="EditEmploymentController controller save when employment details have been changed and customer is employed"/>
  <testcase name="should call update employment in CustomerService" time="0.006" classname="EditEmploymentController controller save when employment details have been changed and customer is not employed"/>
  <testcase name="should redirect to view employment page upon saving employment" time="0.009" classname="EditEmploymentController controller save when employment details have been changed and customer is not employed"/>
  <testcase name="should set server error message" time="0.007" classname="EditEmploymentController controller save when employment details have been changed on error"/>
  <testcase name="should set otp error message when user has dashboards" time="0.006" classname="EditEmploymentController controller save when employment details have been changed on error"/>
  <testcase name="should not set otp error message when user has no dashboard" time="0.006" classname="EditEmploymentController controller save when employment details have been changed on error"/>
  <testcase name="should not navigate to view employment page" time="0.005" classname="EditEmploymentController controller save when employment details have been changed on error"/>
  <testcase name="should add current and previous employments to customer employment details" time="0.005" classname="EditEmploymentController controller save when employment details have been changed when customer is employed"/>
  <testcase name="should remove unemployment reason" time="0.005" classname="EditEmploymentController controller save when employment details have been changed when customer is employed"/>
  <testcase name="should set unemployment reason" time="0.005" classname="EditEmploymentController controller save when employment details have been changed when customer is unemployed"/>
  <testcase name="should cancel edit using CancelConfirmationService" time="0.004" classname="EditEmploymentController controller cancel"/>
  <testcase name="should call cancel confirmation and go back one in history" time="0.005" classname="EditEmploymentController controller cancel"/>
  <testcase name="should cancel editing of customer information" time="0.004" classname="EditEmploymentController controller next"/>
  <testcase name="should go to the income and expenses section" time="0.005" classname="EditEmploymentController controller next"/>
  <testcase name="should set the unemployment analytics prefix for a new customer" time="0.009" classname="EditEmploymentController controller analytics"/>
  <testcase name="should set the unemployment analytics prefix for an existing customer that is employed" time="0.006" classname="EditEmploymentController controller analytics"/>
  <testcase name="should set the unemployment analytics prefix for an existing customer that is unemployed" time="0.006" classname="EditEmploymentController controller analytics"/>
  <testcase name="should return true when customer is employed" time="0.005" classname="EditEmploymentController controller canSave"/>
  <testcase name="should return false when customer has not indicated whether they are employed or not" time="0.004" classname="EditEmploymentController controller canSave"/>
  <testcase name="should return true given customer management v4 is toggled on" time="0.026" classname="EditEmploymentController controller canSave when customer is not employed"/>
  <testcase name="should return false given customer management v4 is toggled off and there is no qualification details" time="0.004" classname="EditEmploymentController controller canSave when customer is not employed"/>
  <testcase name="should resolve the edit income route correctly" time="0.002" classname="EditIncomeAndExpenseController routes"/>
  <testcase name="should load the correct controller" time="0.003" classname="EditIncomeAndExpenseController routes"/>
  <testcase name="should load the correct template" time="0.003" classname="EditIncomeAndExpenseController routes"/>
  <testcase name="should not initialise an empty income and total expense item" time="0.005" classname="EditIncomeAndExpenseController controller initialise if the customer has income and total expense item"/>
  <testcase name="cancel button text should be cancel" time="0.004" classname="EditIncomeAndExpenseController controller initialise if the customer has income and total expense item"/>
  <testcase name="should initialise an empty income and total expense item if the customer does not have them" time="0.003" classname="EditIncomeAndExpenseController controller initialise if the customer does not have any income and total expense item"/>
  <testcase name="cancel button text should be back" time="0.007" classname="EditIncomeAndExpenseController controller initialise if the customer does not have any income and total expense item"/>
  <testcase name="should redirect back to view on successful update" time="0.004" classname="EditIncomeAndExpenseController controller on save"/>
  <testcase name="should show OTP errors for an existing user" time="0.004" classname="EditIncomeAndExpenseController controller on save on error"/>
  <testcase name="should not show OTP errors for a new user" time="0.004" classname="EditIncomeAndExpenseController controller on save on error"/>
  <testcase name="should set server error message on scope" time="0.004" classname="EditIncomeAndExpenseController controller on save on error"/>
  <testcase name="should not redirect to view income and expense page" time="0.004" classname="EditIncomeAndExpenseController controller on save on error"/>
  <testcase name="should cancel edit using CancelConfirmationService" time="0.004" classname="EditIncomeAndExpenseController controller cancel"/>
  <testcase name="should call cancel confirmation and go back one in history" time="0.004" classname="EditIncomeAndExpenseController controller cancel"/>
  <testcase name="should navigate to consent page while cancelling customer information edit" time="0.004" classname="EditIncomeAndExpenseController controller on next"/>
  <testcase name="should remove the income details field" time="0.005" classname="EditIncomeAndExpenseController controller income"/>
  <testcase name="should add additional income items" time="0.004" classname="EditIncomeAndExpenseController controller income"/>
  <testcase name="should fetch a list of income types" time="0.004" classname="EditIncomeAndExpenseController controller income"/>
  <testcase name="should show add additional income item" time="0.004" classname="EditIncomeAndExpenseController controller income"/>
  <testcase name="should hide add additional income item" time="0.003" classname="EditIncomeAndExpenseController controller income"/>
  <testcase name="should get customer info validation for income" time="0.004" classname="EditIncomeAndExpenseController controller getValidationNotification"/>
  <testcase name="should remove original items from list" time="0.005" classname="EditIncomeAndExpenseController controller filter"/>
  <testcase name="should add current item type to list" time="0.004" classname="EditIncomeAndExpenseController controller filter"/>
  <testcase name="should add other item type to list" time="0.005" classname="EditIncomeAndExpenseController controller filter"/>
  <testcase name="should get the correct employment template" time="0.003" classname="Employment routes"/>
  <testcase name="should get the correct employment controller" time="0.003" classname="Employment routes"/>
  <testcase name="should redirect to edit employment page" time="0.004" classname="Employment routes on resolving when the customer has no employment details"/>
  <testcase name="should redirect to edit employment page if customer has no unemployment reason" time="0.019" classname="Employment routes on resolving when the customer has no employment details with customer management v4 toggled on"/>
  <testcase name="should not redirect to edit employment page if customer has unemployment reason" time="0.004" classname="Employment routes on resolving when the customer has no employment details with customer management v4 toggled on"/>
  <testcase name="should not redirect to edit employment page" time="0.004" classname="Employment routes on resolving when the customer has employment details"/>
  <testcase name="should make $routeParams product available to the scope" time="0.007" classname="Employment controller on initialize"/>
  <testcase name="should stash current customer" time="0.005" classname="Employment controller edit()"/>
  <testcase name="should redirect to add employment page when employment action is add" time="0.003" classname="Employment controller edit()"/>
  <testcase name="should redirect to edit employment page when employment action is not add" time="0.003" classname="Employment controller edit()"/>
  <testcase name="should redirect to income page" time="0.004" classname="Employment controller gotoIncomePage"/>
  <testcase name="should get the correct income and expenses template" time="0.002" classname="IncomeAndExpenseController routes"/>
  <testcase name="should get the correct income and expenses controller" time="0.002" classname="IncomeAndExpenseController routes"/>
  <testcase name="should redirect to edit income page upon stashing customer info" time="0.003" classname="IncomeAndExpenseController routes on resolving when customer has zero income and expense"/>
  <testcase name="should not redirect to edit income page upon stashing customer info" time="0.003" classname="IncomeAndExpenseController routes on resolving when customer has at least one income and one expense"/>
  <testcase name="should get the injected ustomer information data" time="0.004" classname="IncomeAndExpenseController controller on initialize"/>
  <testcase name="should get the product applied for" time="0.003" classname="IncomeAndExpenseController controller on initialize"/>
  <testcase name="should stash the original version and change to the edit view when you click edit" time="0.005" classname="IncomeAndExpenseController controller"/>
  <testcase name="should navigate to the submit page when you click next" time="0.004" classname="IncomeAndExpenseController controller"/>
  <testcase name="should get the correct profile template" time="0.003" classname="ProfileController routing"/>
  <testcase name="should get the correct profile controller" time="0.003" classname="ProfileController routing"/>
  <testcase name="should specify the safe return path" time="0.003" classname="ProfileController routing"/>
  <testcase name="should only allow from specific locations" time="0.003" classname="ProfileController routing"/>
  <testcase name="should allow new application of product in route params" time="0.003" classname="ProfileController routing path conditions"/>
  <testcase name="should redirect to edit basic info page if customer needs additional basic info" time="0.004" classname="ProfileController routing on resolving with customer management v4 toggled on"/>
  <testcase name="should stash current customer before redirecting to edit basic info page" time="0.004" classname="ProfileController routing on resolving with customer management v4 toggled on"/>
  <testcase name="should not redirect  to edit basic info page if customer does not need additional basic info" time="0.004" classname="ProfileController routing on resolving with customer management v4 toggled on"/>
  <testcase name="should not redirect to edit basic information page" time="0.004" classname="ProfileController routing on resolving with customer management v4 toggled off"/>
  <testcase name="should fetch the current customer" time="0.004" classname="ProfileController controller on initialize"/>
  <testcase name="should fetch the product info" time="0.008" classname="ProfileController controller on initialize"/>
  <testcase name="should navigate to edit contact if the edit contact button is pushed" time="0.004" classname="ProfileController controller"/>
  <testcase name="should navigate to the address page on next" time="0.004" classname="ProfileController controller"/>
  <testcase name="should show the required fields" time="0.035" classname="customer information - address template address with home address"/>
  <testcase name="should hide optional fields when they are blank" time="0.015" classname="customer information - address template address with home address"/>
  <testcase name="should know when residential address does not exist" time="0.015" classname="customer information - address template address with home address"/>
  <testcase name="should show the required fields" time="0.014" classname="customer information - address template address with postal address"/>
  <testcase name="should hide optional fields when they are blank" time="0.014" classname="customer information - address template address with postal address"/>
  <testcase name="should know when residential address does not exist" time="0.014" classname="customer information - address template address with postal address"/>
  <testcase name="should show all fields" time="0.065" classname="customer information - basic information template with all fields"/>
  <testcase name="should not show optional fields" time="0.081" classname="customer information - basic information template with no optional fields"/>
  <testcase name="should not show modify button" time="0.055" classname="customer information - basic information template when customer information is complete"/>
  <testcase name="should show modify button" time="0.083" classname="customer information - basic information template when customer information is incomplete"/>
  <testcase name="should not show nationality, citizenship and passport related fields" time="0.119" classname="customer information - capture customer basic information template use SA ID as default"/>
  <testcase name="should hide error message when name is ABCDEFGhigklmnOPQRSTuvwxyz -------------" time="0.134" classname="customer information - capture customer basic information template validation"/>
  <testcase name="should show error message when name is ab1" time="0.132" classname="customer information - capture customer basic information template validation"/>
  <testcase name="should hide error message when South African ID number is 1234567890128" time="0.101" classname="customer information - capture customer basic information template validation"/>
  <testcase name="should show error message when South African ID number is 123123123123a" time="0.115" classname="customer information - capture customer basic information template validation"/>
  <testcase name="should show the marketing preferences" time="0.021" classname="customer information - consent template"/>
  <testcase name="should show &quot;Modify marketing options&quot; button" time="0.014" classname="customer information - consent template"/>
  <testcase name="should show get offer buttons" time="0.014" classname="customer information - consent template"/>
  <testcase name="should have all residential address fields" time="0.068" classname="customer information - edit addresses when editing residential and postal address"/>
  <testcase name="should show &quot;Same as home address&quot; radio buttons&quot;" time="0.05" classname="customer information - edit addresses when editing residential and postal address"/>
  <testcase name="should show postal address fields" time="0.083" classname="customer information - edit addresses when editing residential and postal address when residential and postal addresses are different"/>
  <testcase name="should have &quot;Same as home address&quot; no radio button selected" time="0.126" classname="customer information - edit addresses when editing residential and postal address when residential and postal addresses are different"/>
  <testcase name="should not show postal address fields if same postal and home address is set to yes" time="0.098" classname="customer information - edit addresses when editing residential and postal address when residential and postal addresses match"/>
  <testcase name="should have &quot;Same as home address&quot; yes radio button selected" time="0.072" classname="customer information - edit addresses when editing residential and postal address when residential and postal addresses match"/>
  <testcase name="should map branch code" time="0.077" classname="customer information - edit customer basic information template"/>
  <testcase name="should always show notification message" time="0.061" classname="customer information - edit customer basic information template for notification message"/>
  <testcase name="should show as an error message if customer basic info has been validated" time="0.062" classname="customer information - edit customer basic information template for notification message"/>
  <testcase name="should show as an info message if customer basic info has not been validated yet" time="0.076" classname="customer information - edit customer basic information template for notification message"/>
  <testcase name="should not have passport-related fields" time="0.059" classname="customer information - edit customer basic information template for customer with SA ID"/>
  <testcase name="should have country of birth" time="0.085" classname="customer information - edit customer basic information template for customer with SA ID"/>
  <testcase name="should not have nationality and citizenship for SA citizen" time="0.063" classname="customer information - edit customer basic information template for customer with SA ID"/>
  <testcase name="should have nationality and citizenship for non-SA citizen" time="0.089" classname="customer information - edit customer basic information template for customer with SA ID"/>
  <testcase name="should have passport-related fields" time="0.076" classname="customer information - edit customer basic information template for customer with passport"/>
  <testcase name="should have nationality and citizenship for non-SA citizen" time="0.092" classname="customer information - edit customer basic information template for customer with passport"/>
  <testcase name="should have all the marketing preferences" time="0.026" classname="customer information - edit consent template"/>
  <testcase name="should show employment information" time="0.04" classname="customer information - edit employment template when adding employment"/>
  <testcase name="should show previous employment when customer already has employment details" time="0.084" classname="customer information - edit employment template when adding employment"/>
  <testcase name="should only show current employment details when customer is employed" time="0.038" classname="customer information - edit employment template when modifying current employment"/>
  <testcase name="should show previous employment details when customer is no longer employed" time="0.063" classname="customer information - edit employment template when modifying current employment"/>
  <testcase name="should not show employment sections when customer has no employment record" time="0.033" classname="customer information - edit employment template when modifying current employment"/>
  <testcase name="should show the remove button for each income item" time="0.034" classname="customer information - edit income and expenses income"/>
  <testcase name="should show the add additional income link" time="0.028" classname="customer information - edit income and expenses income"/>
  <testcase name="should be visible correct content if income and expenses form is pristine" time="0.029" classname="customer information - edit income and expenses notification message when message is present"/>
  <testcase name="should not be visible if income and expenses form is not pristine" time="0.027" classname="customer information - edit income and expenses notification message when message is present"/>
  <testcase name="should not be visible if message is not present" time="0.028" classname="customer information - edit income and expenses notification message"/>
  <testcase name="should show employment information" time="0.046" classname="customer information - employment template when customer is employed"/>
  <testcase name="should show previous employer information" time="0.021" classname="customer information - employment template when customer has previous employment details"/>
  <testcase name="should show unemployment reason given it is available" time="0.015" classname="customer information - employment template when customer is not employed"/>
  <testcase name="should show no employment record if there is no unemployment reason" time="0.013" classname="customer information - employment template when customer is not employed"/>
  <testcase name="should show education level if available" time="0.014" classname="customer information - employment template with qualification info"/>
  <testcase name="should not show education level if missing" time="0.013" classname="customer information - employment template with qualification info"/>
  <testcase name="should show all income" time="0.022" classname="customer information - income and expenses template income and expenses"/>
  <testcase name="should show all expenses" time="0.023" classname="customer information - income and expenses template income and expenses"/>
  <testcase name="should show modal when flag is true" time="0.022" classname="customer information - income and expenses template income and expenses income and expenses modal"/>
  <testcase name="should create debit order" time="0.001" classname="Debit Order From standard bank account"/>
  <testcase name="should create debit order with consent" time="0.002" classname="Debit Order From non standard bank account"/>
  <testcase name="should create debit order without consent" time="0.029" classname="Debit Order From non standard bank account"/>
  <testcase name="should be able to calculate the loan repayment amount rounded up to the nearest cent" time="0.001" classname="Loan Calculator calculateRepaymentAmount"/>
  <testcase name="should be able to calculate the loan repayment amount rounded up to the nearest cent" time="0.002" classname="Loan Calculator calculateRepaymentAmount"/>
  <testcase name="should return the base fee if the loan amount is zero" time="0.001" classname="Loan Calculator calculateInitiationFee"/>
  <testcase name="should return the minimum loan amount if the fee is less than the minimum" time="0.002" classname="Loan Calculator calculateInitiationFee"/>
  <testcase name="should return the maximum initiation fee amount if the fee is more than the maximum" time="0.001" classname="Loan Calculator calculateInitiationFee"/>
  <testcase name="should return the exact initiaiton fee based on the rate if the fee falls within the bounds of maximum and minimum" time="0.001" classname="Loan Calculator calculateInitiationFee"/>
  <testcase name="should be falsy if not started" time="0.001" classname="RCP Application Factory isNew"/>
  <testcase name="should be truthy if started" time="0.001" classname="RCP Application Factory isNew"/>
  <testcase name="should return the selected options" time="0.001" classname="RCP Application Factory select RCP application details"/>
  <testcase name="should set the offer to the declined offer" time="0.001" classname="RCP Application Factory decline Rcp offer"/>
  <testcase name="should return true for isDeclined" time="0.001" classname="RCP Application Factory decline Rcp offer"/>
  <testcase name="should set the offer that was passed in" time="0.005" classname="RCP Application Factory continue Rcp application"/>
  <testcase name="should indicate that pre-screening is completed" time="0.001" classname="RCP Application Factory continue Rcp application"/>
  <testcase name="should indicate application is pending" time="0.001" classname="RCP Application Factory continue Rcp application"/>
  <testcase name="should return the minimum repayment for the offer" time="0.002" classname="RCP Calculator getMinimumRepaymentAmountForOffer"/>
  <testcase name="should return the minimum repayment for the offer even when a string is passed in" time="0.001" classname="RCP Calculator getMinimumRepaymentAmountForOffer"/>
  <testcase name="should return the correct minimum repayment without floating point errors" time="0.001" classname="RCP Calculator getMinimumRepaymentAmountForOffer"/>
  <testcase name="should use the correct template" time="0.004" classname="Confirm Offer routes when an offer is received"/>
  <testcase name="should use the correct controller" time="0.003" classname="Confirm Offer routes when an offer is received"/>
  <testcase name="should allow an application in progress" time="0.003" classname="Confirm Offer routes path configuration"/>
  <testcase name="should not allow applications in any other state" time="0.003" classname="Confirm Offer routes path configuration"/>
  <testcase name="should set the offer on the scope" time="0.004" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should set the monthly repayment amount" time="0.003" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should put the download rcp debit order mandate URL on the scope" time="0.003" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should put debit order details on the scope" time="0.008" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should set system principal on scope" time="0.006" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should set application number" time="0.004" classname="Confirm Offer RcpConfirmOfferController should set default values"/>
  <testcase name="should redirect to rcp offer page" time="0.004" classname="Confirm Offer RcpConfirmOfferController Back"/>
  <testcase name="should go to previous flow step by 1" time="0.003" classname="Confirm Offer RcpConfirmOfferController Back"/>
  <testcase name="should send the user to the confirm rcp offer page" time="0.004" classname="Confirm Offer RcpConfirmOfferController confirm Rcp offer"/>
  <testcase name="should call RcpOfferService with rcp acceptance details" time="0.003" classname="Confirm Offer RcpConfirmOfferController confirm Rcp offer"/>
  <testcase name="should go to next flow step" time="0.003" classname="Confirm Offer RcpConfirmOfferController confirm Rcp offer"/>
  <testcase name="should have offerConfirmationDetails" time="0.004" classname="Confirm Offer RcpConfirmOfferController confirm Rcp offer RcpApplication"/>
  <testcase name="should show offer details" time="0.015" classname="Confirm offer template"/>
  <testcase name="should show debit order details" time="0.012" classname="Confirm offer template"/>
  <testcase name="should show product name" time="0.012" classname="Confirm offer template"/>
  <testcase name="should call confirm on click" time="0.012" classname="Confirm offer template confirm offer button"/>
  <testcase name="should be disabled when not agreed" time="0.013" classname="Confirm offer template confirm offer button"/>
  <testcase name="should be enabled when agreed" time="0.026" classname="Confirm offer template confirm offer button"/>
  <testcase name="should record analytics" time="0.013" classname="Confirm offer template confirm offer button"/>
  <testcase name="link should record analytics" time="0.029" classname="Confirm offer template download loan agreement and debit order mandate"/>
  <testcase name="should set input values and keys for query Params" time="0.013" classname="Confirm offer template download loan agreement and debit order mandate"/>
  <testcase name="should set the download url for form submit" time="0.012" classname="Confirm offer template download loan agreement and debit order mandate"/>
  <testcase name="redirects back to revolving credit plan" time="0.012" classname="Confirm offer template"/>
  <testcase name="should use the correct template" time="0.003" classname="Finish Rcp Offer routes when an Rcp offer is confirmed"/>
  <testcase name="should use the correct controller" time="0.002" classname="Finish Rcp Offer routes when an Rcp offer is confirmed"/>
  <testcase name="should allow an application in progress" time="0.002" classname="Finish Rcp Offer routes path configurations"/>
  <testcase name="should not allow an application in any other state" time="0.002" classname="Finish Rcp Offer routes path configurations"/>
  <testcase name="should set the scope offer details to the RcpApplication offer details" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController"/>
  <testcase name="should set the scope confirmation offer details to RcpApplication confirmationOfferDetails" time="0.002" classname="Finish Rcp Offer RcpFinishOfferController"/>
  <testcase name="should set the scope preferredBranch to RcpApplication selectedBranch name" time="0.002" classname="Finish Rcp Offer RcpFinishOfferController"/>
  <testcase name="should set the electronic consent received on scope" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController"/>
  <testcase name="should set the requested loan amount on the scope" time="0.007" classname="Finish Rcp Offer RcpFinishOfferController"/>
  <testcase name="finish application button should prompt user to sign-out" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController finishApplication when customer is new to bank"/>
  <testcase name="should sign the user out" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController finishApplication when customer is new to bank"/>
  <testcase name="finish application button should prompt user to return to account summary" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController finishApplication when customer is not new to bank"/>
  <testcase name="should redirect to account summary page" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController finishApplication when customer is not new to bank"/>
  <testcase name="should resolve has private banking product to false if user has none" time="0.003" classname="Finish Rcp Offer RcpFinishOfferController private banking"/>
  <testcase name="should resolve has private banking product to true if user has one" time="0.004" classname="Finish Rcp Offer RcpFinishOfferController private banking"/>
  <testcase name="should show offer details" time="0.023" classname="Finish Rcp offer template"/>
  <testcase name="should show confirmation details" time="0.015" classname="Finish Rcp offer template"/>
  <testcase name="should show selected proffered branch" time="0.016" classname="Finish Rcp offer template"/>
  <testcase name="should display email address with correct link" time="0.04" classname="Finish Rcp offer template"/>
  <testcase name="should display correct message" time="0.017" classname="Finish Rcp offer template finish application button"/>
  <testcase name="click should invoke finishApplication()" time="0.016" classname="Finish Rcp offer template finish application button"/>
  <testcase name="should not show the documents required section" time="0.021" classname="Finish Rcp offer template when electronic consent was provided"/>
  <testcase name="should show the documents required section" time="0.018" classname="Finish Rcp offer template when electronic consent was not provided"/>
  <testcase name="should show private banking section when customer has a private banking account" time="0.017" classname="Finish Rcp offer template when customer has a standard bank account"/>
  <testcase name="should not show private banking section when customer has a non-private banking account" time="0.017" classname="Finish Rcp offer template when customer has a standard bank account"/>
  <testcase name="should hide send supporting documents when user gave consent for income statement to be obtain electronically" time="0.006" classname="what happens next template Supporting documents"/>
  <testcase name="should hide send supporting documents when user a transactional account with standard bank" time="0.006" classname="what happens next template Supporting documents"/>
  <testcase name="should show send supporting documents when user has no transactional account and no electronic consent" time="0.006" classname="what happens next template Supporting documents"/>
  <testcase name="should show verifying income when user has a transactional account" time="0.005" classname="what happens next template confirming  your application verifying your income"/>
  <testcase name="should show verifying income when user gave consent for income statement to be obtain electronically" time="0.005" classname="what happens next template confirming  your application verifying your income"/>
  <testcase name="should not show verifying income when user has no transactional account and no electronic consent" time="0.006" classname="what happens next template confirming  your application verifying your income"/>
  <testcase name="should show when money will be available when user is kyc compliant and income verification successful" time="0.006" classname="what happens next template confirming  your application verifying your income"/>
  <testcase name="should show kyc documents collection details when customer is not kyc compliant" time="0.006" classname="what happens next template confirming  your application Kyc documents collection"/>
  <testcase name="should  not show kyc documents collection details when customer is kyc compliant" time="0.006" classname="what happens next template confirming  your application Kyc documents collection"/>
  <testcase name="should show communication and confirmation details when customer is kyc compliant" time="0.01" classname="what happens next template confirming  your application Successful application communication details"/>
  <testcase name="should  not show kyc documents collection details when customer is kyc compliant" time="0.006" classname="what happens next template confirming  your application Successful application communication details"/>
  <testcase name="should use the correct partial" time="0.003" classname="RCP Offers routes /apply/rcp/unsupported route"/>
  <testcase name="should use the correct template" time="0.003" classname="RCP Offers routes /apply/rcp/offer route"/>
  <testcase name="should use the correct controller" time="0.003" classname="RCP Offers routes /apply/rcp/offer route"/>
  <testcase name="should specify the safe return path" time="0.003" classname="RCP Offers routes /apply/rcp/offer route"/>
  <testcase name="should only allow from apply rcp submit and confirm" time="0.003" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths"/>
  <testcase name="should be valid for a new application with pre-screening complete from /apply/rcp/submit" time="0.003" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should not be valid if RcpApplication is not new with pre-screening complete from /apply/rcp/submit" time="0.004" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should not be valid if RcpApplication is new with pre-screening complete from /apply/current-account/submit" time="0.021" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should be valid if RcpApplication is inProgress for /apply/rcp/confirm" time="0.003" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should not be valid if RcpApplication is not inProgress for /apply/rcp/confirm" time="0.003" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should be valid for a pending application from /apply" time="0.003" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should be valid for a not pending application from /apply" time="0.002" classname="RCP Offers routes /apply/rcp/offer route Apply allowed paths conditions"/>
  <testcase name="should restore the state of the debitOrder" time="0.019" classname="RCP Offers RcpOfferController when rcpApplication is in progress"/>
  <testcase name="should restore the state of the requestedLimit" time="0.005" classname="RCP Offers RcpOfferController when rcpApplication is in progress"/>
  <testcase name="should restore the state of minimumRepayment" time="0.004" classname="RCP Offers RcpOfferController when rcpApplication is in progress"/>
  <testcase name="should not restore branch list" time="0.004" classname="RCP Offers RcpOfferController when rcpApplication is in progress for standard bank customer"/>
  <testcase name="should restore branch list if the bank has been selected and there are no branches in scope" time="0.006" classname="RCP Offers RcpOfferController when rcpApplication is in progress  non standard bank user"/>
  <testcase name="should return no accounts" time="0.004" classname="RCP Offers RcpOfferController when rcpApplication is in progress  non standard bank user"/>
  <testcase name="should not set the minimum repayment if the timeout has not elapsed" time="0.005" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should only set the minimum repayment once if multiple calls are made within the timeout threshold" time="0.005" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should set the correct minimum repayment" time="0.004" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should set the minimum repayment to undefined if the loan amount is not valid" time="0.003" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should call rcp calculator" time="0.004" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should update the repayment amount for the debit order" time="0.004" classname="RCP Offers RcpOfferController on requested Loan Amount Changed"/>
  <testcase name="should enforce using RcpDebitOrderLimitsService" time="0.004" classname="RCP Offers RcpOfferController on requested Loan Amount Changed enforcer"/>
  <testcase name="should return a hint if the loan amount field is in error" time="0.004" classname="RCP Offers RcpOfferController on requested Loan Amount Changed hinter"/>
  <testcase name="should return nothing if the loan amount field is valid" time="0.008" classname="RCP Offers RcpOfferController on requested Loan Amount Changed hinter"/>
  <testcase name="should set the offer on the scope" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set the download pre-agreement URL on the scope" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set the application number on the scope" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set system principal on scope" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set the selected offer requested limit to the offer maximum amount" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set debitOrder.isStandardBankAccount on scope to false if no transactional account" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set newToBank to false if customer has no cards" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should retrieve a list of banks and label them" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should not retrieve branches because of lazy loading" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should load the users Standard Bank current accounts" time="0.031" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should select current account if there is a current account" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should load Standard Bank Plus Plan account" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should select plus plan account if there is not current account" time="0.004" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should load both plus plan and current account if user has both" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should select the first current account over a plus plan account" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should default the debit order amount to the minimum repayment amount" time="0.003" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should default the repayment day to day 1" time="0.005" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should default electronic consent to true" time="0.008" classname="RCP Offers RcpOfferController controller is initialized"/>
  <testcase name="should set showQuote to true" time="0.004" classname="RCP Offers RcpOfferController showPreAgreement"/>
  <testcase name="should populate preagreementHtml" time="0.005" classname="RCP Offers RcpOfferController showPreAgreement"/>
  <testcase name="should get pre agreement with offer details" time="0.004" classname="RCP Offers RcpOfferController showPreAgreement"/>
  <testcase name="should return true if user has standard bank accounts" time="0.004" classname="RCP Offers RcpOfferController hasStandardBankAccount"/>
  <testcase name="should return false if user does not have standard bank accounts" time="0.005" classname="RCP Offers RcpOfferController hasStandardBankAccount"/>
  <testcase name="should enforce using RcpDebitOrderLimitsService" time="0.005" classname="RCP Offers RcpOfferController debit order enforcer"/>
  <testcase name="should show hint if repayment amount is greater than minimum repayment amount" time="0.004" classname="RCP Offers RcpOfferController debit order enforcer"/>
  <testcase name="should not show hint if repayment amount is greater than minimum repayment amount" time="0.005" classname="RCP Offers RcpOfferController debit order enforcer"/>
  <testcase name="should call branch lazy loading service" time="0.004" classname="RCP Offers RcpOfferController debit order onBankChanged if branches have not been loaded for bank"/>
  <testcase name="should not call branch lazy loading service" time="0.004" classname="RCP Offers RcpOfferController debit order onBankChanged if branches have been loaded for bank"/>
  <testcase name="should not call branch lazy loading service" time="0.004" classname="RCP Offers RcpOfferController debit order onBankChanged if no bank is selected"/>
  <testcase name="should call branch lazy loading service" time="0.004" classname="RCP Offers RcpOfferController debit order onBankChanged if branches have been loaded for bank"/>
  <testcase name="should return default list" time="0.004" classname="RCP Offers RcpOfferController debit order selectedDebitOrderBankBranches no bank selected"/>
  <testcase name="should return the correct list of branches" time="0.005" classname="RCP Offers RcpOfferController debit order selectedDebitOrderBankBranches if branches have been loaded for bank"/>
  <testcase name="should clear the branch selection for debit order" time="0.031" classname="RCP Offers RcpOfferController debit order clear branch"/>
  <testcase name="should send the user to the confirm rcp offer page" time="0.004" classname="RCP Offers RcpOfferController accept Rcp offer"/>
  <testcase name="should go to next flow step" time="0.004" classname="RCP Offers RcpOfferController accept Rcp offer"/>
  <testcase name="should set selected branch and debit order details on RcpApplication for other bank account" time="0.005" classname="RCP Offers RcpOfferController accept Rcp offer"/>
  <testcase name="should set selected branch and debit order details on RcpApplication for Standard Bank account" time="0.004" classname="RCP Offers RcpOfferController accept Rcp offer"/>
  <testcase name="show offer details " time="0.035" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should update scope requested limit when user changes input" time="0.034" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should toggle the rcpDetails popup" time="0.033" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should call the accept function when accept is clicked" time="0.074" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should track click when accept is clicked" time="0.04" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should require preferred branch" time="0.031" classname="Rcp offer template Rcp Offer"/>
  <testcase name="should show Standard Bank details" time="0.033" classname="Rcp offer template Rcp Offer Debit Order Details pay from Standard Bank"/>
  <testcase name="should hide Other Bank details" time="0.032" classname="Rcp offer template Rcp Offer Debit Order Details pay from Standard Bank"/>
  <testcase name="should hide the electronic consent checkbox" time="0.033" classname="Rcp offer template Rcp Offer Debit Order Details pay from Standard Bank"/>
  <testcase name="should hide Standard Bank details" time="0.057" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank"/>
  <testcase name="should show other bank details" time="0.031" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank"/>
  <testcase name="should show the electronic consent checkbox" time="0.033" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank account statement consent"/>
  <testcase name="consent should be checked by default" time="0.033" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank account statement consent"/>
  <testcase name="should not show process delay notification" time="0.03" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank account statement consent"/>
  <testcase name="should show process delay notification when consent checkbox is not checked" time="0.032" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank account statement consent"/>
  <testcase name="track click of electronic consent checkbox" time="0.058" classname="Rcp offer template Rcp Offer Debit Order Details pay from other bank account statement consent"/>
  <testcase name="should apply with custom amount" time="0.036" classname="Rcp offer template Rcp Offer Debit Order Details amount"/>
  <testcase name="should validate amount using the enforcer" time="0.059" classname="Rcp offer template Rcp Offer Debit Order Details amount"/>
  <testcase name="should be disabled if loan amount is not valid" time="0.032" classname="Rcp offer template Rcp Offer Debit Order Details amount"/>
  <testcase name="should be able to Accept if all details are complete" time="0.063" classname="Rcp offer template Rcp Offer Accept pay from Standard Bank is selected"/>
  <testcase name="should not be able to accept if no account is selected" time="0.033" classname="Rcp offer template Rcp Offer Accept pay from Standard Bank is selected"/>
  <testcase name="should not be able to accept if no repayment day" time="0.045" classname="Rcp offer template Rcp Offer Accept pay from Standard Bank is selected"/>
  <testcase name="should not be able to accept if no repayment amount" time="0.033" classname="Rcp offer template Rcp Offer Accept pay from Standard Bank is selected"/>
  <testcase name="should not be able to accept if Rcp branch is not selected" time="0.034" classname="Rcp offer template Rcp Offer Accept pay from Standard Bank is selected"/>
  <testcase name="should be able to Accept if all details are complete" time="0.033" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should not be able to accept if no bank is selected" time="0.049" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should not be able to accept if no branch is selected" time="0.034" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should not be able to accept if there is no account number" time="0.032" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should not be able to accept if no repayment day" time="0.037" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should not be able to accept if no repayment amount" time="0.034" classname="Rcp offer template Rcp Offer Accept pay from Other Bank"/>
  <testcase name="should be disabled when fraud check is not accepted" time="0.014" classname="Rcp prescreen template next button"/>
  <testcase name="should be enabled when fraud check is accepted" time="0.029" classname="Rcp prescreen template next button"/>
  <testcase name="should track analytics" time="0.012" classname="Rcp prescreen template next button"/>
  <testcase name="should continue with RCP application if showCannotProceedModal is false" time="0.022" classname="Rcp prescreen template next button"/>
  <testcase name="should pop up with debt review error when answered yes and showCannotProceedModal is true" time="0.012" classname="Rcp prescreen template next button"/>
  <testcase name="should pop up with insolvent error when answered yes and showCannotProceedModal is true" time="0.013" classname="Rcp prescreen template next button"/>
  <testcase name="should pop up with sequestration error when answered yes and showCannotProceedModal is true" time="0.013" classname="Rcp prescreen template next button"/>
  <testcase name="should track analytics" time="0.012" classname="Rcp prescreen template close button"/>
  <testcase name="should close pop modal on click" time="0.012" classname="Rcp prescreen template close button"/>
  <testcase name="should use the correct template" time="0.003" classname="RCP Prescreen routes when rcp Prescreen"/>
  <testcase name="should use the correct controller" time="0.002" classname="RCP Prescreen routes when rcp Prescreen"/>
  <testcase name="should specify the safe return path" time="0.002" classname="RCP Prescreen routes when rcp Prescreen"/>
  <testcase name="should allow new application" time="0.003" classname="RCP Prescreen routes when rcp Prescreen path conditions"/>
  <testcase name="should not allow application that is not new" time="0.002" classname="RCP Prescreen routes when rcp Prescreen path conditions"/>
  <testcase name="should set default prescreen questions to no" time="0.003" classname="RCP Prescreen RcpPrescreenController"/>
  <testcase name="should set showModal to true when debtReview prescreening question is yes" time="0.003" classname="RCP Prescreen RcpPrescreenController Next"/>
  <testcase name="should set showModal to true when insolvent prescreening question is yes" time="0.003" classname="RCP Prescreen RcpPrescreenController Next"/>
  <testcase name="should set showModal to true when sequestration prescreening question is yes" time="0.006" classname="RCP Prescreen RcpPrescreenController Next"/>
  <testcase name="should record a form submission for analytics" time="0.004" classname="RCP Prescreen RcpPrescreenController Next"/>
  <testcase name="should initialise CustomerInformationData" time="0.004" classname="RCP Prescreen RcpPrescreenController Next Existing Customers"/>
  <testcase name="should display customer information" time="0.003" classname="RCP Prescreen RcpPrescreenController Next Existing Customers"/>
  <testcase name="should save prescreen complete" time="0.004" classname="RCP Prescreen RcpPrescreenController Next Existing Customers"/>
  <testcase name="should go to capture customer basic information when customer is new" time="0.004" classname="RCP Prescreen RcpPrescreenController Next"/>
  <testcase name="should use the correct template" time="0.004" classname="RCP routes when RCP is selected"/>
  <testcase name="should use the correct controller" time="0.003" classname="RCP routes when RCP is selected"/>
  <testcase name="hasRcpAccount should be true when accepted" time="0.003" classname="RCP controller"/>
  <testcase name="hasRcpAccount should be false when new" time="0.004" classname="RCP controller"/>
  <testcase name="should not allow any other states other than new or existing" time="0.003" classname="RCP controller"/>
  <testcase name="existing rcp account should show message and hide apply now buttons" time="0.027" classname="rcp account product template"/>
  <testcase name="no rcp account should not show message but show apply now buttons" time="0.014" classname="rcp account product template"/>
  <testcase name="should set hint" time="0.001" classname="RcpDebitOrderLimitsService"/>
  <testcase name="should set error message when amount is less than the minimum repayment amount" time="0.002" classname="RcpDebitOrderLimitsService"/>
  <testcase name="should set  no error if amount is greater than the minimum" time="0.001" classname="RcpDebitOrderLimitsService"/>
  <testcase name="getPath should be defined " time="0.004" classname="RcpOfferService"/>
  <testcase name="should reject if call returns error headers" time="0.003" classname="RcpOfferService create rcp offer failure"/>
  <testcase name="should reject if call returns unsupported code in headers" time="0.004" classname="RcpOfferService create rcp offer failure"/>
  <testcase name="should reject if the call fails" time="0.003" classname="RcpOfferService create rcp offer failure"/>
  <testcase name="should reject with the service response" time="0.003" classname="RcpOfferService create rcp offer reject"/>
  <testcase name="should invoke the getOffers rcp offers endpoint" time="0.003" classname="RcpOfferService create rcp offer success"/>
  <testcase name="should resolve with the service response" time="0.003" classname="RcpOfferService create rcp offer success"/>
  <testcase name="should call endpoint with offer details and user principal" time="0.004" classname="RcpOfferService getPreAgreementHtml success"/>
  <testcase name="should resolve with service response" time="0.003" classname="RcpOfferService getPreAgreementHtml success"/>
  <testcase name="should resolve with service response" time="0.007" classname="RcpOfferService getPreAgreementHtml failure"/>
  <testcase name="should call the endpoint" time="0.003" classname="RcpOfferService accept Rcp offer success"/>
  <testcase name="should set requestLimit to zero when undefined" time="0.003" classname="RcpOfferService accept Rcp offer success"/>
  <testcase name="should resolve with the service response" time="0.003" classname="RcpOfferService accept Rcp offer success"/>
  <testcase name="should resolve with the service response" time="0.003" classname="RcpOfferService accept Rcp offer failure"/>
  <testcase name="should set hint" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is zero" time="0.002" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is not in a valid format" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is undefined" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is negative" time="0.002" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is less than the minimum loan amount" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount is greater than the maximum loan amount" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should set error message when amount includes cents" time="0.002" classname="RcpRequestLimitsService"/>
  <testcase name="should set no error if amount is greater than the minimum" time="0.001" classname="RcpRequestLimitsService"/>
  <testcase name="should load the customer information" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should update customer consent and source of funds" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer addresses to read-only" time="0.003" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer contact information to read-only" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should set location to profile edit page" time="0.004" classname="SavingsApplicationStartService when customer needs additional basic information"/>
  <testcase name="should set location to profile page" time="0.004" classname="SavingsApplicationStartService when customer needs additional employment information"/>
  <testcase name="should set location to profile page" time="0.005" classname="SavingsApplicationStartService when customer has no income"/>
  <testcase name="should get offers from savings service" time="0.005" classname="SavingsApplicationStartService when customer has all required information"/>
  <testcase name="should set offer on savings application" time="0.003" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should call Flow.next" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should set location to savings offer path" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should display generic service error when no reason is given" time="0.024" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should set location to savings declined path if rejection reason is declined" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should load the customer information" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should update customer consent and source of funds" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer addresses to read-only" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer contact information to read-only" time="0.003" classname="SavingsApplicationStartService"/>
  <testcase name="should set location to profile edit page" time="0.003" classname="SavingsApplicationStartService when customer needs additional basic information"/>
  <testcase name="should set location to profile page" time="0.004" classname="SavingsApplicationStartService when customer needs additional employment information"/>
  <testcase name="should set location to profile page" time="0.004" classname="SavingsApplicationStartService when customer has no income"/>
  <testcase name="should get offers from savings service" time="0.004" classname="SavingsApplicationStartService when customer has all required information"/>
  <testcase name="should set offer on savings application" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should call Flow.next" time="0.003" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should set location to savings offer path" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should display generic service error when no reason is given" time="0.003" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should set location to savings declined path if rejection reason is declined" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should load the customer information" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should update customer consent and source of funds" time="0.004" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer addresses to read-only" time="0.003" classname="SavingsApplicationStartService"/>
  <testcase name="should set customer contact information to read-only" time="0.003" classname="SavingsApplicationStartService"/>
  <testcase name="should set location to profile edit page" time="0.003" classname="SavingsApplicationStartService when customer needs additional basic information"/>
  <testcase name="should set location to profile page" time="0.004" classname="SavingsApplicationStartService when customer needs additional employment information"/>
  <testcase name="should set location to profile page" time="0.004" classname="SavingsApplicationStartService when customer has no income"/>
  <testcase name="should get offers from savings service" time="0.004" classname="SavingsApplicationStartService when customer has all required information"/>
  <testcase name="should set offer on savings application" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should call Flow.next" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should set location to savings offer path" time="0.004" classname="SavingsApplicationStartService when customer has all required information and get offers is successful"/>
  <testcase name="should display generic service error when no reason is given" time="0.022" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should set location to savings declined path if rejection reason is declined" time="0.003" classname="SavingsApplicationStartService when customer has all required information and get offers fails"/>
  <testcase name="should hide fraud check modal by default" time="0.013" classname="SavingsPreScreening Button"/>
  <testcase name="should hide not KYC compliant modal by default" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should check id the customer is compliant" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should show fraud check modal" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should NOT check id the customer is compliant" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should NOT show fraud check modal when apply button is clicked" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should prompt the customer to present their KYC documents at a branch" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should hide the non-compliant dialog" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant clicking on the close button in the non-compliant dialog"/>
  <testcase name="should track analytics based on product name" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should have creditAndFraudCheckConsent set to false by default" time="0.011" classname="SavingsPreScreening Button"/>
  <testcase name="should contain &apos;Next&apos; as the apply button&apos;s text" time="0.011" classname="SavingsPreScreening Button"/>
  <testcase name="should set the creditAndFraudCheckConsent" time="0.013" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should enable the next button" time="0.014" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should close the fraud check modal" time="0.013" classname="SavingsPreScreening Button clicking on cancel button"/>
  <testcase name="should hide fraud check modal by default" time="0.014" classname="SavingsPreScreening Button"/>
  <testcase name="should hide not KYC compliant modal by default" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should check id the customer is compliant" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should show fraud check modal" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should NOT check id the customer is compliant" time="0.03" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should NOT show fraud check modal when apply button is clicked" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should prompt the customer to present their KYC documents at a branch" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should hide the non-compliant dialog" time="0.012" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant clicking on the close button in the non-compliant dialog"/>
  <testcase name="should track analytics based on product name" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should have creditAndFraudCheckConsent set to false by default" time="0.011" classname="SavingsPreScreening Button"/>
  <testcase name="should contain &apos;Next&apos; as the apply button&apos;s text" time="0.013" classname="SavingsPreScreening Button"/>
  <testcase name="should set the creditAndFraudCheckConsent" time="0.014" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should enable the next button" time="0.012" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should close the fraud check modal" time="0.023" classname="SavingsPreScreening Button clicking on cancel button"/>
  <testcase name="should hide fraud check modal by default" time="0.014" classname="SavingsPreScreening Button"/>
  <testcase name="should hide not KYC compliant modal by default" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should check id the customer is compliant" time="0.013" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should show fraud check modal" time="0.011" classname="SavingsPreScreening Button when apply button is clicked and the customer is compliant"/>
  <testcase name="should NOT check id the customer is compliant" time="0.031" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should NOT show fraud check modal when apply button is clicked" time="0.011" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should prompt the customer to present their KYC documents at a branch" time="0.014" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant"/>
  <testcase name="should hide the non-compliant dialog" time="0.013" classname="SavingsPreScreening Button when apply button is clicked and the customer is NOT compliant clicking on the close button in the non-compliant dialog"/>
  <testcase name="should track analytics based on product name" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should have creditAndFraudCheckConsent set to false by default" time="0.012" classname="SavingsPreScreening Button"/>
  <testcase name="should contain &apos;Next&apos; as the apply button&apos;s text" time="0.011" classname="SavingsPreScreening Button"/>
  <testcase name="should set the creditAndFraudCheckConsent" time="0.012" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should enable the next button" time="0.012" classname="SavingsPreScreening Button clicking on fraud check checkbox"/>
  <testcase name="should close the fraud check modal" time="0.013" classname="SavingsPreScreening Button clicking on cancel button"/>
  <testcase name="should have product title" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have product description" time="0.009" classname="Savings Product Tile"/>
  <testcase name="should have image source" time="0.009" classname="Savings Product Tile"/>
  <testcase name="should have image alternative text" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have a savings-prescreening button for the product type" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.009" classname="Savings Product Tile"/>
  <testcase name="should have product title" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have product description" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have image source" time="0.009" classname="Savings Product Tile"/>
  <testcase name="should have image alternative text" time="0.009" classname="Savings Product Tile"/>
  <testcase name="should have a savings-prescreening button for the product type" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.008" classname="Savings Product Tile"/>
  <testcase name="should have product title" time="0.027" classname="Savings Product Tile"/>
  <testcase name="should have product description" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have image source" time="0.014" classname="Savings Product Tile"/>
  <testcase name="should have image alternative text" time="0.011" classname="Savings Product Tile"/>
  <testcase name="should have a savings-prescreening button for the product type" time="0.01" classname="Savings Product Tile"/>
  <testcase name="should have a link to the product&apos;s details page which contains a track click for the product" time="0.01" classname="Savings Product Tile"/>
  <testcase name="customer and decline and isNew do nothing" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined offer ID by default" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined case ID by default" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined account number by default" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined originationDate by default" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined transfer from account" time="0.002" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined initial deposit amount" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined product name" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined product code" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have a minimum initial deposit of R0" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should not have a maximum initial deposit" time="0.002" classname="Savings Account Application Factory initial state"/>
  <testcase name="should not have a maximum initial deposit" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should not have a maximum initial deposit exceeded message" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined product terms and conditions link" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should have an undefined transfer page additional information message" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should return false from applicationSuccessful" time="0.014" classname="Savings Account Application Factory initial state"/>
  <testcase name="contains a repository of the savings products&apos; information" time="0.001" classname="Savings Account Application Factory initial state"/>
  <testcase name="should set the product name, lowerCaseProductName, productCode, minimumInitialDeposit, productTermsAndConditionsLink and transferPageAdditionalInformation" time="0.002" classname="Savings Account Application Factory start"/>
  <testcase name="should set the offer and case ID if they are provided" time="0.001" classname="Savings Account Application Factory offer"/>
  <testcase name="should set the offer and case ID to undefined if they are NOT provided" time="0.001" classname="Savings Account Application Factory offer"/>
  <testcase name="should have a transfer from account set" time="0.001" classname="Savings Account Application Factory specify initial deposit amount and the account that the initial deposit will be transferred from"/>
  <testcase name="should have an initial deposit amount set" time="0.002" classname="Savings Account Application Factory specify initial deposit amount and the account that the initial deposit will be transferred from"/>
  <testcase name="should set the account number of the new account" time="0.001" classname="Savings Account Application Factory accountOriginated"/>
  <testcase name="should set the date opened of the new account" time="0.001" classname="Savings Account Application Factory accountOriginated"/>
  <testcase name="should applicationSuccessful to true" time="0.002" classname="Savings Account Application Factory accountOriginated"/>
  <testcase name="should use the correct template" time="0.003" classname="Savings Accept routes when at Savings accept page"/>
  <testcase name="should use the correct controller" time="0.003" classname="Savings Accept routes when at Savings accept page"/>
  <testcase name="should exist" time="0.007" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should initialise with agreedToTermsAndConditions to false" time="0.003" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should set the product&apos;s name on the scope" time="0.003" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should set the product&apos;s terms and conditions link on the scope" time="0.005" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should set the offer&apos;s account to the account that the initial deposit will be sourced from" time="0.005" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should set the offer&apos;s initial deposit to the amount that was entered in the transfer step" time="0.002" classname="Savings Accept SavingsAcceptController"/>
  <testcase name="should tell Flow to show the previous step" time="0.002" classname="Savings Accept SavingsAcceptController backToTransfer"/>
  <testcase name="should go to the transfer page in the PureSave account origination process" time="0.003" classname="Savings Accept SavingsAcceptController backToTransfer"/>
  <testcase name="should redirect the user to the available products page" time="0.003" classname="Savings Accept SavingsAcceptController cancel"/>
  <testcase name="should tell Flow to show the next step" time="0.003" classname="Savings Accept SavingsAcceptController proceed successfully originates an account"/>
  <testcase name="should call originateAccount on SavingsAccountOffersService" time="0.003" classname="Savings Accept SavingsAcceptController proceed successfully originates an account"/>
  <testcase name="should set the date and account number on the Savings account application" time="0.002" classname="Savings Accept SavingsAcceptController proceed successfully originates an account"/>
  <testcase name="should redirect the user to the application complete page for market-link" time="0.002" classname="Savings Accept SavingsAcceptController proceed successfully originates an account"/>
  <testcase name="should tell Flow to show the next step" time="0.002" classname="Savings Accept SavingsAcceptController proceed cannot originate an account"/>
  <testcase name="should call originateAccount on SavingsAccountOffersService" time="0.003" classname="Savings Accept SavingsAcceptController proceed cannot originate an account"/>
  <testcase name="should NOT set the date and account number on the Savings account application" time="0.002" classname="Savings Accept SavingsAcceptController proceed cannot originate an account"/>
  <testcase name="should redirect the user to the application complete page for tax-free-call-account" time="0.003" classname="Savings Accept SavingsAcceptController proceed cannot originate an account"/>
  <testcase name="should use the correct template" time="0.005" classname="Savings Finish routes when at Savings finish page"/>
  <testcase name="should use the correct controller" time="0.004" classname="Savings Finish routes when at Savings finish page"/>
  <testcase name="should set ProductName from SavingsAccountApplication" time="0.003" classname="Savings Finish SavingsFinishController"/>
  <testcase name="should set accountNumber from SavingsAccountApplication" time="0.002" classname="Savings Finish SavingsFinishController"/>
  <testcase name="should set originationDate from SavingsAccountApplication" time="0.002" classname="Savings Finish SavingsFinishController"/>
  <testcase name="should return the value from SavingsAccountApplication.applicationSuccessful" time="0.003" classname="Savings Finish SavingsFinishController applicationSuccessful"/>
  <testcase name="should use the correct template" time="0.002" classname="MarketLink routes when MarketLink is selected"/>
  <testcase name="should use the correct template" time="0.003" classname="PureSave routes when PureSave is selected"/>
  <testcase name="should use the correct template" time="0.002" classname="Savings and Investments Options routes when SavingsAndInvestments is selected"/>
  <testcase name="should use the correct template" time="0.002" classname="TaxFreeCallAccount routes when TaxFreeCallAccount is selected"/>
  <testcase name="should use the correct template" time="0.004" classname="Savings Transfer routes when at Savings transfer page"/>
  <testcase name="should use the correct controller" time="0.006" classname="Savings Transfer routes when at Savings transfer page"/>
  <testcase name="should set the product&apos;s name on the scope" time="0.032" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should set the product&apos;s name on the scope" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should fetch a list of accounts" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should add a label function to each account" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default transfer amount to R5000" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default minimum amount to R5000" time="0.02" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default maximum amount to R5000" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default maximum amount exceeded message to The maximum amount has been exceeded" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default errorMessage to undefined" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="should default errorMessage to undefined" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize"/>
  <testcase name="Should select the account specified previously" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize when transferFromAccount and initialDeposit have already been specified"/>
  <testcase name="Should set the initial deposit specified previously" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount initialize when transferFromAccount and initialDeposit have already been specified"/>
  <testcase name="should ensure that the transfer.from object is defined " time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount account lists"/>
  <testcase name="should know when to highlight" time="0.011" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should allow a minimum transfer of R5000" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should allow a maximum transfer of R500 000 and display a custom error hint when value is exceeded" time="0.009" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should display a custom hint when value is passes amount hints" time="0.009" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="the amount should not exceed the available balance" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should know watched elements and scope to hint" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should update &quot;From&quot; available balance when selected account changes" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount available balance"/>
  <testcase name="should give an error when an account with less than R5000 is selected" time="0.032" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit possible"/>
  <testcase name="should not give an error when an account with more than R5000 is selected" time="0.009" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit possible"/>
  <testcase name="should allow a minimum transfer of R5000" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit possible"/>
  <testcase name="should not enable transfer when there are no accounts loaded" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit possible"/>
  <testcase name="should not enable transfer when amount format is incorrect" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount deposit possible"/>
  <testcase name="should refer user to branch if they do not have a transactional account" time="0.009" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount no transactional accounts"/>
  <testcase name="should call Flow.next" time="0.009" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount next button clicked"/>
  <testcase name="should go to savings accept page for savings-product" time="0.008" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount next button clicked"/>
  <testcase name="should call setInitialDeposit on SavingsAccountApplication" time="0.007" classname="Savings Transfer controller custom maximum limit hint message on initial deposit amount next button clicked"/>
  <testcase name="should allow a maximum transfer of R500 000 and display a custom error hint when value is exceeded" time="0.008" classname="Savings Transfer controller default maximum limit hint message on initial deposit amount deposit limits"/>
  <testcase name="should return &apos;Submit&apos;" time="0.003" classname="SavingsAccountOffersService getOfferButtonText"/>
  <testcase name="should call AccountOriginationService/CreateSavingsAccountApplication" time="0.006" classname="SavingsAccountOffersService getOffers"/>
  <testcase name="should return a valid offer id" time="0.004" classname="SavingsAccountOffersService getOffers gets a valid offer"/>
  <testcase name="should reject the promise with a reason" time="0.003" classname="SavingsAccountOffersService getOffers encounters a problem which is handled on the backend where the customer is not AML compliant"/>
  <testcase name="should reject the promise with a reason" time="0.002" classname="SavingsAccountOffersService getOffers encounters a problem which is handled on the backend where the customer is another non-generic error"/>
  <testcase name="should reject the promise" time="0.002" classname="SavingsAccountOffersService getOffers encounters a problem which is handled on the backend where the problem is a generic error"/>
  <testcase name="should reject the promise" time="0.003" classname="SavingsAccountOffersService getOffers encounters a problem which was NOT handled on the backend"/>
  <testcase name="should call AccountOriginationService/OriginateSavingsAccount" time="0.002" classname="SavingsAccountOffersService originateAccount"/>
  <testcase name="should return a valid account number and date opened" time="0.003" classname="SavingsAccountOffersService originateAccount gets a valid offer"/>
  <testcase name="should reject the promise" time="0.002" classname="SavingsAccountOffersService originateAccount encounters a problem which is handled on the backend"/>
  <testcase name="should reject the promise" time="0.002" classname="SavingsAccountOffersService originateAccount encounters a problem which was NOT handled on the backend"/>
  <testcase name="should invoke the list accounts accountsService" time="0.004" classname="AccountsService list"/>
  <testcase name="should call list accounts endpoint with given card and current dashboard system principal Id" time="0.003" classname="AccountsService list"/>
  <testcase name="should call list accounts endpoint with given card" time="0.003" classname="AccountsService hasCurrentAccount"/>
  <testcase name="should return true if card has current account" time="0.003" classname="AccountsService hasCurrentAccount"/>
  <testcase name="should return false if card does not have current account" time="0.004" classname="AccountsService hasCurrentAccount"/>
  <testcase name="should reject error response" time="0.003" classname="AccountsService hasCurrentAccount"/>
  <testcase name="should call list accounts endpoint with given card" time="0.003" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should return true if card has current account and home loan" time="0.004" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should return true if card has home loan account" time="0.003" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should return true if card has current account" time="0.003" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should return true if card has credit card" time="0.003" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should return false if card does not have current account or home loan" time="0.003" classname="AccountsService hasFormalStatementAccounts"/>
  <testcase name="should call list accounts endpoint with given card" time="0.034" classname="AccountsService hasPrivateBankingAccount"/>
  <testcase name="should return true if card has private banking account" time="0.003" classname="AccountsService hasPrivateBankingAccount"/>
  <testcase name="should return false if card does not have private banking account" time="0.003" classname="AccountsService hasPrivateBankingAccount"/>
  <testcase name="should reject error response" time="0.007" classname="AccountsService hasPrivateBankingAccount"/>
  <testcase name="should return the available balance for a specific account" time="0.004" classname="AccountsService available balances"/>
  <testcase name="should return only accounts that are valid pay from accounts" time="0.003" classname="AccountsService valid from payment accounts"/>
  <testcase name="should return the list of accounts" time="0.023" classname="AccountsService list cache"/>
  <testcase name="should return an empty list of accounts if the card number is null" time="0.004" classname="AccountsService list cache"/>
  <testcase name="should not resolve with the list of accounts if the call fails" time="0.003" classname="AccountsService list cache"/>
  <testcase name="should reject with an error if call returns error headers" time="0.003" classname="AccountsService list cache"/>
  <testcase name="should load data from the cache if we have it" time="0.003" classname="AccountsService list cache"/>
  <testcase name="should load data from the accountsService if we have cleared the cache" time="0.004" classname="AccountsService list cache"/>
  <testcase name="should invoke the get eap limit" time="0.003" classname="AccountsService view eap limit"/>
  <testcase name="should return the response upon success" time="0.003" classname="AccountsService view eap limit"/>
  <testcase name="should not return the response upon failure" time="0.003" classname="AccountsService view eap limit"/>
  <testcase name="should not return the response upon generic failure" time="0.003" classname="AccountsService view eap limit"/>
  <testcase name="should return true if account has pay from feature" time="0.003" classname="AccountsService hasPayFromFeature"/>
  <testcase name="should return false if account does not have pay from feature" time="0.003" classname="AccountsService hasPayFromFeature"/>
  <testcase name="should return false if account does have pay from feature, but set to false" time="0.006" classname="AccountsService hasPayFromFeature"/>
  <testcase name="should have info message if account is undefined or empty" time="0.001" classname="accountsValidationService validate info message"/>
  <testcase name="should not have info message if account is not empty" time="0.002" classname="accountsValidationService validate info message"/>
  <testcase name="should use the correct controller " time="0.01" classname="ActivateOtpConfirmController when otp has to be confirmed"/>
  <testcase name="should use the correct template " time="0.008" classname="ActivateOtpConfirmController when otp has to be confirmed"/>
  <testcase name="should set the otp preferences in the scope" time="0.009" classname="ActivateOtpConfirmController"/>
  <testcase name="should redirect to otp activate page on success" time="0.008" classname="ActivateOtpConfirmController when activate"/>
  <testcase name="should make the service call with the correct object" time="0.008" classname="ActivateOtpConfirmController when activate"/>
  <testcase name="should advance the Flow" time="0.008" classname="ActivateOtpConfirmController when activate"/>
  <testcase name="should redirect to activate initial step" time="0.008" classname="ActivateOtpConfirmController when modify"/>
  <testcase name="should regress the flow" time="0.008" classname="ActivateOtpConfirmController when modify"/>
  <testcase name="should set view model to modifying and return the state" time="0.007" classname="ActivateOtpConfirmController when modify"/>
  <testcase name="should redirect to otp activate first step" time="0.008" classname="ActivateOtpConfirmController on service error"/>
  <testcase name="should regress the Flow" time="0.018" classname="ActivateOtpConfirmController on service error"/>
  <testcase name="should set the error on the view model" time="0.039" classname="ActivateOtpConfirmController on service error"/>
  <testcase name="should reset the view model without setup and keyvaluemetadata" time="0.007" classname="ActivateOtpConfirmController on service error"/>
  <testcase name="should populate contact details object for international number" time="0.009" classname="ActivateOtpConfirmController when caterForInternationalOnActivateOtp is toggled on"/>
  <testcase name="should populate contact details object for international number" time="0.008" classname="ActivateOtpConfirmController when caterForInternationalOnActivateOtp is toggled off"/>
  <testcase name="should use the correct controller " time="0.004" classname="ActivateOtpController when otp needs to be activated"/>
  <testcase name="should use the correct template " time="0.003" classname="ActivateOtpController when otp needs to be activated"/>
  <testcase name="should set the initial view model" time="0.004" classname="ActivateOtpController when default"/>
  <testcase name="should redirect to confirm step" time="0.003" classname="ActivateOtpController when next"/>
  <testcase name="should update the current ViewModel" time="0.003" classname="ActivateOtpController when next"/>
  <testcase name="should advance the Flow" time="0.005" classname="ActivateOtpController when next"/>
  <testcase name="should keep the ViewModel state" time="0.004" classname="ActivateOtpController when modify"/>
  <testcase name="should display an existing error" time="0.003" classname="ActivateOtpController when modify"/>
  <testcase name="should sign out" time="0.004" classname="ActivateOtpController cancel method"/>
  <testcase name="should use the correct controller " time="0.017" classname="ActivateOtpSuccessController when otp has been activated"/>
  <testcase name="should use the correct template " time="0.008" classname="ActivateOtpSuccessController when otp has been activated"/>
  <testcase name="should set the otp preferences in the scope" time="0.008" classname="ActivateOtpSuccessController"/>
  <testcase name="should redirect to account summary" time="0.008" classname="ActivateOtpSuccessController start banking"/>
  <testcase name="should re-trigger the activate otp flow on card error" time="0.008" classname="ActivateOtpSuccessController start banking"/>
  <testcase name="should retrieve the user dashboard with the profileId" time="0.004" classname="ActivateOtpService amend access direct successful activate"/>
  <testcase name="should call activate access direct endpoint" time="0.003" classname="ActivateOtpService amend access direct successful activate"/>
  <testcase name="should add card to dashboard" time="0.003" classname="ActivateOtpService amend access direct successful activate"/>
  <testcase name="should reject when service returns an error" time="0.003" classname="ActivateOtpService amend access direct"/>
  <testcase name="should reject when HTTP error codes are in the response headers for access direct" time="0.003" classname="ActivateOtpService amend access direct"/>
  <testcase name="should retrieve the user dashboard with the profileId" time="0.007" classname="ActivateOtpService activate otp"/>
  <testcase name="should call activate endpoint when toggled on" time="0.004" classname="ActivateOtpService activate otp"/>
  <testcase name="should call activate endpoint when toggled off" time="0.004" classname="ActivateOtpService activate otp"/>
  <testcase name="should reject when HTTP error codes are in the response headers" time="0.003" classname="ActivateOtpService activate otp"/>
  <testcase name="should reject when HTTP error codes are in the response headers with generic error message" time="0.003" classname="ActivateOtpService activate otp"/>
  <testcase name="should reject when HTTP returns failure status" time="0.004" classname="ActivateOtpService activate otp"/>
  <testcase name="should remove stepup and keyvalue objects from otpPreference object when failure status" time="0.024" classname="ActivateOtpService activate otp"/>
  <testcase name="should return the live container on experience.standardbank.co.za host" time="0.003" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the live container on encrypt1.experience.standardbank.co.za host" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the live container on any.thing.experience.standardbank.co.za host" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on umcafhtp01.standardbank.co.za host" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on umcafhtp01.standardbank.co.za host for dtm feature" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on umcafhtp01.standardbank.co.za host" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on umcafhtp01.standardbank.co.za host for dtm analytics feature" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on sbg-chop-s1.standardbank.co.za host" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should return the test container on sbg-chop-s1.standardbank.co.za host for dtm analytics feature" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should reject a container on local host" time="0.001" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should reject a container on local host for dtm analytics feature" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should reject a container on any subdomain on local host" time="0.006" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should reject a container on any subdomain on local host for dtm analytics feature" time="0.002" classname="AnalyticsContainer when using analytics scripts hosted by us"/>
  <testcase name="should send the page view" time="0.004" classname="analytics AnalyticsService sendPageView"/>
  <testcase name="should set the server name" time="0.002" classname="analytics AnalyticsService sendPageView"/>
  <testcase name="should set the registration category and registration first step page" time="0.003" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the registration step 2 on otp after registration info and registration category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the registration step 3 on link card page and registration category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the registration step 4 on otp after link card page and registration category" time="0.004" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the reset password step 1 and reset password category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the reset password step 2 on otp page and reset password category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the add beneficiary page and beneficiaries category" time="0.001" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the add beneficiary step 2 page on otp and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the edit beneficiary step 1 page name and beneficiaries category" time="0.001" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the edit beneficiary step 2 page on otp and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the once off payment step 1 page and payment category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the once off payment step 2 page on confirm and payment category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the once off payment step 4 page on success and payment category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the once off payment step 3 page on otp and payment category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set beneficiaries list page and beneficiaries category" time="0.006" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set pay multiple page and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set pay multiple confirm page and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set account summary page and category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set provisional statements page and statements category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set payment confirmation history page and payment confirmation category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set pay multiple page and beneficiaries category on pay beneficiaries group" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set pay multiple confirm page and beneficiaries category on confirm pay beneficiary group" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set beneficiary group view page and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set beneficiary view page and beneficiaries category" time="0.002" classname="analytics AnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the user as guest if not logged in" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the user as loggedin if user just registered" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the user as loggedin if user logs in" time="0.001" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the login and registration events if user just registered" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the login event if user logs in" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="not send a logged in event on normal navigation after log in" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should keep loggedin status on logged in pages" time="0.002" classname="analytics AnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the props for subsections" time="0.002" classname="analytics AnalyticsService sendPageView on section mapping"/>
  <testcase name="should clean last props" time="0.006" classname="analytics AnalyticsService sendPageView on section mapping"/>
  <testcase name="should clean last props from account preferences" time="0.003" classname="analytics AnalyticsService sendPageView on section mapping"/>
  <testcase name="should set registration event and props on registration step 1" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow"/>
  <testcase name="should set registration event and props on registration step 2" time="0.003" classname="analytics AnalyticsService sendPageView on registration flow"/>
  <testcase name="should set registration event and props on registration step 3" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow"/>
  <testcase name="should set registration event and props on registration step 4" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow"/>
  <testcase name="should set tracking vars and events on s clone" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set the props and call link tracking function with completed step 1" time="0.003" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set the props and call link tracking function with completed step 2" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set the props and call link tracking function with completed step 3" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set the props and call link tracking function with completed step 4" time="0.002" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set the event when registration is finished" time="0.001" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should clean the step properties after navigation" time="0.022" classname="analytics AnalyticsService sendPageView on registration flow sending the completed registration steps to link tracking function"/>
  <testcase name="should set link track vars" time="0.002" classname="analytics AnalyticsService sendError"/>
  <testcase name="should set event vars" time="0.002" classname="analytics AnalyticsService sendError"/>
  <testcase name="should set the error properties" time="0.002" classname="analytics AnalyticsService sendError"/>
  <testcase name="should set the error properties with empty error message" time="0.006" classname="analytics AnalyticsService sendError"/>
  <testcase name="should clean the step properties when sending an error" time="0.002" classname="analytics AnalyticsService sendError"/>
  <testcase name="should clean the error properties when sending a page view" time="0.003" classname="analytics AnalyticsService sendError"/>
  <testcase name="should set link track vars" time="0.002" classname="analytics AnalyticsService send button click"/>
  <testcase name="should set event vars" time="0.002" classname="analytics AnalyticsService send button click"/>
  <testcase name="should send the event to site catalyst" time="0.002" classname="analytics AnalyticsService send button click"/>
  <testcase name="should set the button properties" time="0.002" classname="analytics AnalyticsService send button click"/>
  <testcase name="should clean the button properties when sending a page view" time="0.002" classname="analytics AnalyticsService send button click"/>
  <testcase name="should make an ajax call for the script returned by the analytics container" time="0.018" classname="analytics analytics directive on mapped hostname"/>
  <testcase name="should send the page view event on loading the first page" time="0.006" classname="analytics analytics directive on mapped hostname"/>
  <testcase name="should listen on location change and send the page view event" time="0.006" classname="analytics analytics directive on mapped hostname"/>
  <testcase name="should listen on &quot;unsuccessfulMcaResponse&quot; event and send the error tracking" time="0.006" classname="analytics analytics directive on mapped hostname"/>
  <testcase name="should listen on &quot;trackButtonClick&quot; event and send the error tracking" time="0.005" classname="analytics analytics directive on mapped hostname"/>
  <testcase name="should not send page views if script did not load" time="0.006" classname="analytics analytics directive on non-mapped hostname"/>
  <testcase name="should not send error tracking if script did not load" time="0.005" classname="analytics analytics directive on non-mapped hostname"/>
  <testcase name="should set the user as guest if not logged in" time="0.005" classname="dtm analytics DtmAnalyticsService sendPageView on logged in status "/>
  <testcase name="should set the registration, logged in events and logged in status if user just registered" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on logged in status "/>
  <testcase name="should send the page view" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the page category to the first part of the page name" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection1 to the first 2 parts of the page name if available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection1 to the first part of the page name if there is only one part" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection2 to the first 3 parts of the page name if available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection2 to an empty string if there arent three parts available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection3 to the first 4 parts of the page name if available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection3 to an empty string if there arent 4 parts available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection4 to the first 5 parts of the page name if available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the pageSubSection4 to an empty string if there arent 5 parts available" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="should set the page properties for transact dashboard" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView"/>
  <testcase name="Should set the page properties when using instant money step 1" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Instant Money Transfer"/>
  <testcase name="Should set the page properties when using instant money step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Instant Money Transfer"/>
  <testcase name="Should set the page properties when using instant money step 3" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Instant Money Transfer"/>
  <testcase name="should set page properties on account application selection page" time="0.006" classname="dtm analytics DtmAnalyticsService sendPageView Account Application"/>
  <testcase name="should set page properties on account application for puresave" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on account application for marketlink" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on account application for taxfreecallaccount" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on account application for main savings and inv overview page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 profile" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 profile otp after edit" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 address" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 address otp after edit" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 employment" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 employment otp after edit" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 income and expenses" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 income and expenses otp after edit" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 submit application" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account details step 1 submit application otp after edit" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account transfer step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account accept step 3" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for savings and inv account finish step 4" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Saving and Inv account Application"/>
  <testcase name="should set page properties on application for RCP account overview page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account pre screen page" time="0.026" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 profile" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 profile otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 address" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 address otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 employment" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 employment otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 income and expenses" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 income and expenses otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 submit application" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account details step 1 submit application otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP application declined" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account transfer step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account confirmation step 3" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for RCP account complete step 4" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application RCP Application"/>
  <testcase name="should set page properties on application for Unsupported offers" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Unsupported offer"/>
  <testcase name="should set page properties on application for current account pre screen page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 profile application" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 profile application otp" time="0.007" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 address" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 address otp" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 employment" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 employment otp" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 income" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 income otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 submit application" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account details step 1 submit application otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application for current account offer step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="should set page properties on application overview page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView Account Application Current Account Application"/>
  <testcase name="Should set the page properties for accession the IB setting under profile" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties for increasing monthly payment limit OTP step" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties for accessing monthly payment limit" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties for accessing main profile dashboard under profile settings" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="should set the page properties for change password" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="should set the page properties for resetting password" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="should set the page properties for resetting password" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="should set the page properties for resetting password" time="0.006" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties for choose dashboard" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties when switchdashboard dashboard" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties adding a dashboard step 1" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties adding a dashboard step 2 otp" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="Should set the page properties adding a dashboard step 3 save name" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping Profile &amp; dashboard"/>
  <testcase name="should set the registration category and registration first step page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping registration"/>
  <testcase name="should set the registration step 2 on otp after registration info and registration category" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping registration"/>
  <testcase name="should set the page properties for new registered from the otp page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the page properties for new registered from the switch dashboard page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the profile setup step 1 on link card page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping profile setup post registration"/>
  <testcase name="should set the profile setup step 2 otp on link card page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping profile setup post registration"/>
  <testcase name="should set the profile setup step 1 on migrate page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping profile setup post registration"/>
  <testcase name="should set the profile setup step 2 otp on migrate page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping profile setup post registration"/>
  <testcase name="should set the send secure message step 1 page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping send secure message"/>
  <testcase name="should set the send secure message step 2 page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping send secure message"/>
  <testcase name="should set the send secure message step 3 page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping send secure message"/>
  <testcase name="should set the send secure message step 4 page properties" time="0.006" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping send secure message"/>
  <testcase name="should set the add beneficiary page and beneficiaries category when coming from beneficiary list" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping add beneficiary"/>
  <testcase name="should set the add beneficiary page and beneficiaries category when coming from transaction dashboard" time="0.022" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping add beneficiary"/>
  <testcase name="should set the add beneficiary confirmation page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping add beneficiary"/>
  <testcase name="should set the add beneficiary otp page properties" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping add beneficiary"/>
  <testcase name="should set the edit beneficiary page edit beneficiaries category when coming from beneficiary list" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping edit beneficiary"/>
  <testcase name="should set the edit beneficiary confirmation page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping edit beneficiary"/>
  <testcase name="should set the edit beneficiary otp page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping edit beneficiary"/>
  <testcase name="should set the page properties for the transfer details page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping transfer between accounts"/>
  <testcase name="should set the page properties for the transfer confirmation page" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping transfer between accounts"/>
  <testcase name="should set the page properties for the transfer results page" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping transfer between accounts"/>
  <testcase name="should set the page properties for the pay beneficiary page step 1" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay beneficiary"/>
  <testcase name="should set the page properties for the pay beneficiary page step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay beneficiary"/>
  <testcase name="should set the page properties for the pay beneficiary page step 3" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay beneficiary"/>
  <testcase name="should set the add beneficiary to group page properties" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set the add beneficiary to group otp page properties" time="0.006" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set beneficiaries list page and beneficiaries category" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set beneficiary view page and beneficiaries category" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should remove trailing colon when setting page name" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set page properties for beneficiary group list " time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set beneficiary group view page and beneficiaries category" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set beneficiary group payment page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set beneficiary group payment page 2 confirmation page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set beneficiary group payment page 3 results page properties" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping beneficiary groups"/>
  <testcase name="should set statement page name and the statement page category for statement without account number" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for statement with account number" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for provisional statements" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 30 day statements" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 30 day statements without account number" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 60 day statements" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 60 day statements without an account number" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 90 day statements" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 90 day statements without an account number" time="0.001" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 180 day statements" time="0.006" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set statement page name and the statement page category for 180 day statements without an account number" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping statements"/>
  <testcase name="should set the page properties for pay multiple beneficiaries" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay multiple beneficiaries"/>
  <testcase name="should set the page properties for the confirm step of pay multiple beneficiaries" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay multiple beneficiaries"/>
  <testcase name="should set the page properties for the payment results step of pay multiple beneficiaries" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping pay multiple beneficiaries"/>
  <testcase name="should set the correct page properties for payment notification history" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the correct page properties for viewing scheduled payments" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping"/>
  <testcase name="should set the correct page properties for prepaid history" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for prepaid selection" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for prepaid recharge step 1" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for prepaid recharge step 2" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for prepaid recharge otp" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for prepaid recharge step 4" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping prepaid"/>
  <testcase name="should set the correct page properties for once off payment details" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping once off payments"/>
  <testcase name="should set the correct page properties for once off payment confirmation" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping once off payments"/>
  <testcase name="should set the correct page properties for once off payment otp" time="0.003" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping once off payments"/>
  <testcase name="should set the correct page properties for once off payment results" time="0.002" classname="dtm analytics DtmAnalyticsService sendPageView on page name and category mapping once off payments"/>
  <testcase name="should set the login properties on the data layer when a login is recorded" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should not set the login properties on form submission if the dtm feature is disabled" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should set the formIsSubmitted property to true when a form submission is recorded" time="0.001" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should not set the formIsSubmitted property to true when a form submission is recorded and dtm analytics feature is disabled" time="0.005" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should record form completion and clear submission when a form completion is recorded" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should not record form completion and clear submission when a form completion is recorded and dtm analytics is disabled" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should clear the form submission properties when a form submission is cancelled" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should not clear the form submission properties when a form submission is cancelled and dtm is disabled" time="0.002" classname="dtm analytics DtmAnalyticsService form methods"/>
  <testcase name="should make an ajax call for the script returned by the analytics container" time="0.027" classname="dtm analytics analytics directive on mapped hostname when dtm analytics is not enabled"/>
  <testcase name="should not listen on location change and send the page view event if dtm analytics feature is enabled" time="0.006" classname="dtm analytics analytics directive on mapped hostname when dtm analytics is not enabled"/>
  <testcase name="should not send the error if dtm analytics is not toggled on" time="0.005" classname="dtm analytics analytics directive on mapped hostname when dtm analytics is not enabled"/>
  <testcase name="should not send the error if there is no error code and message" time="0.005" classname="dtm analytics analytics directive on mapped hostname when dtm analytics is not enabled"/>
  <testcase name="should make an ajax call for the script returned by the analytics container" time="0.005" classname="dtm analytics analytics directive on mapped hostname"/>
  <testcase name="should send the page view event on loading the first page" time="0.005" classname="dtm analytics analytics directive on mapped hostname"/>
  <testcase name="should listen on location change and send the page view event if dtm analytics feature is enabled" time="0.009" classname="dtm analytics analytics directive on mapped hostname"/>
  <testcase name="should listen for an error and send the error" time="0.007" classname="dtm analytics analytics directive on mapped hostname"/>
  <testcase name="should not send page views if script did not load" time="0.006" classname="dtm analytics analytics directive on non-mapped hostname"/>
  <testcase name="should send a trackButtonClick event" time="0.017" classname="button click tracker"/>
  <testcase name="should use the correct controller " time="0.005" classname="Beneficiaries routes when a beneficiary is to be added"/>
  <testcase name="should use the correct template " time="0.003" classname="Beneficiaries routes when a beneficiary is to be added"/>
  <testcase name="should know if a listed beneficiary is being added" time="0.004" classname="Beneficiaries when AddBeneficiariesController"/>
  <testcase name="should know if a private beneficiary is being added" time="0.004" classname="Beneficiaries when AddBeneficiariesController"/>
  <testcase name="should set payment confirmation to true by default" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should set payment confirmation to the previous value when there is an error" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should load the CDI onto the scope with the label function available so that the typeahead widget works" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should initialize the beneficiary" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should call $location.path when errorMessage is undefined and oldUrl is /otp/verify" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should not call $location.path when errorMessage is defined and oldUrl is /beneficiaries/list" time="0.007" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should not call $location.path when errorMessage is defined and oldUrl is /otp/verify" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should not call $location.path when errorMessage is undefined and oldUrl not /otp/verify" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should set the default mode to editing" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should ensure no listed beneficiary is selected when add flow is started" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should ensure the original listed beneficiary is selected when adding a listed beneficiary flow has an error" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should clear previous errors" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should initialize the beneficiary using the last request" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should retrieve a list of banks and label them" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should not retrieve branches because of lazy loading" time="0.004" classname="Beneficiaries when AddBeneficiariesController is initialized"/>
  <testcase name="should retrieve list of existing beneficiary groups" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized when listing existing beneficiary groups"/>
  <testcase name="should use the group name in the typeahead for group" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized when listing existing beneficiary groups"/>
  <testcase name="should strip out oldName to please the service" time="0.003" classname="Beneficiaries when AddBeneficiariesController is initialized when listing existing beneficiary groups"/>
  <testcase name="should return the branches for the selected bank" time="0.025" classname="Beneficiaries when AddBeneficiariesController selectedBankBranches"/>
  <testcase name="should return an empty list for undefined" time="0.003" classname="Beneficiaries when AddBeneficiariesController selectedBankBranches"/>
  <testcase name="should call BranchLazyLoadingService.bankUpdate" time="0.003" classname="Beneficiaries when AddBeneficiariesController watch beneficiary_bank"/>
  <testcase name="should call the proceed for the beneficiary flow service" time="0.004" classname="Beneficiaries when AddBeneficiariesController when proceed is clicked"/>
  <testcase name="should set the editing mode as false" time="0.004" classname="Beneficiaries when AddBeneficiariesController when proceed is clicked"/>
  <testcase name="should know the flow steps and state of the first step should be complete and state of second step should be current" time="0.004" classname="Beneficiaries when AddBeneficiariesController when proceed is clicked"/>
  <testcase name="should set the email address as the default payment confirmation" time="0.005" classname="Beneficiaries when AddBeneficiariesController toggle payment confirmation when adding"/>
  <testcase name="should default the payment confirmation recipient name to the beneficiary name" time="0.004" classname="Beneficiaries when AddBeneficiariesController toggle payment confirmation when adding"/>
  <testcase name="should set payment confirmation type to none" time="0.004" classname="Beneficiaries when AddBeneficiariesController toggle payment confirmation when adding"/>
  <testcase name="should set the payment confirmation recipient to the beneficiary name" time="0.003" classname="Beneficiaries when AddBeneficiariesController when beneficiary name is edited when payment confirmation is true"/>
  <testcase name="should not update the recipient name when it already has a value" time="0.003" classname="Beneficiaries when AddBeneficiariesController when beneficiary name is edited when payment confirmation is true"/>
  <testcase name="should update the recipient name when its value is the same as the old beneficiary name" time="0.004" classname="Beneficiaries when AddBeneficiariesController when beneficiary name is edited when payment confirmation is true"/>
  <testcase name="should not update the recipient name for listed beneficiaries" time="0.003" classname="Beneficiaries when AddBeneficiariesController when beneficiary name is edited when payment confirmation is true"/>
  <testcase name="should call the modify for the beneficiary flow service" time="0.003" classname="Beneficiaries when AddBeneficiariesController when modify is clicked"/>
  <testcase name="should set the editing mode as false" time="0.003" classname="Beneficiaries when AddBeneficiariesController when modify is clicked"/>
  <testcase name="should remove any previous errors" time="0.003" classname="Beneficiaries when AddBeneficiariesController when modify is clicked"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.003" classname="Beneficiaries when AddBeneficiariesController when modify is clicked"/>
  <testcase name="should set the previous payment confirmation state on the scope when there is an error and yes option was selected" time="0.008" classname="Beneficiaries when AddBeneficiariesController when confirm is clicked"/>
  <testcase name="should set the previous payment confirmation state on the scope when there is an error and no option was selected" time="0.004" classname="Beneficiaries when AddBeneficiariesController when confirm is clicked"/>
  <testcase name="should set the results of the operations to the scope when there is an error" time="0.004" classname="Beneficiaries when AddBeneficiariesController when confirm is clicked"/>
  <testcase name="should tell that a listed beneficiary is of the PRIVATE beneficiary type" time="0.004" classname="Beneficiaries when AddBeneficiariesController when confirm is clicked for a private beneficiary"/>
  <testcase name="should tell that a listed beneficiary is of the COMPANY beneficiary type" time="0.004" classname="Beneficiaries when AddBeneficiariesController when confirm is clicked for a listed beneficiary"/>
  <testcase name="should invoke the delete beneficiaries service and respond with success message" time="0.004" classname="Beneficiaries services beneficiaries"/>
  <testcase name="should invoke the delete beneficiaries service and respond with error message" time="0.004" classname="Beneficiaries services beneficiaries"/>
  <testcase name="should invoke the delete beneficiaries service and respond with a generic server error message" time="0.004" classname="Beneficiaries services beneficiaries"/>
  <testcase name="should reject delete promise" time="0.005" classname="beneficiaries table controller when delete service call fails"/>
  <testcase name="should set the sort criteria" time="0.003" classname="beneficiaries table controller when sorted"/>
  <testcase name="should set the sort order as descending by default" time="0.004" classname="beneficiaries table controller when sorted"/>
  <testcase name="should toggle the sort order" time="0.007" classname="beneficiaries table controller when sorted"/>
  <testcase name="should set the selected beneficiary in the global service variable" time="0.003" classname="beneficiaries table controller when viewing"/>
  <testcase name="should re-route to the add beneficiary page" time="0.003" classname="beneficiaries table controller when editing"/>
  <testcase name="should call the global service with edit beneficiary being set to true" time="0.004" classname="beneficiaries table controller when editing"/>
  <testcase name="should call the global service with beneficiary being set to selected value" time="0.003" classname="beneficiaries table controller when editing"/>
  <testcase name="should set the selected beneficiary in the global service variable" time="0.025" classname="beneficiaries table controller when paying"/>
  <testcase name="should go to the pay a single beneficiary flow " time="0.003" classname="beneficiaries table controller when paying"/>
  <testcase name="should indicate a beneficiary is in the process of being deleted" time="0.004" classname="beneficiaries table controller when deleting"/>
  <testcase name="should indicate a beneficiary is NOT in the process of being deleted" time="0.002" classname="beneficiaries table controller when deleting"/>
  <testcase name="should indicate that NO beneficiary is in the process of being deleted" time="0.003" classname="beneficiaries table controller when deleting"/>
  <testcase name="should clear the filter" time="0.003" classname="beneficiaries table controller when filtering"/>
  <testcase name="should clear the filter when event called" time="0.003" classname="beneficiaries table controller when filtering"/>
  <testcase name="should effectively delete beneficiary from backend" time="0.004" classname="beneficiaries table controller when a beneficiary is deleted"/>
  <testcase name="should have a confirm delete message" time="0.004" classname="beneficiaries table controller when a beneficiary is deleted"/>
  <testcase name="should have a error delete message" time="0.007" classname="beneficiaries table controller when a beneficiary is deleted"/>
  <testcase name="should delete beneficiary from the list" time="0.004" classname="beneficiaries table controller when a beneficiary is deleted"/>
  <testcase name="should mark a beneficiary for deletion" time="0.004" classname="beneficiaries table controller"/>
  <testcase name="should clear the error message in the beneficiaries parameters" time="0.004" classname="beneficiaries table controller is initialized"/>
  <testcase name="should have group flag as true if adding group" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should have group flag as false if not adding group" time="0.004" classname="beneficiaries table controller is initialized"/>
  <testcase name="should get the list of beneficiaries" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should have beneficiary list in scope" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should set the sorter" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should sort by beneficiary name" time="0.004" classname="beneficiaries table controller is initialized"/>
  <testcase name="should sort in descending order" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should have the sort arrow icon on the name column by default" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should set the clicked column as active" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should reset deletion-related flags" time="0.003" classname="beneficiaries table controller is initialized"/>
  <testcase name="should set the non-zero group flag to false when the list of beneficiaries contains no beneficiary belonging to a group" time="0.003" classname="beneficiaries table controller sorting on empty group fields"/>
  <testcase name="should set the non-zero group flag to true when the list of beneficiaries contains at least one beneficiary belonging to a group" time="0.003" classname="beneficiaries table controller sorting on empty group fields"/>
  <testcase name="should set the non-zero payment flag to false when the list of beneficiaries contains no beneficiary with a payment" time="0.003" classname="beneficiaries table controller sorting on empty payment fields"/>
  <testcase name="should set the non-zero group flag to true when the list of beneficiaries contains at least one beneficiary with a payment" time="0.007" classname="beneficiaries table controller sorting on empty payment fields"/>
  <testcase name="should get the latest beneficiary from the global parameters" time="0.004" classname="beneficiaries table controller beneficiary added"/>
  <testcase name="should set the latest beneficiary  as the highlighted beneficiary" time="0.004" classname="beneficiaries table controller beneficiary added"/>
  <testcase name="should reset highlighted beneficiary" time="0.004" classname="beneficiaries table controller beneficiary added"/>
  <testcase name="should use the correct controller " time="0.003" classname="view beneficiary details controller routes"/>
  <testcase name="should use the correct template " time="0.003" classname="view beneficiary details controller routes"/>
  <testcase name="should get the latest beneficiary from the global parameters" time="0.002" classname="view beneficiary details controller"/>
  <testcase name="should know if beneficiary is a listed one" time="0.002" classname="view beneficiary details controller"/>
  <testcase name="should know if beneficiary is a private one" time="0.002" classname="view beneficiary details controller"/>
  <testcase name="should re-route to the add beneficiary page" time="0.001" classname="view beneficiary details controller when editing"/>
  <testcase name="should call the global service with edit beneficiary being set to true" time="0.001" classname="view beneficiary details controller when editing"/>
  <testcase name="should call the global service with beneficiary being set to selected value" time="0.001" classname="view beneficiary details controller when editing"/>
  <testcase name="should set the selected beneficiary in the global service variable" time="0.002" classname="view beneficiary details controller when paying"/>
  <testcase name="should go to the pay a single beneficiary flow " time="0.025" classname="view beneficiary details controller when paying"/>
  <testcase name="should mark for deletion" time="0.006" classname="view beneficiary details controller when deleting"/>
  <testcase name="should cancel deletion" time="0.003" classname="view beneficiary details controller when deleting"/>
  <testcase name="should navigate to beneficiary list upon successful deletion" time="0.003" classname="view beneficiary details controller when deleting"/>
  <testcase name="should set error upon unsuccessful deletion" time="0.002" classname="view beneficiary details controller when deleting"/>
  <testcase name="should clear error after unsuccessful deletion on cancel" time="0.002" classname="view beneficiary details controller when deleting"/>
  <testcase name="should use the correct controller " time="0.005" classname="view beneficiary groups controller routes"/>
  <testcase name="should use the correct template " time="0.004" classname="view beneficiary groups controller routes"/>
  <testcase name="should show group page" time="0.003" classname="view beneficiary groups controller when showing group page"/>
  <testcase name="should show beneficiaries page" time="0.003" classname="view beneficiary groups controller when showing beneficiaries page"/>
  <testcase name="should add current beneficiary to selectedBeneficiaries list" time="0.012" classname="view beneficiary groups controller selectBeneficiary"/>
  <testcase name="should have the beneficiary selected" time="0.003" classname="view beneficiary groups controller selectBeneficiary"/>
  <testcase name="should be able to click if beneficiary is selected" time="0.003" classname="view beneficiary groups controller selectBeneficiary"/>
  <testcase name="should add current beneficiary to selectedBeneficiaries list" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should have the beneficiary selected" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should be able to click if beneficiary is selected" time="0.002" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should have the beneficiary length as zero" time="0.007" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should have the current beneficiary as unselected" time="0.004" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should have not be able to click the groups" time="0.004" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should not display the add buttons" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should have one selected beneficiary if two beneficiaries selected and one gets unselected" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should display if two beneficiaries selected and one gets unselected" time="0.004" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should select one beneficiary if two beneficiaries selected and one gets unselected" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should be able to click if two beneficiaries selected and one gets unselected" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should display if two beneficiaries selected and one gets unselected" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should reset previous operation status" time="0.003" classname="view beneficiary groups controller selectBeneficiary beneficiary selected"/>
  <testcase name="should not update the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="view beneficiary groups controller selectBeneficiary addGroupMemberNumber"/>
  <testcase name="should update the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="view beneficiary groups controller selectBeneficiary addGroupMemberNumber"/>
  <testcase name="should not update the member group numbers based on new and old group of selected beneficiaries" time="0.002" classname="view beneficiary groups controller addGroupMemberNumber"/>
  <testcase name="should decrement the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="view beneficiary groups controller decrementGroupMemberNumber"/>
  <testcase name="should know how many members are in beneficiary group" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should have the selectedBeneficiaries as an empty array" time="0.007" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should know the default beneficiary groups length" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should know default state group click is false" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should know default display" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should call list beneficiary service" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should know the groups returned by the service" time="0.002" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should know number of members in groups which have no beneficiaries" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should count number of members in group based on group name when both groups have beneficiaries" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should count number of members in group based on group name when one group has beneficiaries and the other does not" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should have the beneficiary list in the scope on initialize of the group beneficiaries" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should amend a beneficiary group by calling the addMultiple service with new beneficiary details" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not amend a beneficiary group by calling the addMultiple service when there is an error" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should show an error if amending beneficiary fails" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should show an error has occurred if amending beneficiary fails with response message as an empty string" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not clear the display if there is an error when adding a beneficiary to group" time="0.005" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should indicate to which group beneficiaries are being added so that the inline spinner is next to the group&apos;s name" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not change the number of members in old beneficiary group if amending beneficiary fails" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should show an error if amending beneficiary fails for unspecified application error" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should sort by group name" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should put the latest group added at the top of the list" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should add the beneficiary group" time="0.008" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should add the beneficiary group and add selected beneficiaries into it" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when group name exists" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when maximum number of groups has been exceeded" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when group name exists and there is no response error message" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when an unspecified application error has occurred" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should redirect to the add group page when an unspecified error has occurred" time="0.004" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should not have an inline spinner next to any group when adding a new group" time="0.003" classname="view beneficiary groups controller when initialized when all service calls return values"/>
  <testcase name="should have a table" time="0.003" classname="beneficiaries list directive"/>
  <testcase name="should have a table" time="0.005" classname="beneficiaries table directive"/>
  <testcase name="should set scope for rendering filter box based on attribute" time="0.028" classname="multiple beneficiaries directive template"/>
  <testcase name="should show amount and date when the amount is positive" time="0.077" classname="multiple beneficiaries directive template last payment"/>
  <testcase name="should hide amount and date when the amount is not positive" time="0.031" classname="multiple beneficiaries directive template last payment"/>
  <testcase name="should immediately return if beneficiary parameter is empty" time="0.009" classname="edit beneficiaries controller"/>
  <testcase name="should call scheduledPaymentsService and set hasScheduledPayments to true" time="0.008" classname="edit beneficiaries controller"/>
  <testcase name="should call scheduledPaymentsService and set hasScheduledPayments to false" time="0.006" classname="edit beneficiaries controller"/>
  <testcase name="should know if a listed beneficiary is being added" time="0.004" classname="edit beneficiaries controller"/>
  <testcase name="should know if a private beneficiary is being added" time="0.004" classname="edit beneficiaries controller"/>
  <testcase name="should set the old beneficiary group name to undefined if beneficiary does not belong to a group" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should load the CDI onto the scope with the label function available so that the typeahead widget works" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should set listedBeneficiary if beneficiary type is company" time="0.005" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should not set listedBeneficiary if beneficiary type is private" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should call $location.path when errorMessage is undefined and oldUrl is /otp/verify" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should not call $location.path when errorMessage is defined and oldUrl is /otp/verify" time="0.005" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should not call $location.path when errorMessage is undefined and oldUrl is /beneficiaries/list" time="0.003" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should know the default editBeneficiary flag based on what has been set on the beneficiaryFlowParameters" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should initialize the beneficiary" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should set the default mode to editing" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should set the payment confirmation parameter to true for a beneficiary with a confirmation type" time="0.005" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should set the payment confirmation to false for a beneficiary without a confirmation type" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should clear previous errors" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should initialize the beneficiary using the last request" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should retrieve a list of banks and label them" time="0.004" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should not retrieve branches because of lazy loading" time="0.031" classname="edit beneficiaries controller is initialized"/>
  <testcase name="should retrieve list of existing beneficiary groups" time="0.005" classname="edit beneficiaries controller is initialized when listing existing beneficiary groups"/>
  <testcase name="should use the group name in the typeahead for group" time="0.005" classname="edit beneficiaries controller is initialized when listing existing beneficiary groups"/>
  <testcase name="should strip out oldName to please the service" time="0.004" classname="edit beneficiaries controller is initialized when listing existing beneficiary groups"/>
  <testcase name="should return the branches for the selected bank" time="0.004" classname="edit beneficiaries controller selectedBankBranches"/>
  <testcase name="should return an empty list for undefined" time="0.003" classname="edit beneficiaries controller selectedBankBranches"/>
  <testcase name="should call BranchLazyLoadingService.bankUpdate" time="0.004" classname="edit beneficiaries controller watch beneficiary_bank"/>
  <testcase name="should call the proceed for the beneficiary flow service" time="0.004" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should set the editing mode as false" time="0.004" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should know the flow steps and state of the first step should be complete and state of second step should be current" time="0.004" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should set the previous group name on the request when changing group membership" time="0.003" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should send the service a recipient group containing the name of the previous group when removing beneficiary from a group" time="0.004" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should send the service an empty recipient group when beneficiary group is not set and it is still not set" time="0.003" classname="edit beneficiaries controller when proceed is clicked"/>
  <testcase name="should set the email address as the default payment confirmation if beneficiary has no confirmation type" time="0.004" classname="edit beneficiaries controller toggle payment confirmation when editing"/>
  <testcase name="should clear the fields when payment confirmation is set to false" time="0.004" classname="edit beneficiaries controller toggle payment confirmation when editing"/>
  <testcase name="should not set payment confirmation recipient name for a company beneficiary" time="0.007" classname="edit beneficiaries controller toggle payment confirmation when editing"/>
  <testcase name="should set payment confirmation recipient name for a private beneficiary" time="0.005" classname="edit beneficiaries controller toggle payment confirmation when editing"/>
  <testcase name="should call the modify for the beneficiary flow service" time="0.005" classname="edit beneficiaries controller when modify is clicked"/>
  <testcase name="should set the editing mode as false" time="0.004" classname="edit beneficiaries controller when modify is clicked"/>
  <testcase name="should remove any previous errors" time="0.004" classname="edit beneficiaries controller when modify is clicked"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.004" classname="edit beneficiaries controller when modify is clicked"/>
  <testcase name="should initialize the beneficiary" time="0.004" classname="edit beneficiaries controller when confirm is clicked when there is a success"/>
  <testcase name="should not allow edit beneficiary" time="0.004" classname="edit beneficiaries controller path condition"/>
  <testcase name="should allow edit beneficiary" time="0.004" classname="edit beneficiaries controller path condition"/>
  <testcase name="should filter by beneficiary name" time="0.002" classname="beneficiaryFilter"/>
  <testcase name="should filter by customer reference" time="0.001" classname="beneficiaryFilter"/>
  <testcase name="should search by last amount paid if not adding group" time="0.001" classname="beneficiaryFilter"/>
  <testcase name="should filter by group name" time="0.002" classname="beneficiaryFilter"/>
  <testcase name="should not search by account number" time="0.001" classname="beneficiaryFilter"/>
  <testcase name="should not search by last amount paid if adding group" time="0.001" classname="beneficiaryFilter"/>
  <testcase name="exists" time="0.002" classname="prepositionForNotificationTypeFilter"/>
  <testcase name="returns at for Email" time="0.001" classname="prepositionForNotificationTypeFilter"/>
  <testcase name="returns on for everything else" time="0.001" classname="prepositionForNotificationTypeFilter"/>
  <testcase name="exists" time="0.001" classname="sentenceCaseForNotificationTypeFilter"/>
  <testcase name="leaves SMS as uppercase" time="0.001" classname="sentenceCaseForNotificationTypeFilter"/>
  <testcase name="converts other types to lowercase" time="0.026" classname="sentenceCaseForNotificationTypeFilter"/>
  <testcase name="should use the correct controller to list all groups" time="0.003" classname="Beneficiary Groups routes when a beneficiary group is to be added"/>
  <testcase name="should use the correct template to view all groups" time="0.002" classname="Beneficiary Groups routes when a beneficiary group is to be added"/>
  <testcase name="should update the location when called" time="0.003" classname="Beneficiary Groups view controller go"/>
  <testcase name="should remove the group from the list upon successful deletion" time="0.003" classname="Beneficiary Groups view controller confirmDeletion"/>
  <testcase name="should not remove the group from the list when there is a failure" time="0.003" classname="Beneficiary Groups view controller confirmDeletion"/>
  <testcase name="should set the deletion flags" time="0.002" classname="Beneficiary Groups view controller markForDeletion"/>
  <testcase name="should know if a group is marked for deletion" time="0.006" classname="Beneficiary Groups view controller isBeingDeleted"/>
  <testcase name="should know if a group is not marked for deletion" time="0.003" classname="Beneficiary Groups view controller isBeingDeleted"/>
  <testcase name="should show confirm message" time="0.004" classname="Beneficiary Groups view controller delete groups messages"/>
  <testcase name="should return error message" time="0.003" classname="Beneficiary Groups view controller delete groups messages"/>
  <testcase name="should be active for the current sort" time="0.003" classname="Beneficiary Groups view controller sortArrowClass"/>
  <testcase name="should be not be active for other fields" time="0.003" classname="Beneficiary Groups view controller sortArrowClass"/>
  <testcase name="should sort by name" time="0.003" classname="Beneficiary Groups view controller initialize"/>
  <testcase name="should place beneficiary groups on the scope" time="0.003" classname="Beneficiary Groups view controller initialize"/>
  <testcase name="should redirect to the pay multiple page" time="0.003" classname="Beneficiary Groups view controller pay beneficiary group"/>
  <testcase name="should not redirect to the pay multiple page if the group is empty" time="0.003" classname="Beneficiary Groups view controller pay beneficiary group"/>
  <testcase name="should know a group may be empty" time="0.003" classname="Beneficiary Groups view controller #isEmptyGroup"/>
  <testcase name="should know a group may be populated" time="0.002" classname="Beneficiary Groups view controller #isEmptyGroup"/>
  <testcase name="should invoke the list group service" time="0.009" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should invoke the add group service and respond with success message" time="0.004" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should invoke the add group service and respond with an error message for a duplicate group" time="0.004" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should invoke the add group service and respond with an error message for exceeding maximum number of group" time="0.004" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should invoke the add group service and respond with the message from the service" time="0.004" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should invoke the add group service and respond with a generic server error" time="0.004" classname="beneficiaries services beneficiaries group"/>
  <testcase name="should have a list" time="0.004" classname="beneficiaries services list directive"/>
  <testcase name="should know the lists of formatted beneficiaries" time="0.005" classname="beneficiary list service"/>
  <testcase name="should not populate the cache with the list of beneficiaries if the call fails" time="0.004" classname="beneficiary list service list cache"/>
  <testcase name="should load data from the cache if we have it" time="0.004" classname="beneficiary list service list cache"/>
  <testcase name="should load the beneficiaries from the service if not in the cache" time="0.004" classname="beneficiary list service list cache"/>
  <testcase name="should invoke the add beneficiaries service and respond with a success message" time="0.003" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with an error message" time="0.04" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with the correct error message for 2308" time="0.003" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with the correct error message for 2311" time="0.007" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with the correct error message for 2318" time="0.004" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with the correct error message for 2202" time="0.004" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with the correct error message for 7545" time="0.003" classname="services beneficiaries add"/>
  <testcase name="should invoke the add beneficiaries service and respond with a generic server error message" time="0.004" classname="services beneficiaries add"/>
  <testcase name="should invoke the add multiple beneficiaries service and respond with success message" time="0.004" classname="services beneficiaries"/>
  <testcase name="should invoke the add multiple beneficiaries service and respond with error message" time="0.004" classname="services beneficiaries"/>
  <testcase name="should invoke the add multiple beneficiaries service and respond with a generic error message" time="0.003" classname="services beneficiaries"/>
  <testcase name="should invoke the add multiple beneficiaries service and respond with generic server error message" time="0.004" classname="services beneficiaries"/>
  <testcase name="should initialize the beneficiary" time="0.004" classname="beneficiaries flow service is initialized"/>
  <testcase name="should set the default mode to editing" time="0.004" classname="beneficiaries flow service is initialized"/>
  <testcase name="should clear previous errors" time="0.003" classname="beneficiaries flow service is initialized"/>
  <testcase name="should have add beneficiary header when passed" time="0.002" classname="beneficiaries flow service is initialized"/>
  <testcase name="should have edit beneficiary header when passed" time="0.002" classname="beneficiaries flow service is initialized"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.003" classname="beneficiaries flow service is initialized"/>
  <testcase name="should have the right card by default" time="0.003" classname="beneficiaries flow service is initialized"/>
  <testcase name="should initialize the beneficiary using the last request" time="0.004" classname="beneficiaries flow service is initialized"/>
  <testcase name="should reset the bank into the beneficiary using the last request to please AngularJS if it is a private beneficiary" time="0.007" classname="beneficiaries flow service is initialized"/>
  <testcase name="should NOT reset the bank into the beneficiary if it is a listed one" time="0.004" classname="beneficiaries flow service is initialized"/>
  <testcase name="should set editing to false" time="0.004" classname="beneficiaries flow service when proceed is clicked"/>
  <testcase name="should know the flow steps and state of the first step should be complete and state of second step should be current" time="0.004" classname="beneficiaries flow service when proceed is clicked"/>
  <testcase name="should set the editing mode as false" time="0.004" classname="beneficiaries flow service when modify is clicked"/>
  <testcase name="should remove any previous errors" time="0.003" classname="beneficiaries flow service when modify is clicked"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.003" classname="beneficiaries flow service when modify is clicked"/>
  <testcase name="should add the beneficiary and clear last request data when no error occurred" time="0.017" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should edit the beneficiary and clear last request data when no error occurred" time="0.005" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should call the setBeneficiaryFlowParameter service with addBeneficiaryFlow and true in the global service" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should set the latestBeneficiaryRecipientID to currently added beneficiary recipient ID in the global service" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should add the recipient ID of the latest beneficiary to the beneficiary flow parameters" time="0.038" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should know the current step is the last step and the other two steps have been completed" time="0.004" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not add beneficiary when the account number is invalid" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not add beneficiary when the bank, branch and account numbers are invalid" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not allow beneficiary to be added as private if it is listed in the CDI" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not allow listed beneficiary to be added if the reference provided is invalid" time="0.003" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not allow listed beneficiary to be added if the notification email provided is invalid" time="0.008" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should not add beneficiary when an unspecified application error has occurred" time="0.004" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should redirect to the first page in the flow when an unspecified error has occurred" time="0.008" classname="beneficiaries flow service when confirm is clicked"/>
  <testcase name="should aggregate the members of a group" time="0.011" classname="Beneficiary Groups Service list with members"/>
  <testcase name="should handle bad data from groups service" time="0.005" classname="Beneficiary Groups Service list with members"/>
  <testcase name="should remove the groups from the beneficiaries then delete the group" time="0.004" classname="Beneficiary Groups Service delete"/>
  <testcase name="should reject with an error if deletion was not successful" time="0.004" classname="Beneficiary Groups Service delete"/>
  <testcase name="should respond with success message when invoked" time="0.004" classname="Beneficiary Groups Service rename"/>
  <testcase name="should respond with an error message for a duplicate group when invoked" time="0.004" classname="Beneficiary Groups Service rename"/>
  <testcase name="should respond with an error message for exceeding maximum number of group when invoked" time="0.003" classname="Beneficiary Groups Service rename"/>
  <testcase name="should respond with a generic error when invoked" time="0.003" classname="Beneficiary Groups Service rename"/>
  <testcase name="should respond with a generic error when invoked without error message from service" time="0.003" classname="Beneficiary Groups Service rename"/>
  <testcase name="should respond with a generic server error when invoked" time="0.003" classname="Beneficiary Groups Service rename"/>
  <testcase name="should not populate the cache with the list of groups if the call fails" time="0.006" classname="Beneficiary Groups Service list cache"/>
  <testcase name="should load data from the cache if we have it" time="0.009" classname="Beneficiary Groups Service list cache"/>
  <testcase name="should load the groups from the service if not in the cache" time="0.022" classname="Beneficiary Groups Service list cache"/>
  <testcase name="should be add beneficiary when adding a beneficiary" time="0.114" classname="add beneficiaries template page heading"/>
  <testcase name="should be edit beneficiary when editing a beneficiary" time="0.063" classname="add beneficiaries template page heading"/>
  <testcase name="should not include information to be completed" time="0.088" classname="add beneficiaries template when adding listed beneficiaries"/>
  <testcase name="should not allow companies not in the list" time="0.075" classname="add beneficiaries template when adding listed beneficiaries listed beneficiary name"/>
  <testcase name="should allow company name to be typed" time="0.095" classname="add beneficiaries template when adding listed beneficiaries listed beneficiary name"/>
  <testcase name="should validate" time="0.12" classname="add beneficiaries template when adding private beneficiary name"/>
  <testcase name="should validate" time="0.109" classname="add beneficiaries template when adding private beneficiary bank"/>
  <testcase name="should validate" time="0.152" classname="add beneficiaries template when adding private beneficiary branch"/>
  <testcase name="should validate" time="0.125" classname="add beneficiaries template when adding private beneficiary account number"/>
  <testcase name="should validate" time="0.119" classname="add beneficiaries template when adding private beneficiary my reference"/>
  <testcase name="should validate" time="0.098" classname="add beneficiaries template when adding private beneficiary beneficiary reference"/>
  <testcase name="should include beneficiary known information" time="0.125" classname="add beneficiaries template when adding private beneficiary"/>
  <testcase name="should call sortBy with name when name table header is clicked" time="0.014" classname="beneficiaries table template sorting"/>
  <testcase name="should call sortBy with name when name table header is clicked" time="0.012" classname="beneficiaries table template sorting"/>
  <testcase name="should call sortBy with recipientGroupName when name table header is clicked" time="0.013" classname="beneficiaries table template sorting"/>
  <testcase name="should call sortBy with lastPaymentDate when name table header is clicked" time="0.013" classname="beneficiaries table template sorting"/>
  <testcase name="should not allow special characters" time="0.038" classname="confirmation preferences recipient name"/>
  <testcase name="should be required" time="0.064" classname="confirmation preferences recipient name"/>
  <testcase name="should be shorter than 25 characters" time="0.038" classname="confirmation preferences recipient name"/>
  <testcase name="should not allow special characters" time="0.043" classname="confirmation preferences email address"/>
  <testcase name="should be required" time="0.043" classname="confirmation preferences email address"/>
  <testcase name="should be shorter than 40 characters" time="0.07" classname="confirmation preferences email address"/>
  <testcase name="should not allow special characters" time="0.056" classname="confirmation preferences phone number"/>
  <testcase name="should not allow letters" time="0.042" classname="confirmation preferences phone number"/>
  <testcase name="should be required" time="0.064" classname="confirmation preferences phone number"/>
  <testcase name="should not be shorter than 10 characters" time="0.039" classname="confirmation preferences phone number"/>
  <testcase name="should not be longer than 10 characters" time="0.039" classname="confirmation preferences phone number"/>
  <testcase name="should start with a zero" time="0.038" classname="confirmation preferences phone number"/>
  <testcase name="should have a second digit in the range 6-8" time="0.063" classname="confirmation preferences phone number"/>
  <testcase name="should recognise a valid cell number" time="0.04" classname="confirmation preferences phone number"/>
  <testcase name="should not allow special characters" time="0.045" classname="confirmation preferences fax number"/>
  <testcase name="should not allow letters" time="0.065" classname="confirmation preferences fax number"/>
  <testcase name="should be required" time="0.044" classname="confirmation preferences fax number"/>
  <testcase name="should not be shorter than 10 characters" time="0.047" classname="confirmation preferences fax number"/>
  <testcase name="should not be longer than 10 characters" time="0.045" classname="confirmation preferences fax number"/>
  <testcase name="should start with a zero" time="0.083" classname="confirmation preferences fax number"/>
  <testcase name="should recognise a valid fax number" time="0.053" classname="confirmation preferences fax number"/>
  <testcase name="should call deleteGroup on scope when the delete group button is clicked" time="0.016" classname="view group details template"/>
  <testcase name="should use the correct controller " time="0.018" classname="Beneficiaries routes when a beneficiary group is to be added"/>
  <testcase name="should use the correct template " time="0.003" classname="Beneficiaries routes when a beneficiary group is to be added"/>
  <testcase name="should show group page" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when showing group page"/>
  <testcase name="should show beneficiaries page" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when showing beneficiaries page"/>
  <testcase name="should add current beneficiary to selectedBeneficiaries list" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary"/>
  <testcase name="should have the beneficiary selected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary"/>
  <testcase name="should be able to click if beneficiary is selected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary"/>
  <testcase name="should add current beneficiary to selectedBeneficiaries list" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should have the beneficiary selected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should be able to click if beneficiary is selected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should have the beneficiary length as zero" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should have the current beneficiary as unselected" time="0.002" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should have not be able to click the groups" time="0.002" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should not display the add buttons" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should have one selected beneficiary if two beneficiaries selected and one gets unselected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should display if two beneficiaries selected and one gets unselected" time="0.026" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should select one beneficiary if two beneficiaries selected and one gets unselected" time="0.007" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should be able to click if two beneficiaries selected and one gets unselected" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should display if two beneficiaries selected and one gets unselected" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should reset previous operation status" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary beneficiary selected"/>
  <testcase name="should not update the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary addGroupMemberNumber"/>
  <testcase name="should update the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController selectBeneficiary addGroupMemberNumber"/>
  <testcase name="should not update the member group numbers based on new and old group of selected beneficiaries" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController addGroupMemberNumber"/>
  <testcase name="should decrement the member group numbers based on new and old group of selected beneficiaries" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController decrementGroupMemberNumber"/>
  <testcase name="should know how many members are in beneficiary group" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should have the selectedBeneficiaries as an empty array" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should know the default beneficiary groups length" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should know default state group click is false" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should know default display" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should call list beneficiary service" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should know the groups returned by the service" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should know number of members in groups which have no beneficiaries" time="0.007" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should count number of members in group based on group name when both groups have beneficiaries" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should count number of members in group based on group name when one group has beneficiaries and the other does not" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should have the beneficiary list in the scope on initialize of the group beneficiaries" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should amend a beneficiary group by calling the addMultiple service with new beneficiary details" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not amend a beneficiary group by calling the addMultiple service when there is an error" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should show an error if amending beneficiary fails" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should show an error has ocurred if amending beneficiary fails with response message as an empty string" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not clear the display if there is an error when adding a beneficiary to group" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should indicate to which group beneficiaries are being added so that the inline spinner is next to the group&apos;s name" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not change the number of members in old beneficiary group if amending beneficiary fails" time="0.004" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should show an error if amending beneficiary fails for unspecified application error" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should sort by group name" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should put the latest group added at the top of the list" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should add the beneficiary group" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should add the beneficiary group and add selected beneficiaries into it" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when group name exists" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when maximum number of groups has been exceeded" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when group name exists and there is no response error message" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not add beneficiary group when an unspecified application error has occurred" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should redirect to the add group page when an unspecified error has occurred" time="0.044" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should not have an inline spinner next to any group when adding a new group" time="0.003" classname="Beneficiaries when ViewBeneficiaryGroupsController when initialized when all service calls return values"/>
  <testcase name="should use the correct controller to view group details" time="0.004" classname="Beneficiary Group Details routes"/>
  <testcase name="should use the correct template to view group details" time="0.003" classname="Beneficiary Group Details routes"/>
  <testcase name="should place beneficiary groups on the scope" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should redirect to groups/list when selectedGroup is undefined" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should direct to /groups/list when group does not exist" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should have selectedGroup in scope when group exist" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set isEditing to false" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set errorMessage and successMessage to undefined" time="0.002" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set errorMessage to undefined and isSuccessful to false" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set isRemovingMembers to false" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set hasMemberForRemoval to false" time="0.002" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should have no selected members" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set the isConfirmRemoval to false" time="0.003" classname="Beneficiary Group Details Controller initialize"/>
  <testcase name="should set isEditing to true" time="0.004" classname="Beneficiary Group Details Controller edit group name"/>
  <testcase name="should set isSuccessful and errorMessage to undefined" time="0.003" classname="Beneficiary Group Details Controller edit group name"/>
  <testcase name="should set groupNewName to selectedGroup.name" time="0.004" classname="Beneficiary Group Details Controller edit group name"/>
  <testcase name="should set isEditing to false" time="0.003" classname="Beneficiary Group Details Controller cancel edit group name"/>
  <testcase name="should set isEditing to false" time="0.004" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="should call rename with groupNewName and selectedGroup.name" time="0.003" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="should resolve the promise and update selectedGroup and set isSuccessful to true" time="0.003" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="should reject the promise and set errorMessage and isSuccessful" time="0.003" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="should update the group name associated with each beneficiary" time="0.004" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="should not allow duplicates group name when editing beneficiary groups" time="0.003" classname="Beneficiary Group Details Controller save group name"/>
  <testcase name="resets notification flags" time="0.003" classname="Beneficiary Group Details Controller amendBeneficiariesGroup"/>
  <testcase name="should call addMultiple with correct argument" time="0.004" classname="Beneficiary Group Details Controller amendBeneficiariesGroup"/>
  <testcase name="should resolve promise and remove the beneficiaries from scope" time="0.003" classname="Beneficiary Group Details Controller amendBeneficiariesGroup"/>
  <testcase name="should reject promise and remove the beneficiaries from scope" time="0.003" classname="Beneficiary Group Details Controller amendBeneficiariesGroup"/>
  <testcase name="set isRemovingMembers to true" time="0.003" classname="Beneficiary Group Details Controller remove group members"/>
  <testcase name="resets the error flag" time="0.004" classname="Beneficiary Group Details Controller remove group members"/>
  <testcase name="resets the success flag" time="0" classname="Beneficiary Group Details Controller remove group members"/>
  <testcase name="should set isRemovingMemebers to false" time="0.003" classname="Beneficiary Group Details Controller cancel remove group members"/>
  <testcase name="should set membersForRemoval to undefined" time="0.004" classname="Beneficiary Group Details Controller cancel remove group members"/>
  <testcase name="should set hasMembersForRemoval to false" time="0.004" classname="Beneficiary Group Details Controller cancel remove group members"/>
  <testcase name="should reset flag notification" time="0.004" classname="Beneficiary Group Details Controller cancel remove group members"/>
  <testcase name="should add member to membersForRemoval" time="0.004" classname="Beneficiary Group Details Controller toggleSelected"/>
  <testcase name="should prepend to the selected list" time="0.028" classname="Beneficiary Group Details Controller toggleSelected"/>
  <testcase name="should remove member from membersForRemoval" time="0.003" classname="Beneficiary Group Details Controller toggleSelected"/>
  <testcase name="should set hasMembersForRemoval to true when the membersForRemoval list has members" time="0.003" classname="Beneficiary Group Details Controller toggleSelected"/>
  <testcase name="should set hasMembersForRemoval to false when the membersForRemoval list has no members" time="0.003" classname="Beneficiary Group Details Controller toggleSelected"/>
  <testcase name="should return true when has member in membersForRemoval" time="0.003" classname="Beneficiary Group Details Controller hasMember"/>
  <testcase name="should return false when has member not in membersForRemoval" time="0.003" classname="Beneficiary Group Details Controller hasMember"/>
  <testcase name="should redirect to the pay multiple page" time="0.003" classname="Beneficiary Group Details Controller pay beneficiary group"/>
  <testcase name="should not redirect to the pay multiple page if the group is empty" time="0.002" classname="Beneficiary Group Details Controller pay beneficiary group"/>
  <testcase name="should know a group may be empty" time="0.004" classname="Beneficiary Group Details Controller #isEmptyGroup"/>
  <testcase name="should return true if group is undefined" time="0" classname="Beneficiary Group Details Controller #isEmptyGroup"/>
  <testcase name="should know a group may be populated" time="0" classname="Beneficiary Group Details Controller #isEmptyGroup"/>
  <testcase name="should set the cancel a deletion" time="0.004" classname="Beneficiary Group Details Controller delete group"/>
  <testcase name="should mark the group for deletion" time="0" classname="Beneficiary Group Details Controller delete group"/>
  <testcase name="should call delete group on the group service with the selected group and the current card" time="0.003" classname="Beneficiary Group Details Controller delete group"/>
  <testcase name="should redirect to the beneficiary list page when successfully deleting" time="0.004" classname="Beneficiary Group Details Controller delete group"/>
  <testcase name="should display an error message when can not delete the group" time="0.004" classname="Beneficiary Group Details Controller delete group"/>
  <testcase name="should have an aggressive expiring cache" time="0.003" classname="Cacher caches"/>
  <testcase name="should have a perennial cache" time="0.003" classname="Cacher caches"/>
  <testcase name="should call the endpoint" time="0.002" classname="Cacher for short lived cache fetch"/>
  <testcase name="should resolve with response" time="0.002" classname="Cacher for short lived cache fetch"/>
  <testcase name="should not call the service if the cache is set" time="0.003" classname="Cacher for short lived cache fetch"/>
  <testcase name="should clone the cache object to avoid modification" time="0.002" classname="Cacher for short lived cache fetch"/>
  <testcase name="should reject with the response error" time="0.003" classname="Cacher for short lived cache fetch on service rejection"/>
  <testcase name="should not cache" time="0.006" classname="Cacher for short lived cache fetch on service rejection"/>
  <testcase name="should call the service again when the cache is flushed" time="0.003" classname="Cacher for short lived cache flushEndpoint"/>
  <testcase name="should flush specific cache keys" time="0.003" classname="Cacher for short lived cache flushEndpoint"/>
  <testcase name="should remove all cached endpoints" time="0.003" classname="Cacher for short lived cache flush"/>
  <testcase name="should load the data from the service if a second call lands before the first has the data" time="0.003" classname="Cacher for perennial cache fetch"/>
  <testcase name="should call the endpoint" time="0.002" classname="Cacher for perennial cache fetch"/>
  <testcase name="should resolve with response" time="0.003" classname="Cacher for perennial cache fetch"/>
  <testcase name="should not call the service if the cache is set" time="0.002" classname="Cacher for perennial cache fetch"/>
  <testcase name="should clone the cache object to avoid modification" time="0.002" classname="Cacher for perennial cache fetch"/>
  <testcase name="should reject with the response error" time="0.003" classname="Cacher for perennial cache fetch on service rejection"/>
  <testcase name="should not cache" time="0.003" classname="Cacher for perennial cache fetch on service rejection"/>
  <testcase name="should reject with the response error" time="0.002" classname="Cacher for perennial cache fetch on service header errors"/>
  <testcase name="should not cache" time="0.002" classname="Cacher for perennial cache fetch on service header errors"/>
  <testcase name="should call the service again when the cache is flushed" time="0.003" classname="Cacher for perennial cache flushEndpoint"/>
  <testcase name="should flush specific cache keys" time="0.003" classname="Cacher for perennial cache flushEndpoint"/>
  <testcase name="should remove all cached endpoints" time="0.003" classname="Cacher for perennial cache flush"/>
  <testcase name="should list reasons for leaving for a logged-in user if a card is selected" time="0.007" classname="leavingFeedbackDirective"/>
  <testcase name="should list reasons for leaving for a logged-out user if no card is selected" time="0.007" classname="leavingFeedbackDirective"/>
  <testcase name="should make a service request with the provided reason" time="0.022" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should make a service request with the current location" time="0.007" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should make a service request with the current user&apos;s user name if available" time="0.007" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should make a service request without the username if the digital ID is not available" time="0.006" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should redirect you to the old site" time="0.033" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should log you out" time="0.006" classname="leavingFeedbackDirective when leaving"/>
  <testcase name="should associate controller with url" time="0.003" classname="Unit Test - formal statement controller routing"/>
  <testcase name="should associate template with url" time="0.003" classname="Unit Test - formal statement controller routing"/>
  <testcase name="should retrieve accounts" time="0.013" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should set current accounts on the scope" time="0.003" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should call formal statement service" time="0.002" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should set formal statement on the scope" time="0.003" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should set the first account as the selected account" time="0.003" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should set digital id as default email address" time="0.003" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should not set accounts when there are no accounts" time="0.045" classname="Unit Test - formal statement controller controller initialize"/>
  <testcase name="should not set current account on the scope" time="0.003" classname="Unit Test - formal statement controller controller no accounts"/>
  <testcase name="should not call formal statement" time="0.003" classname="Unit Test - formal statement controller controller no accounts"/>
  <testcase name="should call formal statement service" time="0.003" classname="Unit Test - formal statement controller controller changing an account"/>
  <testcase name="should set formal statement on the scope" time="0.004" classname="Unit Test - formal statement controller controller changing an account"/>
  <testcase name="should set download statement and download url when open download modal" time="0.004" classname="Unit Test - formal statement controller controller download"/>
  <testcase name="should set download statement to undefined when close download modal" time="0.003" classname="Unit Test - formal statement controller controller download"/>
  <testcase name="should set email statement" time="0.002" classname="Unit Test - formal statement controller controller email"/>
  <testcase name="should set email statement to undefined when close email modal" time="0.003" classname="Unit Test - formal statement controller controller email"/>
  <testcase name="should call email formal statement service" time="0.007" classname="Unit Test - formal statement controller controller email"/>
  <testcase name="should set digital id as default email address" time="0.003" classname="Unit Test - formal statement controller controller email"/>
  <testcase name="should set error message on the scope for account list" time="0.003" classname="Unit Test - formal statement controller controller service error view formal statement service"/>
  <testcase name="should set error message on the scope for formal statement" time="0.004" classname="Unit Test - formal statement controller controller service error view formal statement service"/>
  <testcase name="should set error message on the scope for email statement" time="0.003" classname="Unit Test - formal statement controller controller service error email formal statement service"/>
  <testcase name="should filter by the start date" time="0.003" classname="Unit Test - formal statement controller formalStatementFilter"/>
  <testcase name="should filter by the end date" time="0.004" classname="Unit Test - formal statement controller formalStatementFilter"/>
  <testcase name="should resolve with data from service endpoint" time="0.003" classname="Unit Test - Formal Statement view formal statement"/>
  <testcase name="should resolve with undefined from service endpoint when there is not data" time="0.002" classname="Unit Test - Formal Statement view formal statement"/>
  <testcase name="should reject with message from service endpoint when with error in header" time="0.002" classname="Unit Test - Formal Statement view formal statement"/>
  <testcase name="should reject with message for un-authorized error" time="0.002" classname="Unit Test - Formal Statement view formal statement"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.002" classname="Unit Test - Formal Statement view formal statement"/>
  <testcase name="should resolve with data from service endpoint" time="0.006" classname="Unit Test - Formal Statement email formal statement"/>
  <testcase name="should reject with message from service endpoint when with error in header" time="0.002" classname="Unit Test - Formal Statement email formal statement"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.003" classname="Unit Test - Formal Statement email formal statement"/>
  <testcase name="it should scroll to the top" time="0.003" classname="GoToAnchor GoToAnchorController"/>
  <testcase name="should set the beenIdle flag to true when user is idle" time="0.003" classname="idleTimeout event handlers"/>
  <testcase name="should unset the beenIdle flag when user becomes active again" time="0.016" classname="idleTimeout event handlers"/>
  <testcase name="should set the countdown after the idle period has elapsed" time="0.002" classname="idleTimeout event handlers"/>
  <testcase name="should only start monitoring user activity after login" time="0.002" classname="idleTimeout event handlers"/>
  <testcase name="should stop monitoring user activity after logout" time="0.002" classname="idleTimeout event handlers"/>
  <testcase name="should refresh the app when idle warning has elapsed" time="0.029" classname="idleTimeout event handlers"/>
  <testcase name="should renew session whenever keepalive timer elapses" time="0.001" classname="idleTimeout event handlers"/>
  <testcase name="should render modal overlay" time="0.007" classname="idleTimeout idle modal"/>
  <testcase name="should replace the element invoking the directive" time="0.007" classname="idleTimeout idle modal"/>
  <testcase name="should restart the idle watcher when the user chooses to continue banking" time="0.006" classname="idleTimeout idle modal"/>
  <testcase name="refreshes the page" time="0.011" classname="idleTimeout idle modal logout and when logout is called"/>
  <testcase name="document event should reset idle timer when not in warning period" time="0.006" classname="idleTimer idle with a real $window object"/>
  <testcase name="document event should NOT reset idle timer during warning period" time="0.003" classname="idleTimer idle with a real $window object"/>
  <testcase name="activeOn() should update defaults" time="0.005" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="idleDuration() should update defaults" time="0.002" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="idleDuration() should throw if argument is less than or equal to zero." time="0.002" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="warningDuration() should update defaults" time="0.002" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="warningDuration() should throw if argument is less than zero." time="0.002" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="keepalive() should update defaults" time="0.002" classname="idleTimer idle with a fake $window object $idleProvider"/>
  <testcase name="should not change idling state if watch is called again before the idle duration elapses" time="0.001" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="watch() should clear timeouts and start running" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="watch() should not start keepalive if disabled" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="should not stop keepalive when idle if keepalive integration is disabled" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="should not start or ping keepalive when returning from idle if integration is disabled" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="unwatch() should clear timeouts and stop running" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="unwatch() should stop the keepalive" time="0.005" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="should broadcast $idleStart and stop keepalive" time="0.003" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="should broadcast $idleEnd, start keepalive and ping" time="0.002" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="should count down warning and then signal timeout" time="0.003" classname="idleTimer idle with a fake $window object $idle count down"/>
  <testcase name="should continue counting down warning when the device is sleeping/locked" time="0.002" classname="idleTimer idle with a fake $window object $idle count down"/>
  <testcase name="watch() should interrupt countdown" time="0.003" classname="idleTimer idle with a fake $window object $idle"/>
  <testcase name="interval() should update options" time="0.003" classname="idleTimer keepalive $keepaliveProvider"/>
  <testcase name="interval() should throw if nan or less than or equal to 0" time="0.002" classname="idleTimer keepalive $keepaliveProvider"/>
  <testcase name="start() should schedule ping timeout that broadcasts $keepalive event when it expires." time="0.003" classname="idleTimer keepalive $keepalive"/>
  <testcase name="stop() should cancel ping timeout." time="0.004" classname="idleTimer keepalive $keepalive"/>
  <testcase name="ping() should immediately broadcast $keepalive event" time="0.002" classname="idleTimer keepalive $keepalive"/>
  <testcase name="should have controller associated with url" time="0.005" classname="Unit test - Instant Money change pin confirmation"/>
  <testcase name="should have template associated with url" time="0.008" classname="Unit test - Instant Money change pin confirmation"/>
  <testcase name="should have called viewModel" time="0.007" classname="Unit test - Instant Money change pin confirmation When init"/>
  <testcase name="should set the scope vouchers" time="0.006" classname="Unit test - Instant Money change pin confirmation When init"/>
  <testcase name="should go to success page upon success" time="0.004" classname="Unit test - Instant Money change pin confirmation confirm"/>
  <testcase name="should go back to change pin page upon error" time="0.004" classname="Unit test - Instant Money change pin confirmation confirm"/>
  <testcase name="should have controller associated with url" time="0.004" classname="Unit test - Instant Money change pin"/>
  <testcase name="should have template associated with url" time="0.003" classname="Unit test - Instant Money change pin"/>
  <testcase name="should have called flow" time="0.003" classname="Unit test - Instant Money change pin When init"/>
  <testcase name="should have called viewModel" time="0.003" classname="Unit test - Instant Money change pin When init"/>
  <testcase name="should set the scope vouchers" time="0.003" classname="Unit test - Instant Money change pin When init"/>
  <testcase name="should call store values in viewModel" time="0.004" classname="Unit test - Instant Money change pin Next function"/>
  <testcase name="should change a flow" time="0.003" classname="Unit test - Instant Money change pin Next function"/>
  <testcase name="should change location" time="0.003" classname="Unit test - Instant Money change pin Next function"/>
  <testcase name="should have the controller set to InstantMoneyChangePinSuccessController" time="0.003" classname="Unit Test - Change Instant Money Voucher Pin Success routes"/>
  <testcase name="should have the template set to the instant money change pin success template" time="0.034" classname="Unit Test - Change Instant Money Voucher Pin Success routes"/>
  <testcase name="should have called viewModel" time="0.003" classname="Unit Test - Change Instant Money Voucher Pin Success on initialize"/>
  <testcase name="should set the scope vouchers" time="0.003" classname="Unit Test - Change Instant Money Voucher Pin Success on initialize"/>
  <testcase name="should change location to instant money" time="0.003" classname="Unit Test - Change Instant Money Voucher Pin Success backToInstantMoney"/>
  <testcase name="should have the controller set to InstantMoneyConfirmController" time="0.004" classname="Unit Test - Instant Money Confirm routes"/>
  <testcase name="should have the template set to the instant money confirm template" time="0.002" classname="Unit Test - Instant Money Confirm routes"/>
  <testcase name="should have called viewModel" time="0.002" classname="Unit Test - Instant Money Confirm on initialize"/>
  <testcase name="should set the scope vouchers" time="0.002" classname="Unit Test - Instant Money Confirm on initialize"/>
  <testcase name="should set the location path to instant-money/details" time="0.003" classname="Unit Test - Instant Money Confirm on modify"/>
  <testcase name="should call the modify on the view model" time="0.002" classname="Unit Test - Instant Money Confirm on modify"/>
  <testcase name="should call flow previous" time="0.002" classname="Unit Test - Instant Money Confirm on modify"/>
  <testcase name="should call instant money service" time="0.003" classname="Unit Test - Instant Money Confirm on confirm"/>
  <testcase name="should call location" time="0.002" classname="Unit Test - Instant Money Confirm on confirm"/>
  <testcase name="should call flow" time="0.006" classname="Unit Test - Instant Money Confirm on confirm"/>
  <testcase name="should call view model" time="0.003" classname="Unit Test - Instant Money Confirm on confirm"/>
  <testcase name="should call location" time="0.004" classname="Unit Test - Instant Money Confirm when rejected"/>
  <testcase name="should call view model" time="0.004" classname="Unit Test - Instant Money Confirm when rejected"/>
  <testcase name="should call flow previous" time="0.003" classname="Unit Test - Instant Money Confirm when rejected"/>
  <testcase name="should call flow" time="0.002" classname="Unit Test - Instant Money Confirm when there is an error with a message"/>
  <testcase name="should call location" time="0.003" classname="Unit Test - Instant Money Confirm when there is an error with a message"/>
  <testcase name="should call view Model" time="0.002" classname="Unit Test - Instant Money Confirm when there is an error with a message"/>
  <testcase name="should call flow" time="0.002" classname="Unit Test - Instant Money Confirm when there is an error without a message"/>
  <testcase name="should call location" time="0.002" classname="Unit Test - Instant Money Confirm when there is an error without a message"/>
  <testcase name="should call view Model" time="0.002" classname="Unit Test - Instant Money Confirm when there is an error without a message"/>
  <testcase name="should have a controller linked to url" time="0.014" classname="Unit Test - Create Instant Money Controller"/>
  <testcase name="should set the sorter" time="0.005" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should sort by createdDate" time="0.003" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should sort in descending order" time="0.004" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should have the sort arrow icon on the beneficiary name column by default" time="0.008" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should set the clicked column as active" time="0.005" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should set the sort criteria" time="0.005" classname="Unit Test - Create Instant Money Controller sorting"/>
  <testcase name="should call instant money and card service" time="0.004" classname="Unit Test - Create Instant Money Controller when initializing instant money history"/>
  <testcase name="should display notification" time="0.004" classname="Unit Test - Create Instant Money Controller when there are no instant money vouchers"/>
  <testcase name="should filter by date" time="0.004" classname="Unit Test - Create Instant Money Controller uncollectedInstantMoneyFilter"/>
  <testcase name="should filter by cellphone" time="0.004" classname="Unit Test - Create Instant Money Controller uncollectedInstantMoneyFilter"/>
  <testcase name="should filter by voucher number" time="0.003" classname="Unit Test - Create Instant Money Controller uncollectedInstantMoneyFilter"/>
  <testcase name="should filter by from account" time="0.004" classname="Unit Test - Create Instant Money Controller uncollectedInstantMoneyFilter"/>
  <testcase name="should redirect to the change uncollected cash collection PIN page after setting the View Model" time="0.004" classname="Unit Test - Create Instant Money Controller modify"/>
  <testcase name="should set the voucher to be deleted" time="0.004" classname="Unit Test - Create Instant Money Controller when cancelling"/>
  <testcase name="should allow the delete voucher modal to be cancelled" time="0.003" classname="Unit Test - Create Instant Money Controller when cancelling"/>
  <testcase name="should confirm the voucher to be cancelled" time="0.046" classname="Unit Test - Create Instant Money Controller when cancelling"/>
  <testcase name="should set the error to display for an known failure" time="0.004" classname="Unit Test - Create Instant Money Controller when cancelling"/>
  <testcase name="should set the error to display for an unknown failure" time="0.003" classname="Unit Test - Create Instant Money Controller when cancelling"/>
  <testcase name="should have controller associated with url" time="0.006" classname="Unit Test - Instant Money Details"/>
  <testcase name="should have template associated with url" time="0.005" classname="Unit Test - Instant Money Details"/>
  <testcase name="should have called flow" time="0.005" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should init alive accounts" time="0.006" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should not set aliveAccounts if there are no accounts" time="0.004" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should set the voucher to the stored voucher in ViewModel if available" time="0.004" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should default the from account to the first account on the list" time="0.004" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should set error message to undefined when there is no error in viewModel" time="0.004" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should set error message when there is an error" time="0.003" classname="Unit Test - Instant Money Details when init"/>
  <testcase name="should call store values in viewModel" time="0.003" classname="Unit Test - Instant Money Details next"/>
  <testcase name="should change a flow" time="0.004" classname="Unit Test - Instant Money Details next"/>
  <testcase name="should change location" time="0.003" classname="Unit Test - Instant Money Details next"/>
  <testcase name="should show the disclaimer" time="0.003" classname="Unit Test - Instant Money Details Disclaimer"/>
  <testcase name="should hide the disclaimer" time="0.003" classname="Unit Test - Instant Money Details Disclaimer"/>
  <testcase name="should enforce minimum value" time="0.004" classname="Unit Test - Instant Money Details Enforce and hint"/>
  <testcase name="should show the hint from the limit service" time="0.015" classname="Unit Test - Instant Money Details Enforce and hint"/>
  <testcase name="should enforce daily limit" time="0.004" classname="Unit Test - Instant Money Details Enforce and hint"/>
  <testcase name="should set hasInfo and infoMessage if no accounts that have payment functionality are available" time="0.004" classname="Unit Test - Instant Money Details Enforce and hint"/>
  <testcase name="should set to hasZeroEAPLimit to true" time="0.003" classname="Unit Test - Instant Money Details When MonthlyEAP is not set"/>
  <testcase name="should associate controller with url" time="0.003" classname="Unit Test - Instant Money Success Controller routes"/>
  <testcase name="should associate template with url" time="0.002" classname="Unit Test - Instant Money Success Controller routes"/>
  <testcase name="should call view model" time="0.002" classname="Unit Test - Instant Money Success Controller on initialize"/>
  <testcase name="should set voucher" time="0.002" classname="Unit Test - Instant Money Success Controller on initialize"/>
  <testcase name="set success" time="0.002" classname="Unit Test - Instant Money Success Controller on initialize"/>
  <testcase name="should set the current date and time" time="0.002" classname="Unit Test - Instant Money Success Controller on initialize"/>
  <testcase name="should call location with the instant money path" time="0.002" classname="Unit Test - Instant Money Success Controller on backToTransact"/>
  <testcase name="should call location with the instant money details" time="0.002" classname="Unit Test - Instant Money Success Controller on makeAnotherTransfer"/>
  <testcase name="should show the monthly limit" time="0.012" classname="Daily payment limits directive"/>
  <testcase name="should show the correct hint" time="0.003" classname="instantMoneyLimitsSpec"/>
  <testcase name="should show an error if not a multiple of 10" time="0.002" classname="instantMoneyLimitsSpec"/>
  <testcase name="should have a minimum of 50" time="0.002" classname="instantMoneyLimitsSpec"/>
  <testcase name="should have a maximum of 5000" time="0.001" classname="instantMoneyLimitsSpec"/>
  <testcase name="should set error message when amount exceeds available daily limit" time="0.002" classname="instantMoneyLimitsSpec"/>
  <testcase name="should set error message when monthly limit exceeds 25000" time="0.002" classname="instantMoneyLimitsSpec"/>
  <testcase name="should set error message when amount exceeds available monthly limit" time="0.002" classname="instantMoneyLimitsSpec"/>
  <testcase name="should resolve with data from service endpoint" time="0.003" classname="Unit Test - Instant Moola History Service instant money history"/>
  <testcase name="should resolve with undefined from service endpoint when there is not data" time="0.003" classname="Unit Test - Instant Moola History Service instant money history"/>
  <testcase name="should reject with message from service endpoint when with error in header" time="0.046" classname="Unit Test - Instant Moola History Service instant money history"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.003" classname="Unit Test - Instant Moola History Service instant money history"/>
  <testcase name="should resolve with data from service endpoint" time="0.002" classname="Unit Test - Instant Moola History Service send Instant Money"/>
  <testcase name="should reject with message from service endpoint when with error in header and error code is unknown" time="0.002" classname="Unit Test - Instant Moola History Service send Instant Money"/>
  <testcase name="should reject with message from service endpoint when with error in header and error code is known" time="0.002" classname="Unit Test - Instant Moola History Service send Instant Money"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.002" classname="Unit Test - Instant Moola History Service send Instant Money"/>
  <testcase name="should successfully call cancel" time="0.003" classname="Unit Test - Instant Moola History Service cancel Instant Money"/>
  <testcase name="should handle the cancel service returning any failure" time="0.002" classname="Unit Test - Instant Moola History Service cancel Instant Money"/>
  <testcase name="should handle and show a specific message if an incorrect PIN is entered" time="0.003" classname="Unit Test - Instant Moola History Service cancel Instant Money"/>
  <testcase name="should resolve with data from service endpoint" time="0.002" classname="Unit Test - Instant Moola History Service changeInstantMoneyVoucherPin"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.004" classname="Unit Test - Instant Moola History Service changeInstantMoneyVoucherPin"/>
  <testcase name="should load the international payment beneficiary details controller" time="0.002" classname="Unit Test - International Payment Beneficiary Details Controller routes"/>
  <testcase name="should load the international payment beneficiary details template" time="0.002" classname="Unit Test - International Payment Beneficiary Details Controller routes"/>
  <testcase name="should load the international payment controller" time="0.002" classname="Unit Test - International Payment Controller routes"/>
  <testcase name="should load the international payment template" time="0.001" classname="Unit Test - International Payment Controller routes"/>
  <testcase name="should get customer details" time="0.002" classname="Unit Test - International Payment Controller controller when initializing"/>
  <testcase name="should set customerDetails on the InternationalPaymentCustomer" time="0.003" classname="Unit Test - International Payment Controller controller when initializing"/>
  <testcase name="sets the internationalPaymentTermsAndConditions and hideTermsAndConditions on the scope if international payment cookie defined" time="0.002" classname="Unit Test - International Payment Controller controller international payment cookie"/>
  <testcase name="does not set the internationalPaymentTermsAndConditions and hideTermsAndConditions on the scope if international payment cookie is undefined" time="0.025" classname="Unit Test - International Payment Controller controller international payment cookie"/>
  <testcase name="should navigate to international payment details" time="0.003" classname="Unit Test - International Payment Controller controller when get started is clicked"/>
  <testcase name="should create the Flow" time="0.003" classname="Unit Test - International Payment Controller controller when get started is clicked"/>
  <testcase name="should continue to the next step of flow" time="0.003" classname="Unit Test - International Payment Controller controller when get started is clicked"/>
  <testcase name="sets the cookie on the scope if not defined" time="0.003" classname="Unit Test - International Payment Controller controller when get started is clicked international payment cookie"/>
  <testcase name="should load the international payment personal details controller" time="0.003" classname="Unit Test - International Payment Personal Details Controller routes"/>
  <testcase name="should load the international payment personal details template" time="0.002" classname="Unit Test - International Payment Personal Details Controller routes"/>
  <testcase name="should set customerDetails in the scope" time="0.003" classname="Unit Test - International Payment Personal Details Controller controller"/>
  <testcase name="should navigate to international payment beneficiary details" time="0.002" classname="Unit Test - International Payment Personal Details Controller controller when next is clicked"/>
  <testcase name="should continue to the next step of Flow" time="0.002" classname="Unit Test - International Payment Personal Details Controller controller when next is clicked"/>
  <testcase name="should invoke the customer details XBP service" time="0.004" classname="InternationalPaymentService getCustomerDetails"/>
  <testcase name="should resolve with customer details" time="0.007" classname="InternationalPaymentService getCustomerDetails"/>
  <testcase name="should load the international payment update details controller" time="0.004" classname="Unit Test - International Payment Update Details Controller routes"/>
  <testcase name="should load the international payment update details template" time="0.002" classname="Unit Test - International Payment Update Details Controller routes"/>
  <testcase name="should set the beneficiary to empty object" time="0.002" classname="International Payment Beneficiary object when initializing"/>
  <testcase name="should set the customer" time="0.002" classname="International Payment Customer object when initializing"/>
  <testcase name="should return true if the customer is younger than 18" time="0.011" classname="International Payment Customer object when initializing younger than 18"/>
  <testcase name="should return false if the customer is older than 18" time="0.002" classname="International Payment Customer object when initializing younger than 18"/>
  <testcase name="should return false when customer has given all necessary information" time="0.002" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on firstName" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on lastName" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on gender" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on idNumber" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on dateOfBirth" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on contact" time="0.005" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on postalAddressOne" time="0.002" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on postalSuburb" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on postalCity" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on postalProvince" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on postalPostalCode" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on residentialAddressOne" time="0.002" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on residentialSuburb" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on residentialCity" time="0.002" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on residentialProvince" time="0.002" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="should return true when customer is missing information on residentialPostalCode" time="0.001" classname="International Payment Customer object when initializing incompleteFields"/>
  <testcase name="customer with no incomplete information" time="0.031" classname="international payment personal details template"/>
  <testcase name="customer with incomplete information" time="0.023" classname="international payment personal details template"/>
  <testcase name="should not appear on mobile devices" time="0.015" classname="main menu template link to full site"/>
  <testcase name="should be included if there is a card on non-mobile device" time="0.012" classname="main menu template link to full site"/>
  <testcase name="should call displayLinkToFullSiteModal when the link is clicked" time="0.013" classname="main menu template link to full site"/>
  <testcase name="should not appear when there is no card" time="0.015" classname="main menu template send secure message"/>
  <testcase name="should appear when there is a card" time="0.015" classname="main menu template send secure message"/>
  <testcase name="should be active if is in secure message flow" time="0.013" classname="main menu template send secure message"/>
  <testcase name="should add a menu item" time="0.003" classname="Main Menu menu"/>
  <testcase name="should remove a menu item when found by title" time="0.002" classname="Main Menu menu"/>
  <testcase name="should not remove a menu item when not found by title" time="0.003" classname="Main Menu menu"/>
  <testcase name="should hold primary menu items" time="0.029" classname="Main Menu MenuController"/>
  <testcase name="should mark the menu item with the current location as url as active" time="0.003" classname="Main Menu MenuController"/>
  <testcase name="should check the showIf function to see whether the menu item is active" time="0.003" classname="Main Menu MenuController"/>
  <testcase name="should return no class when the menu item is not active" time="0.013" classname="Main Menu MenuController"/>
  <testcase name="displayLinkToFullSiteModal should set displayModal to true" time="0.004" classname="Main Menu MenuController"/>
  <testcase name="cancel should set displayModal to false" time="0.003" classname="Main Menu MenuController"/>
  <testcase name="confirm should call logout" time="0.004" classname="Main Menu MenuController"/>
  <testcase name="confirm should open https://www.encrypt.standardbank.co.za/ using $window" time="0.003" classname="Main Menu MenuController"/>
  <testcase name="shouldDisplayMenu should return true if authenticated" time="0.003" classname="Main Menu MenuController"/>
  <testcase name="should set hasCard to false if there is no card" time="0.004" classname="Main Menu MenuController"/>
  <testcase name="should set hasCard to false if there is no card" time="0.007" classname="Main Menu MenuController"/>
  <testcase name="set displayMenu to true or false" time="0.004" classname="Main Menu MenuController"/>
  <testcase name="should hide the burger menu on the $locationChangeStart event" time="0.004" classname="Main Menu MenuController"/>
  <testcase name="should have multiple dashboards when there is a card selected" time="0.005" classname="Main Menu MenuController has multiple dashboards"/>
  <testcase name="should not have multiple dashboards when there is no card selected" time="0.004" classname="Main Menu MenuController has multiple dashboards"/>
  <testcase name="should not have multiple dashboards when there is only one dashboard" time="0.004" classname="Main Menu MenuController has multiple dashboards"/>
  <testcase name="should make secure message item active if url is /secure-message" time="0.003" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should make secure message item active if url is /secure-message/detail" time="0.003" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should make secure message item active if url is /secure-message/confirm" time="0.003" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should make secure message item active if url is /secure-message/results" time="0.004" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should make secure message item inactive if the path is not belong to its flow" time="0.003" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should make secure message item active if in its flow and on OPT verify page" time="0.003" classname="Main Menu MenuController has multiple dashboards Secure Message"/>
  <testcase name="should create a menu" time="0.004" classname="Main Menu Menu Directive"/>
  <testcase name="should set the error on the scope" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should set the default options and reload to account summary when user has a card" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should set the default options and reload to account origination when user does not have a card" time="0.005" classname="Notification Service Generic popup"/>
  <testcase name="should clear the error on a location change" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should not set the error on a 401 error" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should not set the error on a 403 error" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should not set the error on an otpError" time="0.002" classname="Notification Service Generic popup"/>
  <testcase name="should set the error on the scope" time="0.003" classname="Notification Service Custom popup"/>
  <testcase name="should set options on the scope" time="0.002" classname="Notification Service Custom popup"/>
  <testcase name="should default actions" time="0.002" classname="Notification Service Custom popup"/>
  <testcase name="should clear the error on a location change" time="0.002" classname="Notification Service Custom popup"/>
  <testcase name="should render the info notification markup" time="0.004" classname="Notifications"/>
  <testcase name="should display info message inside notification markup" time="0.003" classname="Notifications"/>
  <testcase name="should have a close button" time="0.003" classname="Notifications close button"/>
  <testcase name="should add closing class when clicked" time="0.004" classname="Notifications close button"/>
  <testcase name="should unset is successful in success message when clicked" time="0.004" classname="Notifications close button"/>
  <testcase name="should unset error message in error message when clicked" time="0.032" classname="Notifications close button"/>
  <testcase name="should unset has info in info message when clicked" time="0.004" classname="Notifications close button"/>
  <testcase name="should unset cancel field on parent scope" time="0.003" classname="Notifications close button"/>
  <testcase name="should render the info notification markup" time="0.003" classname="Notifications info"/>
  <testcase name="should render the error notification markup" time="0.004" classname="Notifications error"/>
  <testcase name="should render the success notification markup" time="0.005" classname="Notifications success"/>
  <testcase name="should show logout button" time="0.011" classname="notifications template generic error"/>
  <testcase name="should show account summary action" time="0.008" classname="notifications template generic error"/>
  <testcase name="should show logout button" time="0.008" classname="notifications template popup"/>
  <testcase name="should not show logout button" time="0.008" classname="notifications template popup"/>
  <testcase name="should show custom actions" time="0.009" classname="notifications template popup"/>
  <testcase name="should show close button" time="0.008" classname="notifications template popup"/>
  <testcase name="should close" time="0.009" classname="notifications template popup"/>
  <testcase name="should use the correct controller " time="0.003" classname="OTP routes when otp is to be entered"/>
  <testcase name="should use the correct template " time="0.003" classname="OTP routes when otp is to be entered"/>
  <testcase name="should call $location.path when originalResponse is undefined on listening to $locationChangeStart" time="0.008" classname="OTP controller initialisation"/>
  <testcase name="should not call $location.path when originalResponse is defined on listening to $locationChangeStart" time="0.003" classname="OTP controller initialisation"/>
  <testcase name="should display masked address to which the OTP was sent to when contact method is SMS" time="0.003" classname="OTP controller initialisation"/>
  <testcase name="should display masked address to which the OTP was sent to when contact method is Email" time="0.003" classname="OTP controller initialisation"/>
  <testcase name="should set the masked address to email if the contact method is Email" time="0.004" classname="OTP controller initialisation"/>
  <testcase name="should display (A verification code has been sent to ***********@address. Check your email inbox and enter the code below.) message when doing email verification" time="0.003" classname="OTP controller initialisation"/>
  <testcase name="should display OTP has been sent to if the response is not defined" time="0.004" classname="OTP controller initialisation"/>
  <testcase name="should resolve the promise when a normal response is received" time="0.004" classname="OTP controller send method"/>
  <testcase name="should set originalResponse and applicationParameterService to undefined when resolve the promise" time="0.004" classname="OTP controller send method"/>
  <testcase name="should display the invalid OTP message when an incorrect OTP is entered" time="0.003" classname="OTP controller send method"/>
  <testcase name="should display the new OTP message when an the incorrect OTP is entered too many times" time="0.004" classname="OTP controller send method"/>
  <testcase name="should display the correct error message when the otp has been locked" time="0.004" classname="OTP controller send method"/>
  <testcase name="should update the step up details and metadata once a new OTP is sent after three wrong attempts" time="0.004" classname="OTP controller send method"/>
  <testcase name="should append to metadata" time="0.004" classname="OTP controller send method"/>
  <testcase name="should reject the promise" time="0.003" classname="OTP controller send method"/>
  <testcase name="should request that the OTP be resent" time="0.033" classname="OTP controller resend method"/>
  <testcase name="should request that the OTP be resent for verification code" time="0.008" classname="OTP controller resend method"/>
  <testcase name="should display that the OTP has been resent when successful" time="0.007" classname="OTP controller resend method"/>
  <testcase name="should display that the verification code has been resent when successful" time="0.006" classname="OTP controller resend method"/>
  <testcase name="should know we have a new correlation key on the original request after a successful OTP resend" time="0.004" classname="OTP controller resend method"/>
  <testcase name="should display that the OTP has NOT been resent when unsuccessful due to a server error" time="0.004" classname="OTP controller resend method"/>
  <testcase name="should display that the OTP has NOT been resent when unsuccessful due to an application error" time="0.004" classname="OTP controller resend method"/>
  <testcase name="should display customer care phone number when OTP service has been deactivated" time="0.004" classname="OTP controller resend method"/>
  <testcase name="should cancel the flow" time="0.004" classname="OTP controller cancel method"/>
  <testcase name="should sign out" time="0.003" classname="OTP controller signout"/>
  <testcase name="should show sign out button when currently flow is not cancelable" time="0.003" classname="OTP controller signout"/>
  <testcase name="should be disabled on initial load" time="0.021" classname="otp template the submit button"/>
  <testcase name="should be disabled when otp text field has invalid value" time="0.023" classname="otp template the submit button"/>
  <testcase name="should be enabled when otp text field has valid value" time="0.024" classname="otp template the submit button"/>
  <testcase name="should use the correct controller " time="0.009" classname="Overview when landing on the overview page"/>
  <testcase name="should use the correct template " time="0.005" classname="Overview when landing on the overview page"/>
  <testcase name="should not automatically load the net income chart" time="0.005" classname="Overview Controller"/>
  <testcase name="should set newly linked card" time="0.004" classname="Overview Controller initialize"/>
  <testcase name="should indicate that data displayed includes activity from the 1st of previous month" time="0.004" classname="Overview Controller initialize"/>
  <testcase name="should have a default welcome greeting" time="0.004" classname="Overview Controller greeting"/>
  <testcase name="should have a newly linked card greeting" time="0.003" classname="Overview Controller greeting"/>
  <testcase name="should call list on accounts service" time="0.032" classname="Overview Controller products family"/>
  <testcase name="should only aggregate product family available" time="0.004" classname="Overview Controller products family"/>
  <testcase name="should show info message without available account" time="0.004" classname="Overview Controller products family"/>
  <testcase name="should have zero as balance when accounts cannot be retrieved" time="0.003" classname="Overview Controller products family"/>
  <testcase name="should display an error when accounts cannot be retrieved" time="0.003" classname="Overview Controller products family"/>
  <testcase name="should navigate to account summary" time="0.003" classname="Overview Controller products family"/>
  <testcase name="should set a scope level meniga profile property" time="0.003" classname="Overview Controller products family Defining a meniga profile"/>
  <testcase name="should set the meniga profile personal finance management id to the value in the user&apos;s card" time="0.003" classname="Overview Controller products family Defining a meniga profile"/>
  <testcase name="should set the meniga profile accounts list to the value returned from accounts service list" time="0.004" classname="Overview Controller products family Defining a meniga profile"/>
  <testcase name="Should set ShowNetIncomeChart to true" time="0.004" classname="Overview Controller Responding to the ShowNetIncomeDoughnutChart event"/>
  <testcase name="should not replace the custom tag when personalFinanceManagement is turned off" time="0.008" classname="Net Income Chart Directive"/>
  <testcase name="should replace the custom tag" time="0.032" classname="Net Income Chart Directive"/>
  <testcase name="should render a div" time="0.045" classname="Net Income Chart Directive"/>
  <testcase name="should have isolated scope with variables set to the values passed to it from the parent scope" time="0.029" classname="Net Income Chart Directive"/>
  <testcase name="Should not show NO transactional upsell links when transactional or credit card accounts are passed into the directive" time="0.035" classname="Net Income Chart Directive initialiseAccountsNetIncome"/>
  <testcase name="should call getAccountsNetIncome on menigaNetIncome service" time="0.014" classname="Net Income Chart Directive initialiseAccountsNetIncome successful with net income data"/>
  <testcase name="should set directive properties based on data" time="0.013" classname="Net Income Chart Directive initialiseAccountsNetIncome successful with net income data"/>
  <testcase name="should emit ShowNetIncomeDoughnutChart event" time="0.015" classname="Net Income Chart Directive initialiseAccountsNetIncome successful with net income data"/>
  <testcase name="should call getAccountsCashflows on menigaNetIncome service" time="0.013" classname="Net Income Chart Directive initialiseAccountsNetIncome successful without net income data"/>
  <testcase name="should set directive properties based on data" time="0.041" classname="Net Income Chart Directive initialiseAccountsNetIncome successful without net income data"/>
  <testcase name="should NOT emit ShowNetIncomeDoughnutChart event" time="0.013" classname="Net Income Chart Directive initialiseAccountsNetIncome successful without net income data"/>
  <testcase name="should set the error message on scope" time="0.015" classname="Net Income Chart Directive initialiseAccountsNetIncome unsuccessful"/>
  <testcase name="should not set directive scope properties based on any data" time="0.021" classname="Net Income Chart Directive initialiseAccountsNetIncome unsuccessful"/>
  <testcase name="should emit ShowNetIncomeDoughnutChart event" time="0.02" classname="Net Income Chart Directive initialiseAccountsNetIncome unsuccessful"/>
  <testcase name="Should show no transactional products panel when no transactional or credit card accounts are passed into the directive" time="0.015" classname="Net Income Chart Directive initialiseAccountsNetIncome No current or credit card accounts"/>
  <testcase name="should emit ShowNetIncomeDoughnutChart event" time="0.014" classname="Net Income Chart Directive initialiseAccountsNetIncome No current or credit card accounts"/>
  <testcase name="should route to account-summary/transactional-cash-out when cash out segment is clicked " time="0.013" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on segment"/>
  <testcase name="should route to account-summary/transactional-cash-in when cash in segment is clicked " time="0.014" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on segment"/>
  <testcase name="should emit a trackButtonClick event when segment is clicked " time="0.013" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on segment"/>
  <testcase name="should route to account-summary/transactional-cash-out when cash out legend item is clicked " time="0.013" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on legend item"/>
  <testcase name="should route to account-summary/transactional-cash-in when cash in legend item is clicked " time="0.013" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on legend item"/>
  <testcase name="should emit a trackButtonClick event when segment is clicked " time="0.058" classname="Net Income Chart Directive click on area in cashflows doughnut chart click on legend item"/>
  <testcase name="should not call $location.path" time="0.013" classname="Net Income Chart Directive click on area in cashflows doughnut chart click canvas area that isn&apos;t a segment"/>
  <testcase name="should call initialiseAccountsNetIncome" time="0.013" classname="Net Income Chart Directive when accounts array is changed"/>
  <testcase name="should populate the main menu when user is authenticated" time="0.003" classname="Overview menu menu"/>
  <testcase name="should not highlight its menu item when it is not active" time="0.004" classname="Overview menu menu"/>
  <testcase name="should activate the menu if the current page is the overview page " time="0.002" classname="Overview menu menu"/>
  <testcase name="should return the correct shade of red for cash out" time="0.001" classname="net income chart colours"/>
  <testcase name="should return the correct shade of red for cash out text" time="0.002" classname="net income chart colours"/>
  <testcase name="should return the correct shade of red for cash out highlight" time="0.001" classname="net income chart colours"/>
  <testcase name="should return the correct shade of red for cash in" time="0.002" classname="net income chart colours"/>
  <testcase name="should return the correct shade of red for cash in text" time="0.001" classname="net income chart colours"/>
  <testcase name="should return the correct shade of red for cash in highlight" time="0.002" classname="net income chart colours"/>
  <testcase name="should return the an array of colours in the correct order for the chart" time="0.001" classname="net income chart colours"/>
  <testcase name="should use the correct controller" time="0.004" classname="single beneficiary payment routes when a beneficiary is to be paid"/>
  <testcase name="should use the correct template" time="0.004" classname="single beneficiary payment routes when a beneficiary is to be paid"/>
  <testcase name="should set Date to current date" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController"/>
  <testcase name="should set isFutureDatedPayment to false" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should set to hasZeroEAPLimit to false when limit is not zero" time="0.022" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should set to hasZeroEAPLimit to true when limit is zero" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should default account to first payment account" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should update account when exist in scope" time="0.025" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should have the flow header as Pay single beneficiary" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should only list accounts that are payable from" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should set hasInfo and infoMessage if no available account exists" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should have the monthly electronic transfer limit" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should have the card profile" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should have the used electronic transfer limit" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should know available transfer limit" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should clean up successful status" time="0.032" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should clear any previous errors" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should display beneficiary details for the selected beneficiary" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should display the payment confirmation details for the selected beneficiary" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized"/>
  <testcase name="should have checking account number to transfer from available" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized when an account is selected"/>
  <testcase name="should have the available balance on the account in the scope" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized when an account is selected"/>
  <testcase name="should pre-populate the recipient name with the beneficiary name for private individuals" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should pre-populate the recipient name with the beneficiary name when confirmation type is None" time="0.011" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should display message notifying user that confirmation type settings are valid for this transaction only" time="0.008" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should set notification message to undefined when reverting to the old confirmation type" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should set notification message when recipient name changes" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should set notification message when option to send payment confirmation changes" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should not pre-populate the recipient name for company beneficiaries" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should not pre-populate the recipient name for company beneficiaries" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should set the email address as the default payment confirmation" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should default the payment confirmation recipient name to the beneficiary name for private beneficiaries" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should not clear payment confirmation fields when confirmation is set to false" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when initialized when the payment confirmation preference changes"/>
  <testcase name="should go back to input screen when modify is clicked" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when modified"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when modified"/>
  <testcase name="should display transaction details for confirmation" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when proceed"/>
  <testcase name="should know the current step is the last step and the other two steps have been completed" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when proceed"/>
  <testcase name="should know the current step is the last step and the other two steps have been completed when success" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should know the current step is the first step when error" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should call the payment service with today&apos;s date and no repeat options when date is latestTimestampFromServer" time="0.054" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should call service with formatted paymentDate when date is not latestTimestampFromServer" time="0.007" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should call the service with the correct beneficiary details when a beneficiary is updated" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should not send payment confirmation details when No option is chosen" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should set the success message on the scope from the service response" time="0.007" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should send payment confirmation details when Yes option is chosen" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm"/>
  <testcase name="should call payBeneficiary function on service with payment date, interval and repeatNumber" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when confirm for recurring payments"/>
  <testcase name="should update the state and flow if the service call succeeds" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm for recurring payments"/>
  <testcase name="should payBeneficiary with http 500 error status" time="0.006" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon failure"/>
  <testcase name="payBeneficiary with http 401 error status" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon failure"/>
  <testcase name="application error" time="0.004" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon failure"/>
  <testcase name="non-0000 response code" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon failure"/>
  <testcase name="should not update the available balance and the monthly limit used when future dated payment" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon success"/>
  <testcase name="should call the payment service" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon success"/>
  <testcase name="should set flag indicating success" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon success"/>
  <testcase name="should move back to beginning of payment flow" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon success"/>
  <testcase name="should return to the list of beneficiaries when transaction is done using location path replace" time="0.005" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon success"/>
  <testcase name="should respond with a success from the service if there is a warning" time="0.009" classname="single beneficiary payment BeneficiaryPaymentController when confirm upon warning"/>
  <testcase name="should use the correct template" time="0.005" classname="ManageScheduledPaymentsController routes managing future scheduled payments"/>
  <testcase name="should use the correct controller" time="0.004" classname="ManageScheduledPaymentsController routes managing future scheduled payments"/>
  <testcase name="should call the viewFutureScheduledPaymentService with the currently logged in card" time="0.004" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should have a confirm delete message" time="0.003" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should have a error delete message" time="0.004" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should mark a scheduled payment for deletion" time="0.003" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should not indicate the current scheduled payment to be deleted" time="0.05" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should not indicate the current scheduled payment to be deleted" time="0.003" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should move the one with future dated id in view model to top and set high light class" time="0.003" classname="ManageScheduledPaymentsController on initialization"/>
  <testcase name="should set the sorter" time="0.003" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should sort by beneficiary name" time="0.002" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should sort in descending order" time="0.003" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should have the sort arrow icon on the beneficiary name column by default" time="0.002" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should set the clicked column as active" time="0.008" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should set the sort criteria" time="0.003" classname="ManageScheduledPaymentsController on initialization sorting"/>
  <testcase name="should false when there are scheduled payments" time="0.004" classname="ManageScheduledPaymentsController on initialization no scheduled payments"/>
  <testcase name="should true when there are no scheduled payments" time="0.003" classname="ManageScheduledPaymentsController on initialization no scheduled payments"/>
  <testcase name="should delete the scheduled payment when a successful response is sent" time="0.005" classname="ManageScheduledPaymentsController on delete"/>
  <testcase name="should not delete the scheduled payment when a error response is sent" time="0.004" classname="ManageScheduledPaymentsController on delete"/>
  <testcase name="should not delete the scheduled payment when the promise is rejected from the service call" time="0.003" classname="ManageScheduledPaymentsController on delete"/>
  <testcase name="should redirect to the modify scheduled payment page after setting the View Model" time="0.003" classname="ManageScheduledPaymentsController modify"/>
  <testcase name="should filter" time="0.004" classname="ManageScheduledPaymentsController scheduledPaymentFilter"/>
  <testcase name="should get scheduled payment from view model" time="0.003" classname="modify scheduled payment confirm controller initial"/>
  <testcase name="should get amount from view model" time="0.003" classname="modify scheduled payment confirm controller initial"/>
  <testcase name="should get payment detail from view model" time="0.003" classname="modify scheduled payment confirm controller initial"/>
  <testcase name="should get beneficiary from view model" time="0.003" classname="modify scheduled payment confirm controller initial"/>
  <testcase name="should be &apos;First payment date&apos; if is recurring payment" time="0.003" classname="modify scheduled payment confirm payment date label"/>
  <testcase name="should be &apos;Payment date&apos; if is not recurring payment" time="0.003" classname="modify scheduled payment confirm payment date label"/>
  <testcase name="should be constructed with interval information" time="0.002" classname="modify scheduled payment confirm repeat payment description"/>
  <testcase name="should set from application parameter" time="0.003" classname="modify scheduled payment confirm latest timestamp from server"/>
  <testcase name="should modify view model with scope values" time="0.002" classname="modify scheduled payment confirm modify"/>
  <testcase name="should flow has been returned to previous step" time="0.003" classname="modify scheduled payment confirm modify"/>
  <testcase name="should change location path to modify page" time="0.002" classname="modify scheduled payment confirm modify"/>
  <testcase name="should amend with http 500 error status" time="0.004" classname="modify scheduled payment confirm confirm modify upon failure"/>
  <testcase name="amend scheduled payment with http 401 error status" time="0.003" classname="modify scheduled payment confirm confirm modify upon failure"/>
  <testcase name="should call the scheduled payment service" time="0.003" classname="modify scheduled payment confirm confirm modify upon success"/>
  <testcase name="should return to the list of scheduled payments by going history -1 with modified future dated id in view model" time="0.003" classname="modify scheduled payment confirm confirm modify upon success"/>
  <testcase name="should be false" time="0.008" classname="modify scheduled payment details is recurring payment when repeat interval is single"/>
  <testcase name="should be true" time="0.005" classname="modify scheduled payment details is recurring payment when repeat interval is daily"/>
  <testcase name="should set from application parameter" time="0.004" classname="modify scheduled payment details latest timestamp from server"/>
  <testcase name="should check amount is greater than 0" time="0.003" classname="modify scheduled payment details enforcer"/>
  <testcase name="should check amount is most two decimal places" time="0.003" classname="modify scheduled payment details enforcer"/>
  <testcase name="should modify view model with scope values" time="0.004" classname="modify scheduled payment details controller proceed"/>
  <testcase name="should re-locate to confirm page" time="0.003" classname="modify scheduled payment details controller proceed"/>
  <testcase name="should initial with service if is not in model" time="0.003" classname="modify scheduled payment details beneficiary"/>
  <testcase name="should not change the value from view model" time="0.002" classname="modify scheduled payment details beneficiary"/>
  <testcase name="should put error message on the scope" time="0.048" classname="modify scheduled payment details on error message"/>
  <testcase name="should use the correct controller" time="0.004" classname="OnceOffPaymentController routes when a beneficiary is to be paid once off"/>
  <testcase name="should use the correct template" time="0.007" classname="OnceOffPaymentController routes when a beneficiary is to be paid once off"/>
  <testcase name="should set to hasZeroEAPLimit to false when limit is not zero" time="0.006" classname="OnceOffPaymentController for onceoff payment"/>
  <testcase name="should set payment confirmation to the previous value when there is an error" time="0.005" classname="OnceOffPaymentController for onceoff payment"/>
  <testcase name="should set payment confirmation to the previous value when there is an error" time="0.004" classname="OnceOffPaymentController for onceoff payment"/>
  <testcase name="should ensure the original listed beneficiary is selected when adding a listed beneficiary flow has an error" time="0.003" classname="OnceOffPaymentController for onceoff payment"/>
  <testcase name="should call BranchLazyLoadingService.bankUpdate" time="0.004" classname="OnceOffPaymentController for onceoff payment watch beneficiary_bank"/>
  <testcase name="should set payment confirmation to true by default" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should load the CDI onto the scope with the label function available so that the typeahead widget works" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should not retrieve branches because of lazy loading" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should ensure no listed beneficiary is selected when add flow is started" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should set the listed beneficiary when it exists in the flow parameters" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should set to hasZeroEAPLimit to false when limit is not zero" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should have the flow header as pay once off private beneficiary" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should create a flow" time="0.003" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should clear error notifications if listed beneficiary changes" time="0.003" classname="OnceOffPaymentController for onceoff payment initial controller when initialized"/>
  <testcase name="should not clear error notifications when listed beneficiary does not change" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should clear error notifications when listed beneficiary changes twice" time="0.008" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should know if a listed beneficiary is being added" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should know if a private beneficiary is being added" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should set hasInfo and infoMessage if no accounts that have payment functionality are available" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should load the payment flow parameter when it exists and there is an error" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller initial"/>
  <testcase name="should default to the first account" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when previously selected account is undefined"/>
  <testcase name="should default to the previously selected account" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller when account has been previously selected when account is defined"/>
  <testcase name="should default to the first account" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when account has been previously selected when account is reset"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have checking account number to transfer from available" time="0.05" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have the available balance on the account in the scope" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have the monthly electronic transfer limit" time="0.003" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have the card profile" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have the used electronic transfer limit" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should know available transfer limit" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should clean up successful status" time="0.007" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should clear any previous errors" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should have a new beneficiary when no flow parameter has been set" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should not reset flow parameters" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when the URL changes to the OTP URL"/>
  <testcase name="should reset the payment flow parameters" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller when the URL changes to any other URL"/>
  <testcase name="should retrieve a list of banks and label them" time="0.007" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should not retrieve branches because of lazy loading" time="0.007" classname="OnceOffPaymentController for onceoff payment initial controller"/>
  <testcase name="should return the branches for the selected bank" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller selectedBankBranches"/>
  <testcase name="should return an empty list for undefined" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller selectedBankBranches"/>
  <testcase name="should set the email address as the default payment confirmation" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller toggle payment confirmation when making once off payment"/>
  <testcase name="should default the payment confirmation recipient name to the beneficiary name for private beneficiaries" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller toggle payment confirmation when making once off payment"/>
  <testcase name="should not default the payment confirmation recipient name to the beneficiary name for company beneficiaries" time="0.003" classname="OnceOffPaymentController for onceoff payment initial controller toggle payment confirmation when making once off payment"/>
  <testcase name="should not clear payment confirmation fields when confirmation is set to false" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller toggle payment confirmation when making once off payment"/>
  <testcase name="should update the recipient name for payment confirmation" time="0.003" classname="OnceOffPaymentController for onceoff payment initial controller when the beneficiary name is edited when paymentConfirmation is true"/>
  <testcase name="should not update the recipient name when it already has a value" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when the beneficiary name is edited when paymentConfirmation is true"/>
  <testcase name="should update the recipient name when its value is the same as the old beneficiary name" time="0.008" classname="OnceOffPaymentController for onceoff payment initial controller when the beneficiary name is edited when paymentConfirmation is true"/>
  <testcase name="should not update the recipient name for listed beneficiaries" time="0.005" classname="OnceOffPaymentController for onceoff payment initial controller when the beneficiary name is edited when paymentConfirmation is true"/>
  <testcase name="should not update the recipient name for payment confirmation" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when the beneficiary name is edited when paymentConfirmation is false"/>
  <testcase name="should display transaction details for confirmation" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when proceed"/>
  <testcase name="should know the current step is the last step and the other two steps have been completed" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when proceed"/>
  <testcase name="should not send the payment notification details when user chooses the NO option" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when proceed"/>
  <testcase name="should send the payment notification details when user chooses the YES option" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when proceed"/>
  <testcase name="should send the save as beneficiary when user chooses YES option" time="0.004" classname="OnceOffPaymentController for onceoff payment initial controller when proceed"/>
  <testcase name="should use the correct controller" time="0.033" classname="OnceOffPaymentConfirmController routes when a beneficiary is to be paid once off"/>
  <testcase name="should use the correct template" time="0.004" classname="OnceOffPaymentConfirmController routes when a beneficiary is to be paid once off"/>
  <testcase name="should navigate to success page" time="0.005" classname="OnceOffPaymentConfirmController confirm save beneficiary when adding beneficiary succeeds when paying beneficiary succeeds"/>
  <testcase name="should go back to details with error message" time="0.004" classname="OnceOffPaymentConfirmController confirm save beneficiary when adding beneficiary succeeds when paying beneficiary fails"/>
  <testcase name="should not make the payment and go back to details page with error message" time="0.004" classname="OnceOffPaymentConfirmController confirm save beneficiary when adding beneficiary fails"/>
  <testcase name="should know the current step is the last step and the other two steps have been completed when success" time="0.004" classname="OnceOffPaymentConfirmController confirm"/>
  <testcase name="should respond with a success from the service if there is a warning" time="0.005" classname="OnceOffPaymentConfirmController confirm"/>
  <testcase name="should know the current step is the first step when error" time="0.004" classname="OnceOffPaymentConfirmController confirm"/>
  <testcase name="http error status" time="0.004" classname="OnceOffPaymentConfirmController confirm upon failure"/>
  <testcase name="application error" time="0.003" classname="OnceOffPaymentConfirmController confirm upon failure"/>
  <testcase name="non-0000 response code" time="0.003" classname="OnceOffPaymentConfirmController confirm upon failure"/>
  <testcase name="should set the previous payment confirmation state on the scope when there is an error and yes option was selected" time="0.003" classname="OnceOffPaymentConfirmController confirm upon failure"/>
  <testcase name="should set the previous payment confirmation state on the scope when there is an error and no option was selected" time="0.004" classname="OnceOffPaymentConfirmController confirm upon failure"/>
  <testcase name="should transform the beneficiary into a listed beneficiary once off payment request" time="0.003" classname="OnceOffPaymentConfirmController confirm once off payment of a listed beneficiary"/>
  <testcase name="should know if a listed beneficiary is being added" time="0.003" classname="OnceOffPaymentConfirmController is private or listed beneficiary"/>
  <testcase name="should know if a private beneficiary is being added" time="0.02" classname="OnceOffPaymentConfirmController is private or listed beneficiary"/>
  <testcase name="should determine if a transaction has a payment confirmation" time="0.004" classname="OnceOffPaymentConfirmController transaction has payment confirmation"/>
  <testcase name="should know the flow steps and state of the steps with the first step as current" time="0.004" classname="OnceOffPaymentConfirmController modify"/>
  <testcase name="when location change to otp url" time="0.004" classname="OnceOffPaymentConfirmController location change start listener should not reset flow parameters"/>
  <testcase name="when location change to modify url" time="0.003" classname="OnceOffPaymentConfirmController location change start listener should not reset flow parameters"/>
  <testcase name="should reset the flow parameters when location change is something other than pay once off and otp verify" time="0.004" classname="OnceOffPaymentConfirmController location change start listener"/>
  <testcase name="should load the payment flow parameter when it exists and the state is  &quot;done&quot; " time="0.005" classname="OnceOffPaymentSuccessController upon success"/>
  <testcase name="should set Date to current date" time="0.004" classname="OnceOffPaymentSuccessController upon success"/>
  <testcase name="should know if a listed beneficiary is being added" time="0.003" classname="OnceOffPaymentSuccessController upon success default controller state"/>
  <testcase name="should know if a private beneficiary is being added" time="0.004" classname="OnceOffPaymentSuccessController upon success default controller state"/>
  <testcase name="should determine if a transaction has a payment confirmation" time="0.003" classname="OnceOffPaymentSuccessController upon success default controller state"/>
  <testcase name="should update the available balance and the monthly limit used" time="0.004" classname="OnceOffPaymentSuccessController upon success default controller state"/>
  <testcase name="should return to the transaction dashboard when transaction is done" time="0.004" classname="OnceOffPaymentSuccessController upon success default controller state"/>
  <testcase name="should update the location when called with groupName" time="0.007" classname="Beneficiaries PayBeneficiaryGroupController next"/>
  <testcase name="should be true" time="0.005" classname="Beneficiaries PayBeneficiaryGroupController groupOnly"/>
  <testcase name="should direct to results page with group name" time="0.005" classname="Beneficiaries PayBeneficiaryGroupController on confirm"/>
  <testcase name="should call beneficiary filter and return the list of beneficiaries in the group" time="0.006" classname="Beneficiaries PayBeneficiaryGroupController beneficiary list"/>
  <testcase name="should update the location when called" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController next"/>
  <testcase name="should delegate to confirm method with results path" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController on confirm"/>
  <testcase name="should return empty and display no beneficiaries message when beneficiaries is undefined" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should display all beneficiaries when there is no query filter" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should filter beneficiaries by query" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should filter beneficiaries by query and keep beneficiaries with non-zero amount" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should keep beneficiaries with amounts and display no-match message when query does not match" time="0.034" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should return empty and display a message when there are no matches for search criteria" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should return empty and display a message when there are no beneficiaries linked to a profile" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should order beneficiaries and place those with amounts at the end of the list" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should not order beneficiaries when query is empty" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should not order beneficiaries when query is undefined" time="0.005" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should not be able to edit the beneficiary reference field for a listed beneficiary" time="0.004" classname="Beneficiaries PayMultipleBeneficiariesController beneficiary list"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;paymentDate&quot;,&quot;query&quot;:&quot;ay&quot;,&quot;matchingText&quot;:&quot;2014-05-24T22:00:00.000+0000&quot;}" time="0.004" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;amount&quot;,&quot;query&quot;:&quot;12&quot;,&quot;matchingText&quot;:12}" time="0.003" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;beneficiaryName&quot;,&quot;query&quot;:&quot;911&quot;,&quot;matchingText&quot;:&quot;911 TRUCK RENTALS&quot;}" time="0.002" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;beneficiaryReference&quot;,&quot;query&quot;:&quot;ST&quot;,&quot;matchingText&quot;:&quot;TEST&quot;}" time="0.002" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;paymentConfirmationMethod&quot;,&quot;query&quot;:&quot;Emai&quot;,&quot;matchingText&quot;:&quot;Email&quot;}" time="0.003" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;recipientName&quot;,&quot;query&quot;:&quot;We&quot;,&quot;matchingText&quot;:&quot;Wen&quot;}" time="0.003" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should filter payments for a given search criteria: {&quot;field&quot;:&quot;sentTo&quot;,&quot;query&quot;:&quot;.za&quot;,&quot;matchingText&quot;:&quot;Www@qwy.co.za&quot;}" time="0.002" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should match all when search criteria is undefined" time="0.002" classname="ViewPaymentNotificationHistory payment notification filter"/>
  <testcase name="should use the correct controller" time="0.003" classname="ViewPaymentNotificationHistory routes when viewing payment confirmation history"/>
  <testcase name="should use the correct template" time="0.007" classname="ViewPaymentNotificationHistory routes when viewing payment confirmation history"/>
  <testcase name="should display a warning message" time="0.005" classname="ViewPaymentNotificationHistory when initialized valid account number with pay from feature with more than 100 payment history items"/>
  <testcase name="should only list accounts with the pay from feature" time="0.005" classname="ViewPaymentNotificationHistory when initialized valid account number with pay from feature"/>
  <testcase name="should retrieve a formatted data set for the payment confirmation history" time="0.004" classname="ViewPaymentNotificationHistory when initialized valid account number with pay from feature"/>
  <testcase name="should change account being viewed upon changing select box" time="0.003" classname="ViewPaymentNotificationHistory when initialized valid account number with pay from feature"/>
  <testcase name="should clear selectedHistory in scope" time="0.003" classname="ViewPaymentNotificationHistory when initialized valid account number with pay from feature"/>
  <testcase name="should not set list of payment confirmation history" time="0.004" classname="ViewPaymentNotificationHistory when initialized filtering when list of payments is undefined"/>
  <testcase name="should handle a service error" time="0.004" classname="ViewPaymentNotificationHistory when initialized when an error occurs"/>
  <testcase name="should handle an unexpected error" time="0.004" classname="ViewPaymentNotificationHistory when initialized when an error occurs"/>
  <testcase name="default to first account" time="0.004" classname="ViewPaymentNotificationHistory when initialized with invalid account number"/>
  <testcase name="default to first account" time="0.003" classname="ViewPaymentNotificationHistory when initialized with no account number"/>
  <testcase name="should mark resend notification" time="0.007" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should indicate the current notification is ready be a send" time="0.054" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should not indicate the current notification is ready be a send" time="0.003" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should resend confirmation" time="0.003" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should not send confirmation" time="0.003" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should not resend the notification payment when the promise is rejected from the service call" time="0.003" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should contain cost in action message" time="0.003" classname="ViewPaymentNotificationHistory when initialized Resend confirmation"/>
  <testcase name="should clear payment related data when exiting the multiple payment flow" time="0.005" classname="Beneficiaries BaseMultipleBeneficiaries on location change"/>
  <testcase name="should not clear payment related data when within the multiple payment flow" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on location change"/>
  <testcase name="should clear payment related data when exiting the group payment flow" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on location change"/>
  <testcase name="should not clear payment related data when within the group payment flow" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on location change"/>
  <testcase name="should tell the notification preferences modal that we are in the pay multiple beneficiaries flow" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries"/>
  <testcase name="should set details id" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries"/>
  <testcase name="should return true if show details id is correct" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries"/>
  <testcase name="should know if a result is for a payment to a company beneficiary" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries isCompanyBeneficiary"/>
  <testcase name="should return false if the payment result is undefined" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries isCompanyBeneficiary"/>
  <testcase name="should call window.print" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on print receipt"/>
  <testcase name="should set the selected transaction to the matching transaction" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on print receipt"/>
  <testcase name="should set the selected transaction to the undefined after the timeout" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on print receipt"/>
  <testcase name="should set the current beneficiary as the one being changed when there is a preference previously selected" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences"/>
  <testcase name="should set the current beneficiary as the one being changed when there is no preference previously selected" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences"/>
  <testcase name="should clear beneficiary being edited" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences"/>
  <testcase name="should cancel edit modal window" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences"/>
  <testcase name="should set the email address as the default payment confirmation if beneficiary has no confirmation type" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences toggle payment confirmation when editing"/>
  <testcase name="should clear the fields when payment confirmation is set to false" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences toggle payment confirmation when editing"/>
  <testcase name="should not default option to Email if a notification is selected" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences toggle payment confirmation when editing"/>
  <testcase name="should clear the fields when payment confirmation is set to None" time="0.007" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences toggle payment confirmation when editing"/>
  <testcase name="should set payment confirmation recipient name for a private beneficiary" time="0.052" classname="Beneficiaries BaseMultipleBeneficiaries when editing payment notification preferences toggle payment confirmation when editing"/>
  <testcase name="should keep changes on beneficiaries" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on modify"/>
  <testcase name="should have empty query" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should have beneficiaries list" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should only list accounts that are payable from" time="0.007" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should have an empty amounts hash" time="0.005" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should set account limits on the scope" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should set the total amount to zero by default" time="0.005" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should set the defaults for print scope vars" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on initialization"/>
  <testcase name="should be true when invalidAvailableBalance is true" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries invalid"/>
  <testcase name="should be true when invalidAvailableBalance is true" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries invalid"/>
  <testcase name="should be false when valid" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries invalid"/>
  <testcase name="should set hasInfo and infoMessage if no available account exists" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries invalid no account"/>
  <testcase name="should update selected payment beneficiaries" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change"/>
  <testcase name="should update the total amount" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change"/>
  <testcase name="should remove amount when empty string" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change"/>
  <testcase name="should not remove amount when it is not empty string" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change"/>
  <testcase name="should set invalidAvailableTransferLimit when total amount is bigger than availableEAPLimit" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change validation on total amount"/>
  <testcase name="should unset invalidAvailableBalance when total amount is bigger than availableEAPLimit" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on amount change validation on total amount"/>
  <testcase name="should set invalidAvailableBalance when total amount is bigger than availableBalance" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on amount change validation on total amount"/>
  <testcase name="should not set invalidAvailableBalance when no account" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on amount change validation on total amount"/>
  <testcase name="should unset invalidAvailableBalance when total amount is bigger than availableBalance" time="0.008" classname="Beneficiaries BaseMultipleBeneficiaries on amount change validation on total amount"/>
  <testcase name="should populate the selectedPayments scope variable" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmation summary"/>
  <testcase name="should populate the current account" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmation summary"/>
  <testcase name="should set account limits on the scope" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmation summary"/>
  <testcase name="should get the total amount form the service" time="0.034" classname="Beneficiaries BaseMultipleBeneficiaries on confirmation summary"/>
  <testcase name="should update selected payment beneficiaries" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on account change"/>
  <testcase name="should call pay on model" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on confirmAndRedirectTo"/>
  <testcase name="sets the &quot;canDelay&quot; flag on the application parameters" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmAndRedirectTo"/>
  <testcase name="should call confirm on model" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmAndRedirectTo"/>
  <testcase name="should direct the provided path" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on confirmAndRedirectTo"/>
  <testcase name="should set account limits on the scope" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on confirmAndRedirectTo"/>
  <testcase name="should fetch paymentResults" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on results"/>
  <testcase name="should clear all payment related data" time="0.004" classname="Beneficiaries BaseMultipleBeneficiaries on results"/>
  <testcase name="should set account limits on the scope" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on results"/>
  <testcase name="should get the total amount form the service" time="0.003" classname="Beneficiaries BaseMultipleBeneficiaries on results"/>
  <testcase name="should invoke the payment service with the specified amount, beneficiary and account" time="0.006" classname="Beneficiary Payment Service when making a payment now"/>
  <testcase name="should know to make a payment now if the payment date is on the same day as today" time="0.004" classname="Beneficiary Payment Service when making a payment now"/>
  <testcase name="should respond with a success message when the service call is successful" time="0.005" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should respond with a success message when the service call is successful and there is a warning message" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should return a meaningful success message on success" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should indicate that the payment affects account balances immediately" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should pass on message from paymentService rejection (and clear accounts service)" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should reject when paymentService returns a non-success transactionResult" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should resolve when paymentService returns a success response code for the first transactionResult" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should resolve when paymentService returns a success response type for the first transactionResult" time="0.004" classname="Beneficiary Payment Service when making a payment now when a response is received from the service"/>
  <testcase name="should invoke the payment service with the future payment date" time="0.004" classname="Beneficiary Payment Service when making a future dated payment"/>
  <testcase name="should return a meaningful success message on success" time="0.004" classname="Beneficiary Payment Service when making a future dated payment"/>
  <testcase name="should indicate that the payment does not affect account balances immediately" time="0.004" classname="Beneficiary Payment Service when making a future dated payment"/>
  <testcase name="should invoke the payment service with the payment date, interval and number of repeats" time="0.004" classname="Beneficiary Payment Service when making a future dated payment when making a repeat payment"/>
  <testcase name="should return a meaningful success message on success" time="0.005" classname="Beneficiary Payment Service when making a future dated payment when making a repeat payment"/>
  <testcase name="should indicate that the payment does not affect account balances immediately" time="0.062" classname="Beneficiary Payment Service when making a future dated payment when making a repeat payment"/>
  <testcase name="should call the service with the bank name" time="0.003" classname="Branch Laze Loading Service watch beneficiary_bank"/>
  <testcase name="should set the branch label" time="0.003" classname="Branch Laze Loading Service watch beneficiary_bank"/>
  <testcase name="should set the branch to undefined if the new bank code is not equal to the old bank code" time="0.002" classname="Branch Laze Loading Service watch beneficiary_bank"/>
  <testcase name="should invoke the payment service and clear related caches" time="0.004" classname="Multiple Payments Service"/>
  <testcase name="should add beneficiary when amount is more than zero" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should not allow duplicates in selected payments" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should not add beneficiary when amount is equal or less than zero" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should remove a beneficiary when the amount changes to zero" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return amounts " time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return empty hash when amounts is undefined " time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return empty payment service data when no payments were added" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return payment results on confirm" time="0.004" classname="Multiple Payments Service"/>
  <testcase name="should set success notification when one of the payments has a warning on confirmation" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return message on unknow code results on confirm" time="0.003" classname="Multiple Payments Service"/>
  <testcase name="should return payment service data" time="0.008" classname="Multiple Payments Service"/>
  <testcase name="should reset selected payments" time="0.006" classname="Multiple Payments Service"/>
  <testcase name="should have a default value for get from account" time="0.005" classname="Multiple Payments Service"/>
  <testcase name="should update From account" time="0.004" classname="Multiple Payments Service"/>
  <testcase name="should update the amount total" time="0.004" classname="Multiple Payments Service"/>
  <testcase name="should have zero as a value for the amount total" time="0.004" classname="Multiple Payments Service"/>
  <testcase name="should invoke the payment service and respond with a success" time="0.004" classname="Once Off Payment Services"/>
  <testcase name="should invoke the payment service and respond with a success" time="0.003" classname="Once Off Payment Services"/>
  <testcase name="should reject when paymentService returns a non-success response code and response type for the first transactionResult" time="0.003" classname="Once Off Payment Services"/>
  <testcase name="should resolve when paymentService returns a success response code for the first transactionResult" time="0.003" classname="Once Off Payment Services"/>
  <testcase name="should resolve when paymentService returns a success response type for the first transactionResult" time="0.004" classname="Once Off Payment Services"/>
  <testcase name="should have a global key when one is pushed" time="0.002" classname="Payment services PaymentFlowParameters"/>
  <testcase name="should know how to get the second key when two variables have been pushed" time="0.003" classname="Payment services PaymentFlowParameters"/>
  <testcase name="should understand amount may be valid" time="0.002" classname="PaymentLimitsService #enforce available balance"/>
  <testcase name="should understand an amount may not exceed the available balance on the account" time="0.002" classname="PaymentLimitsService #enforce available balance"/>
  <testcase name="should understand an amount may exceed the available balance if it is scheduled after the current month" time="0.006" classname="PaymentLimitsService #enforce available balance"/>
  <testcase name="should understand the amount may not exceed five million rand" time="0.003" classname="PaymentLimitsService #enforce maximum amount"/>
  <testcase name="should understand the amount may not exceed the available EAP limit" time="0.002" classname="PaymentLimitsService #enforce available monthly limit"/>
  <testcase name="should understand an amount may exceed the monthly limit if it is scheduled after the current month" time="0.002" classname="PaymentLimitsService #enforce available monthly limit"/>
  <testcase name="should understand an amount may exceed the monthly limit if it is scheduled within the current month" time="0.002" classname="PaymentLimitsService #enforce available monthly limit"/>
  <testcase name="should understand without an account it is valid" time="0.002" classname="PaymentLimitsService #enforce available monthly limit"/>
  <testcase name="should contain the account and transactions provided to the payload then get the response" time="0.004" classname="Payment Service"/>
  <testcase name="should contain preferred name in the keyValueMetadata" time="0.005" classname="Payment Service"/>
  <testcase name="should invoke the payment service and respond with an error" time="0.003" classname="Payment Service"/>
  <testcase name="should invoke the payment service and respond with account number invalid error" time="0.004" classname="Payment Service"/>
  <testcase name="should return an undefined error message on a 500 response" time="0.004" classname="Payment Service"/>
  <testcase name="should return the generic otp locked error message when otp locked error occurs" time="0.004" classname="Payment Service"/>
  <testcase name="should resolve with success" time="0.002" classname="Unit test - Resend confirmation service  Resend confirmation"/>
  <testcase name="should resolve with an error" time="0.003" classname="Unit test - Resend confirmation service  Resend confirmation"/>
  <testcase name="should resolve with error and message when service is unavailable" time="0.016" classname="Unit test - Resend confirmation service  Resend confirmation"/>
  <testcase name="should invoke the view future beneficiary payments service" time="0.006" classname="scheduled beneficiary payments list scheduled beneficiary payments"/>
  <testcase name="should invoke the delete service with valid parameters" time="0.005" classname="scheduled beneficiary payments delete scheduled payments"/>
  <testcase name="should invoke the delete service with invalid parameters" time="0.004" classname="scheduled beneficiary payments delete scheduled payments"/>
  <testcase name="should have an error when the http request is not resolved" time="0.03" classname="scheduled beneficiary payments delete scheduled payments"/>
  <testcase name="should invoke the amend service with valid parameters" time="0.004" classname="scheduled beneficiary payments amend scheduled payments"/>
  <testcase name="should retrieve payment confirmation history" time="0.004" classname="ViewPaymentNotificationHistoryService"/>
  <testcase name="should add a warning message when the service responds with a warning" time="0.003" classname="ViewPaymentNotificationHistoryService"/>
  <testcase name="should reject response if there is an application error" time="0.002" classname="ViewPaymentNotificationHistoryService"/>
  <testcase name="should reject response if there is a server error with message" time="0.003" classname="ViewPaymentNotificationHistoryService"/>
  <testcase name="should reject response if there is a server error" time="0.002" classname="ViewPaymentNotificationHistoryService"/>
  <testcase name="should display last payment date" time="0.011" classname="display payment detail template tests when display payment detail which is recurring"/>
  <testcase name="should get the repeat description from the payment detail" time="0.01" classname="display payment detail template tests when display payment detail which is recurring"/>
  <testcase name="should hide last payment date" time="0.011" classname="display payment detail template tests when display payment detail which is not recurring"/>
  <testcase name="should hide the repeat description" time="0.01" classname="display payment detail template tests when display payment detail which is not recurring"/>
  <testcase name="should display from payment date label" time="0.01" classname="display payment detail template tests when display payment detail"/>
  <testcase name="should display from payment date" time="0.011" classname="display payment detail template tests when display payment detail"/>
  <testcase name="should get the amount" time="0.01" classname="display payment detail template tests when display payment detail"/>
  <testcase name="should not display account number, bank, branch" time="0.011" classname="display payment detail template tests when pay company account"/>
  <testcase name="should display account number, bank, branch" time="0.011" classname="display payment detail template tests when pay private account"/>
  <testcase name="should be based on scope value" time="0.011" classname="modify scheduled payment details template beneficiary name"/>
  <testcase name="should be based on scope value" time="0.042" classname="modify scheduled payment details template beneficiary reference"/>
  <testcase name="should be based on scope value" time="0.01" classname="modify scheduled payment details template your reference"/>
  <testcase name="should contain label payment date and have date value in span" time="0.018" classname="modify scheduled payment details template payment date for single payments"/>
  <testcase name="should not contain label first payment date" time="0.011" classname="modify scheduled payment details template payment date for single payments"/>
  <testcase name="should contain label first payment date and have date value in span" time="0.01" classname="modify scheduled payment details template payment date for recurring payments"/>
  <testcase name="should not contain label payment date" time="0.01" classname="modify scheduled payment details template payment date for recurring payments"/>
  <testcase name="should not be in the document" time="0.01" classname="modify scheduled payment details template frequency for single payments"/>
  <testcase name="should be based on payment details for multiple" time="0.011" classname="modify scheduled payment details template frequency for recurring payments"/>
  <testcase name="should be based on payment details for 1 repeat" time="0.01" classname="modify scheduled payment details template frequency for recurring payments"/>
  <testcase name="should not be in the document" time="0.009" classname="modify scheduled payment details template final payment date for single payments"/>
  <testcase name="should be based on payment details" time="0.012" classname="modify scheduled payment details template final payment date for recurring payments"/>
  <testcase name="should display error message when set on the scope" time="0.01" classname="modify scheduled payment details template error message"/>
  <testcase name="should not display the successMessage by default" time="0.132" classname="single beneficiary payment template"/>
  <testcase name="should display the successMessage from the scope if isSuccessful is true" time="0.096" classname="single beneficiary payment template"/>
  <testcase name="should not display last payment date" time="0.152" classname="single beneficiary payment template on the reviewing/result page when not making a recurring payment"/>
  <testcase name="should not display repeat payment description" time="0.153" classname="single beneficiary payment template on the reviewing/result page when not making a recurring payment"/>
  <testcase name="should not allow special characters" time="0.098" classname="single beneficiary payment template when editing references my reference"/>
  <testcase name="should be required" time="0.205" classname="single beneficiary payment template when editing references my reference"/>
  <testcase name="should be shorter than 12 characters" time="0.218" classname="single beneficiary payment template when editing references my reference"/>
  <testcase name="should not allow special characters" time="0.159" classname="single beneficiary payment template when editing references beneficiary reference"/>
  <testcase name="should be required" time="0.198" classname="single beneficiary payment template when editing references beneficiary reference"/>
  <testcase name="should be shorter than 12 characters" time="0.156" classname="single beneficiary payment template when editing references beneficiary reference"/>
  <testcase name="should show arrow icon on payment date and beneficiary name column header" time="0.027" classname="Unit Test - View Payment Notification History Template when loaded"/>
  <testcase name="should show empty message" time="0.073" classname="Unit Test - View Payment Notification History Template when payment Notification History is empty"/>
  <testcase name="should hide empty message" time="0.032" classname="Unit Test - View Payment Notification History Template when payment Notification History is not empty"/>
  <testcase name="should active arrow in payment date header when sort by payment date" time="0.027" classname="Unit Test - View Payment Notification History Template when payment Notification History is not empty"/>
  <testcase name="should active arrow in beneficiary name header when sort by beneficiary name" time="0.029" classname="Unit Test - View Payment Notification History Template when payment Notification History is not empty"/>
  <testcase name="should call getAccountsNetIncome endpoint with given current and credit card account&apos;s numbers and types" time="0.007" classname="Meniga Net Income Service getAccountsNetIncome"/>
  <testcase name="should return the response upon success" time="0.005" classname="Meniga Net Income Service getAccountsNetIncome"/>
  <testcase name="should return a generic rejection upon generic failure" time="0.005" classname="Meniga Net Income Service getAccountsNetIncome"/>
  <testcase name="should return a specific rejection upon specific failure" time="0.006" classname="Meniga Net Income Service getAccountsNetIncome"/>
  <testcase name="should return a generic rejection upon server failure" time="0.005" classname="Meniga Net Income Service getAccountsNetIncome"/>
  <testcase name="should call getAccountsCashflows endpoint with given current and credit card account&apos;s" time="0.006" classname="Meniga Net Income Service getAccountsCashflows"/>
  <testcase name="should return the response upon success" time="0.005" classname="Meniga Net Income Service getAccountsCashflows"/>
  <testcase name="should return a generic rejection upon generic failure" time="0.004" classname="Meniga Net Income Service getAccountsCashflows"/>
  <testcase name="should return a specific rejection upon specific failure" time="0.005" classname="Meniga Net Income Service getAccountsCashflows"/>
  <testcase name="should return a generic rejection upon server failure" time="0.005" classname="Meniga Net Income Service getAccountsCashflows"/>
  <testcase name="should go to the results page upon success" time="0.005" classname="RechargeConfirmController"/>
  <testcase name="should store the updated daily withdrawal limit" time="0.011" classname="RechargeConfirmController"/>
  <testcase name="should store the updated available balance for the current account" time="0.007" classname="RechargeConfirmController"/>
  <testcase name="should store electricity transaction metadata" time="0.006" classname="RechargeConfirmController"/>
  <testcase name="should go back to input page and set error" time="0.007" classname="RechargeConfirmController"/>
  <testcase name="should go the previous flow step" time="0.005" classname="RechargeConfirmController when modifying"/>
  <testcase name="should go back to the list page when cancel is clicked" time="0.004" classname="RechargeConfirmController when cancelling "/>
  <testcase name="should get the list of providers from the RechargeService" time="0.005" classname="Recharge Dashboard Controller"/>
  <testcase name="should display a different info message if no available account exists" time="0.009" classname="RechargeDetailsController providers"/>
  <testcase name="should know list of available providers" time="0.006" classname="RechargeDetailsController providers"/>
  <testcase name="should know the provider that is selected" time="0.006" classname="RechargeDetailsController providers"/>
  <testcase name="should redirect back to dashboard screen if provider is unknown" time="0.006" classname="RechargeDetailsController providers"/>
  <testcase name="should redirect to the corresponding url when the provider changes" time="0.006" classname="RechargeDetailsController providers"/>
  <testcase name="should not throw an error when the value passed to the watch on provider is undefined" time="0.007" classname="RechargeDetailsController providers"/>
  <testcase name="should not reload providers if they were on the ViewModel already" time="0.006" classname="RechargeDetailsController providers"/>
  <testcase name="should get providers from the recharge service if it has no providers" time="0.059" classname="RechargeDetailsController providers"/>
  <testcase name="should default bundle to the first one in the list of bundles for that product" time="0.011" classname="RechargeDetailsController products when a product is selected"/>
  <testcase name="should not default bundle when there are no bundles for the product" time="0.01" classname="RechargeDetailsController products when a product is selected"/>
  <testcase name="should not default bundle to the first one in the list when bundle already has a value" time="0.006" classname="RechargeDetailsController products when a product is selected"/>
  <testcase name="should not throw an error when the value passed to the watch is undefined" time="0.006" classname="RechargeDetailsController products when a product is selected"/>
  <testcase name="should know the available bundles based on selected provider and product" time="0.006" classname="RechargeDetailsController products"/>
  <testcase name="should default to the first product" time="0.006" classname="RechargeDetailsController products"/>
  <testcase name="should not call the account service if it had already been called" time="0.006" classname="RechargeDetailsController accounts"/>
  <testcase name="should call the account service for accounts if it has not already been called" time="0.006" classname="RechargeDetailsController accounts"/>
  <testcase name="should set the daily withdrawal limit from the card profile" time="0.006" classname="RechargeDetailsController accounts"/>
  <testcase name="should create flow" time="0.007" classname="RechargeDetailsController navigation"/>
  <testcase name="should go back to the list page when cancel is clicked" time="0.005" classname="RechargeDetailsController when cancelling"/>
  <testcase name="should change the location and set productCode on prepaidPurchase to undefined" time="0.006" classname="RechargeDetailsController when proceeding"/>
  <testcase name="should store the view model" time="0.006" classname="RechargeDetailsController when proceeding"/>
  <testcase name="should go to the next flow step" time="0.006" classname="RechargeDetailsController when proceeding"/>
  <testcase name="should validate against ranges when the available balance changes" time="0.013" classname="RechargeDetailsController enforcer"/>
  <testcase name="should not enforce limits when provider is not available" time="0.007" classname="RechargeDetailsController enforcer"/>
  <testcase name="should not enforce limits when product is not available" time="0.006" classname="RechargeDetailsController enforcer"/>
  <testcase name="should know that the amount is invalid when it exceeds the available balance" time="0.006" classname="RechargeDetailsController amount validation when the selected product has bundles"/>
  <testcase name="should know that the amount is valid when it does not exceed the available balance" time="0.007" classname="RechargeDetailsController amount validation when the selected product has bundles"/>
  <testcase name="should know that the amount is invalid when it exceeds the daily withdrawal limit" time="0.006" classname="RechargeDetailsController amount validation when the selected product has bundles"/>
  <testcase name="should know that the amount is valid when it does not exceed the daily withdrawal limit" time="0.007" classname="RechargeDetailsController amount validation when the selected product has bundles"/>
  <testcase name="should know that the amount is invalid when it exceeds the available balance" time="0.007" classname="RechargeDetailsController amount validation when the selected product has no bundles"/>
  <testcase name="should know that the amount is valid when it does not exceed the available balance" time="0.006" classname="RechargeDetailsController amount validation when the selected product has no bundles"/>
  <testcase name="should know that the amount is invalid when it exceeds the daily withdrawal limit" time="0.006" classname="RechargeDetailsController amount validation when the selected product has no bundles"/>
  <testcase name="should know that the amount is valid when it does not exceed the daily withdrawal limit" time="0.007" classname="RechargeDetailsController amount validation when the selected product has no bundles"/>
  <testcase name="should not show info message for mtn" time="0.006" classname="RechargeDetailsController amount validation info message for provider"/>
  <testcase name="should show info message for electricity" time="0.008" classname="RechargeDetailsController amount validation info message for provider"/>
  <testcase name="amountExceedsDailyWithdrawalLimit should not throw an error" time="0.061" classname="RechargeDetailsController amount validation when no provider has been populated"/>
  <testcase name="amountExceedsDailyWithdrawalLimit should not throw an error" time="0.008" classname="RechargeDetailsController amount validation when no provider has been populated"/>
  <testcase name="amountExceedsDailyWithdrawalLimit should not throw an error" time="0.014" classname="RechargeDetailsController amount validation when no product has been populated"/>
  <testcase name="amountExceedsDailyWithdrawalLimit should not throw an error" time="0.009" classname="RechargeDetailsController amount validation when no product has been populated"/>
  <testcase name="should display recharge operation result" time="0.005" classname="RechargeResultsController"/>
  <testcase name="should be successful" time="0.004" classname="RechargeResultsController"/>
  <testcase name="should redirect you to the recharge page with the same provider" time="0.005" classname="RechargeResultsController when asking to make another recharge"/>
  <testcase name="should use the correct controller " time="0.008" classname="Prepaid History Controller routes when prepaid history is viewed"/>
  <testcase name="should use the correct template " time="0.006" classname="Prepaid History Controller routes when prepaid history is viewed"/>
  <testcase name="should have no transactions in information message" time="0.006" classname="Prepaid History Controller PrepaidHistoryController when there are no transactions"/>
  <testcase name="should set printInvoiceNumber to undefined" time="0.006" classname="Prepaid History Controller PrepaidHistoryController when there are no transactions"/>
  <testcase name="should display generic error message" time="0.005" classname="Prepaid History Controller PrepaidHistoryController when there are service errors"/>
  <testcase name="should have information message as undefined" time="0.005" classname="Prepaid History Controller PrepaidHistoryController when there are transactions"/>
  <testcase name="should have a list of transactions" time="0.029" classname="Prepaid History Controller PrepaidHistoryController when there are transactions"/>
  <testcase name="should have mapped transactions" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions"/>
  <testcase name="should set the printInvoiceNumber to undefined" time="0.004" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printHistory"/>
  <testcase name="should set printHasInvoiceTransactionType to true for a transaction with a value for rechargeType" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printHistory"/>
  <testcase name="should call window.print" time="0.004" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printHistory"/>
  <testcase name="should set the selectedTransaction to the given line item" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printReceipt"/>
  <testcase name="should set printHasInvoiceTransactionType to true for a transaction with a value for rechargeType" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printReceipt"/>
  <testcase name="should set printHasInvoiceTransactionType to false for a transaction without a value for rechargeType" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printReceipt"/>
  <testcase name="should call window.print" time="0.003" classname="Prepaid History Controller PrepaidHistoryController when there are transactions printReceipt"/>
  <testcase name="should create request with a card number" time="0.002" classname="Prepaid History Request"/>
  <testcase name="should create a 30 days history request" time="0.004" classname="Prepaid History Request"/>
  <testcase name="should create request with a new card number when changed dashboard" time="0.004" classname="Prepaid History Request"/>
  <testcase name="should resolve the response upon success" time="0.007" classname="Prepaid History Service"/>
  <testcase name="should reject response if there is no data with correct message" time="0.005" classname="Prepaid History Service"/>
  <testcase name="should reject response if there is an application error" time="0.03" classname="Prepaid History Service"/>
  <testcase name="should set error message when amount exceeds available daily limit" time="0.003" classname="RechargeLimitsService"/>
  <testcase name="should not set error message when the card profile has not yet been set (i.e promise resolved)" time="0.004" classname="RechargeLimitsService"/>
  <testcase name="should not set error message when amount exceeds available daily limit" time="0.002" classname="RechargeLimitsService"/>
  <testcase name="should set error message when amount exceeds available balance" time="0.004" classname="RechargeLimitsService"/>
  <testcase name="should set an error message if the recharge amount is not within allowable range for the provider" time="0.003" classname="RechargeLimitsService"/>
  <testcase name="should get the amount from the products bundle if there is a bundle" time="0.003" classname="RechargeLimitsService"/>
  <testcase name="should not validate that the amount is in rands only for products with bundles" time="0.003" classname="RechargeLimitsService"/>
  <testcase name="should group products by type" time="0.05" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should resolve the product name by type" time="0.012" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should identify provider type" time="0.012" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should resolve range by product type" time="0.015" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should order products" time="0.063" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should return the same number of products after sorting them" time="0.012" classname="Recharge Service when listing providers provider details products"/>
  <testcase name="should sort bundles by amount" time="0.011" classname="Recharge Service when listing providers provider details bundles"/>
  <testcase name="should remove bundles from the Airtime product" time="0.011" classname="Recharge Service when listing providers provider details bundles"/>
  <testcase name="should group by bundle type" time="0.013" classname="Recharge Service when listing providers provider details bundles"/>
  <testcase name="should return a name to be displayed to the users" time="0.015" classname="Recharge Service when listing providers provider details"/>
  <testcase name="should return an identifier to be used by the controller" time="0.015" classname="Recharge Service when listing providers provider details"/>
  <testcase name="should add the prepaidProviderType as the serviceId of each provider" time="0.016" classname="Recharge Service when listing providers provider details"/>
  <testcase name="should cache the provider list forever" time="0.014" classname="Recharge Service when listing providers"/>
  <testcase name="should return an error message if the service call returns an error code" time="0.012" classname="Recharge Service when listing providers"/>
  <testcase name="should return an error message if the service call fails" time="0.011" classname="Recharge Service when listing providers"/>
  <testcase name="should set account" time="0.008" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set recharge number" time="0.008" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set prepaid type" time="0.008" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set prepaid provider type" time="0.008" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set amount from recharge.provider.product.amount for a product without bundles" time="0.007" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set amount from the bundle for a product with bundles" time="0.007" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set product code to undefined for product without bundles" time="0.007" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should set product code for product with bundles" time="0.009" classname="Recharge Service when recharging when generating the request"/>
  <testcase name="should resolve with the data contained in the response from the service" time="0.098" classname="Recharge Service when recharging when the service returns a successful response"/>
  <testcase name="should resolve with the data contained in the response from the service" time="0.015" classname="Recharge Service when recharging when the new service returns a successful response "/>
  <testcase name="should return an error when there is a service failure while recharging" time="0.009" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 9999" time="0.095" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 2160" time="0.007" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 9018" time="0.008" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 2170" time="0.315" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 2190" time="0.005" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 9104" time="0.004" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 9019" time="0.003" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 2180" time="0.004" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the corresponding error when recharge operation fails with code 2016" time="0.003" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should return the generic otp locked error message when otp locked error occurs" time="0.004" classname="Recharge Service when recharging when an error is returned from the service"/>
  <testcase name="should use the correct controller " time="0.005" classname="InternetBankingSubNavController when landing on the security settings view"/>
  <testcase name="should use the correct template " time="0.003" classname="InternetBankingSubNavController when landing on the security settings view"/>
  <testcase name="should set the menuItems list " time="0.004" classname="InternetBankingSubNavController when loading menuItems"/>
  <testcase name="the values should be returned from ViewOTPPreferenceService" time="0.005" classname="InternetBankingSubNavController When loading view otp preference details"/>
  <testcase name="the values should be returned from ViewOTPPreferenceService" time="0.005" classname="InternetBankingSubNavController When loading view otp preference details"/>
  <testcase name="should not have opt preference" time="0.004" classname="InternetBankingSubNavController When loading view otp preference details"/>
  <testcase name="should set error on scope if service has error" time="0.005" classname="InternetBankingSubNavController When loading view otp preference details"/>
  <testcase name="should use the correct controller " time="0.003" classname="account preferences routes when landing on the accounts preferences view"/>
  <testcase name="should use the correct template " time="0.003" classname="account preferences routes when landing on the accounts preferences view"/>
  <testcase name="should set the menuItems list " time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set the account details on the scope" time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should call the statement service to get the formal preferences" time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set the scopes delivery method to the users email if the user profile has it set email" time="0.002" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set the scopes delivery method to postal address if the user profile has it set postal" time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should show the empty notification if there is no preferences" time="0.002" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set error on scope if service has error" time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set account details on error" time="0.002" classname="account preferences AccountPreferencesController"/>
  <testcase name="should call the profilesAndSettingsMenu service to set the menu" time="0.003" classname="account preferences AccountPreferencesController"/>
  <testcase name="should set the statement preference when editing" time="0.007" classname="account preferences AccountPreferencesController edit"/>
  <testcase name="should change location when editing" time="0.004" classname="account preferences AccountPreferencesController edit"/>
  <testcase name="should use the correct controller" time="0.005" classname="Dashboards routes"/>
  <testcase name="should use the correct template" time="0.004" classname="Dashboards routes"/>
  <testcase name="should set the menuItems list " time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should get a list of dashboards" time="0.005" classname="Dashboards CardStatus"/>
  <testcase name="should return card numbers for profiles that do not have cards" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should show blank column when card is not the current dashboard" time="0.005" classname="Dashboards CardStatus"/>
  <testcase name="should return error message if no suitable status can be determined" time="0.039" classname="Dashboards CardStatus"/>
  <testcase name="should return active for an active card" time="0.003" classname="Dashboards CardStatus"/>
  <testcase name="should return Blocked when the card error code is 2003" time="0.003" classname="Dashboards CardStatus"/>
  <testcase name="should return Blocked when the card error code is 2004" time="0.003" classname="Dashboards CardStatus"/>
  <testcase name="should return Blocked when the card error code is 7509" time="0.003" classname="Dashboards CardStatus"/>
  <testcase name="should return Blocked when the card error code is 7510" time="0.003" classname="Dashboards CardStatus"/>
  <testcase name="should return Blocked when the card error code is 7513" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7506" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7516" time="0.007" classname="Dashboards CardStatus"/>
  <testcase name="should return Activate OTP when the card error code is 7501" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should return Activate internet banking when the card error code is 7515" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should return error message if there is no card, status or card error" time="0.004" classname="Dashboards CardStatus"/>
  <testcase name="should return an error class for a blocked card" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return an error class for a blocked card" time="0.003" classname="Dashboards card status class"/>
  <testcase name="should return an error class for a blocked card" time="0.003" classname="Dashboards card status class"/>
  <testcase name="should return an error class for a blocked card" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return an error class for a blocked card" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return a success class for an active card" time="0.003" classname="Dashboards card status class"/>
  <testcase name="should return a activate class for a card that requires Activation" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return a activate class for a card that requires Activation" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return a activate class for a card that requires Activation" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return a activate class for a card that requires Activation" time="0.003" classname="Dashboards card status class"/>
  <testcase name="should return an error class for a blocked card" time="0.004" classname="Dashboards card status class"/>
  <testcase name="should return Active status for profiles that have cards" time="0.004" classname="Dashboards Active cards"/>
  <testcase name="should indicate which dashboard the user is currently logged in with" time="0.003" classname="Dashboards Active cards"/>
  <testcase name="should return card numbers for profiles that have cards" time="0.003" classname="Dashboards Active cards"/>
  <testcase name="should return a masked card number if the server has returned a 9 digit card number, meaning that its actually an 18 digit card number but the server has truncated it" time="0.031" classname="Dashboards Active cards"/>
  <testcase name="should return the current active dashboard" time="0.005" classname="Dashboards Active cards"/>
  <testcase name="should set the additionalLinkedCardNumber scope variable from the application parameter" time="0.005" classname="Dashboards Active cards"/>
  <testcase name="should sort dashboard list when an additional card is linked" time="0.004" classname="Dashboards Active cards"/>
  <testcase name="should set highlight class only on the additional linked card row" time="0.004" classname="Dashboards Active cards"/>
  <testcase name="should call switch dashboard" time="0.003" classname="Dashboards Switch Dashboard"/>
  <testcase name="should not call switch dashboard when the dashboard is blocked" time="0.003" classname="Dashboards Switch Dashboard"/>
  <testcase name="should use the correct controller " time="0.003" classname="account preferences routes when landing on the edit accounts preferences view"/>
  <testcase name="should use the correct template " time="0.003" classname="account preferences routes when landing on the edit accounts preferences view"/>
  <testcase name="should set the menuItems list " time="0.004" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should call the AccountPreferencesService service to set the formal statement preferences" time="0.003" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should set the account details" time="0.003" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should set the delivery method to postal if no email address exists " time="0.003" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should set the delivery method to email if email address exists " time="0.003" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should set the current email address when the email address exists and the delivery method is email" time="0.004" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should set the delivery address to email if email address exists " time="0.007" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should create instance of flow" time="0.004" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should hide the text box if the delivery method is postal and show it if its email" time="0.003" classname="account preferences EditAccountPreferencesController"/>
  <testcase name="should clean out the AccountPreferenceService" time="0.003" classname="account preferences EditAccountPreferencesController cancel"/>
  <testcase name="should go back to the accounts preferences page" time="0.003" classname="account preferences EditAccountPreferencesController cancel"/>
  <testcase name="should save the account preference and go back to account-preferences" time="0.002" classname="account preferences EditAccountPreferencesController save"/>
  <testcase name="should set an error message in the scope if there was an error" time="0.003" classname="account preferences EditAccountPreferencesController save"/>
  <testcase name="should have flow" time="0.005" classname="MaintainMonthlyEAPLimitController controller"/>
  <testcase name="should set the menuItems list " time="0.004" classname="MaintainMonthlyEAPLimitController controller"/>
  <testcase name="should set success message from view model" time="0.004" classname="MaintainMonthlyEAPLimitController controller"/>
  <testcase name="should set the error message if the view model has an error" time="0.005" classname="MaintainMonthlyEAPLimitController controller"/>
  <testcase name="should know when to enforce the available balance" time="0.004" classname="MaintainMonthlyEAPLimitController enforcer"/>
  <testcase name="should set the newEAPLimit be empty" time="0.004" classname="MaintainMonthlyEAPLimitController cancel"/>
  <testcase name="should hide the form" time="0.004" classname="MaintainMonthlyEAPLimitController cancel"/>
  <testcase name="should show the form" time="0.005" classname="MaintainMonthlyEAPLimitController edit"/>
  <testcase name="should clear the accounts service cache" time="0.041" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should clear the newEAPLimit field" time="0.004" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should hide the form" time="0.004" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should remove error messages" time="0.005" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should update the limits to the new values" time="0.007" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should update the cardProfile after limit increase" time="0.004" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should go to maintain EAP limit with success message" time="0.003" classname="MaintainMonthlyEAPLimitController save on success"/>
  <testcase name="should not set viewModel on decreasing (decreasing does not have OTP, therefore location path never changes)" time="0.005" classname="MaintainMonthlyEAPLimitController save on success no OTP"/>
  <testcase name="should re-create flow" time="0.003" classname="MaintainMonthlyEAPLimitController save on success no OTP"/>
  <testcase name="should add a Error on the backend " time="0.004" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should add an error message when new limit exceeds existing limit" time="0.003" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should add an error message when new limit same as current limit" time="0.003" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should add an error message when new limit less than zero" time="0.004" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should add an error message when temporary limit exists" time="0.003" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should redirect the page to /monthly-payment-limit if there is an otp error" time="0.004" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should set the ViewModel error to serviceError" time="0.008" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should remove the success message" time="0.006" classname="MaintainMonthlyEAPLimitController save on failure"/>
  <testcase name="should set info message when below used eap limit" time="0.005" classname="MaintainMonthlyEAPLimitController save validations"/>
  <testcase name="should set info message when below used eap limit with float" time="0.005" classname="MaintainMonthlyEAPLimitController save validations"/>
  <testcase name="should not set info message when not below EAP limit" time="0.004" classname="MaintainMonthlyEAPLimitController save validations"/>
  <testcase name="should contain a list of sub navigation items" time="0.009" classname="profileAndSettingsSubNav controller"/>
  <testcase name="should return the current location" time="0.003" classname="profileAndSettingsSubNav controller"/>
  <testcase name="should get a list of current/credit/homeLoan accounts" time="0.004" classname="profileAndSettingsSubNav controller"/>
  <testcase name="should compile the template" time="0.006" classname="profileAndSettingsSubNavDirective directive"/>
  <testcase name="should contain a list of sub navigation items" time="0.003" classname="securitySettingsSubNav securitySettingsController"/>
  <testcase name="should return the current location" time="0.002" classname="securitySettingsSubNav securitySettingsController"/>
  <testcase name="should compile the template" time="0.005" classname="securitySettingsSubNav"/>
  <testcase name="should add a statement preference" time="0.002" classname="Paramters adding statement preference"/>
  <testcase name="should clear the service" time="0.001" classname="Paramters adding statement preference"/>
  <testcase name="should not exceed the max EAP limit of R 500 000" time="0.001" classname="EAPLimitValidations #enforce available monthly limit"/>
  <testcase name="should not be 0" time="0.036" classname="EAPLimitValidations #enforce available monthly limit"/>
  <testcase name="should be valid number" time="0.002" classname="EAPLimitValidations #enforce available monthly limit"/>
  <testcase name="should not be the same as EAP limit" time="0.001" classname="EAPLimitValidations #enforce available monthly limit"/>
  <testcase name="should not be the same as EAP limit" time="0.001" classname="EAPLimitValidations #enforce available monthly limit"/>
  <testcase name="should return a successful promise on valid input" time="0.003" classname="LimitMaintenanceService maintain"/>
  <testcase name="should return a rejected promise on invalid request" time="0.003" classname="LimitMaintenanceService maintain"/>
  <testcase name="should link card to profile for newly created digital id" time="0.007" classname="link card to profile"/>
  <testcase name="should not link card to profile for newly created digital id" time="0.009" classname="link card to profile when error"/>
  <testcase name="should not redirect or push error message when url is not changed" time="0.006" classname="link card to profile when error"/>
  <testcase name="should redirect and push error message when url is changed" time="0.004" classname="link card to profile when error"/>
  <testcase name="should sign out" time="0.005" classname="link card to profile"/>
  <testcase name="should set isSuccessful to true when initialize scope" time="0.004" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should set isSuccessful to application parameter when initialize scope" time="0.005" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should have flows of verify otp if linking card" time="0.004" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should add the title to the scope if linking card" time="0.005" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should go back" time="0.005" classname="link card to profile"/>
  <testcase name="should have flows of verify otp if linking card" time="0.004" classname="link card to profile"/>
  <testcase name="should add the title to the scope if linking card" time="0.004" classname="link card to profile"/>
  <testcase name="should not cancel otp if linking card" time="0.004" classname="link card to profile"/>
  <testcase name="should have flows of verify otp if adding dashboard" time="0.004" classname="link card to profile adding dashboard"/>
  <testcase name="should not cancel otp if adding dashboard" time="0.004" classname="link card to profile adding dashboard"/>
  <testcase name="should add the title to the scope if adding dashboard" time="0.004" classname="link card to profile adding dashboard"/>
  <testcase name="should unset error message" time="0.004" classname="link card to profile"/>
  <testcase name="should have error message displayed if there is an error from otp verify and the message exists" time="0.004" classname="link card to profile"/>
  <testcase name="should set the linkCard message when an application parameter exists" time="0.008" classname="link card to profile"/>
  <testcase name="should set the success message when coming in from login" time="0.005" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should set the success message when coming in from register" time="0.004" classname="link card to profile with newRegisteredPage off"/>
  <testcase name="should set has no linked card to true when user has no dashboard" time="0.005" classname="link card to profile has linked cards"/>
  <testcase name="should set has linked card to false when user has dashboard" time="0.052" classname="link card to profile has linked cards"/>
  <testcase name="should know a card may not be linked because a network timeout occurred" time="0.005" classname="link card to profile redirects to the first page in the flow when an error occurred"/>
  <testcase name="should know a card may not be linked because a network timeout occurred with newRegisteredPage feature off" time="0.004" classname="link card to profile redirects to the first page in the flow when an error occurred"/>
  <testcase name="should push is successful to application parameter" time="0.004" classname="link card to profile watch is successful when newRegisteredPage is off"/>
  <testcase name="should set up the correct route and template url" time="0.002" classname="new registered customer"/>
  <testcase name="should default use old Internet banking site to No" time="0.001" classname="new registered customer with toggle new registered page on"/>
  <testcase name="should set newRegistered from applicationParameters" time="0.001" classname="new registered customer with toggle new registered page off"/>
  <testcase name="should read preferredName from DigitalId" time="0.002" classname="new registered customer with toggle new registered page off"/>
  <testcase name="should load the correct controller" time="0.008" classname="Unit Test - Registration routes"/>
  <testcase name="should load the correct template" time="0.004" classname="Unit Test - Registration routes"/>
  <testcase name="should indicate that the route can be accessed without authentication" time="0.004" classname="Unit Test - Registration routes"/>
  <testcase name="should clear the search parameters" time="0.008" classname="Unit Test - Registration controller given lithium register"/>
  <testcase name="should call flow.next when creating a digital id" time="0.007" classname="Unit Test - Registration controller given lithium register"/>
  <testcase name="should indicates that the customer is registering" time="0.007" classname="Unit Test - Registration controller given lithium register"/>
  <testcase name="should set $scope.isSuccessful to false" time="0.007" classname="Unit Test - Registration controller given lithium register when creating a digital id fails"/>
  <testcase name="should set the error message to Glory to God" time="0.007" classname="Unit Test - Registration controller given lithium register when creating a digital id fails"/>
  <testcase name="should call flow.previous also" time="0.006" classname="Unit Test - Registration controller given lithium register when creating a digital id fails"/>
  <testcase name="it should call Flow.cancel()" time="0.007" classname="Unit Test - Registration controller when cancel is called"/>
  <testcase name="should default to editing true on load" time="0.007" classname="Unit Test - Registration controller"/>
  <testcase name="should have the correct flow when registering and the enhancedRegisterPage feature is enabled" time="0.006" classname="Unit Test - Registration controller"/>
  <testcase name="should have the correct flow when registering and the enhancedRegisterPage feature is disabled" time="0.007" classname="Unit Test - Registration controller"/>
  <testcase name="should have no error message displayed if there is no error from otp verify and the message does not exists" time="0.015" classname="Unit Test - Registration controller"/>
  <testcase name="should set up the correct route and template url" time="0.011" classname="MigrationController Routes"/>
  <testcase name="should use the correct controller " time="0.007" classname="MigrationController Routes"/>
  <testcase name="should redirect new customers to link card page" time="0.006" classname="MigrationController with link card"/>
  <testcase name="should not redirect any other customer to link card page" time="0.009" classname="MigrationController with link card"/>
  <testcase name="should create flow" time="0.006" classname="MigrationController"/>
  <testcase name="should have error message when an error has occurred" time="0.008" classname="MigrationController"/>
  <testcase name="should pop error message form application parameters" time="0.042" classname="MigrationController"/>
  <testcase name="should sign out" time="0.006" classname="MigrationController"/>
  <testcase name="should go back" time="0.006" classname="MigrationController"/>
  <testcase name="should call the service with the correct arguments" time="0.006" classname="MigrationController on migration success"/>
  <testcase name="should call the next flow" time="0.006" classname="MigrationController on migration success"/>
  <testcase name="should call the service and redirect to switch dashboard" time="0.006" classname="MigrationController on migration success"/>
  <testcase name="should call the previous flow" time="0.005" classname="MigrationController on migration failures"/>
  <testcase name="should show error message when service fails" time="0.005" classname="MigrationController on migration failures"/>
  <testcase name="should redirect to migrate page" time="0.006" classname="MigrationController on migration failures"/>
  <testcase name="should set has error to true" time="0.006" classname="MigrationController on migration failures"/>
  <testcase name="should push error message to the application parameters" time="0.006" classname="MigrationController on migration failures"/>
  <testcase name="should show generic OTP locked message" time="0.011" classname="MigrationController on migration failures"/>
  <testcase name="should set the success message when coming in from login" time="0.008" classname="MigrationController on migration from register with newRegisteredPage off"/>
  <testcase name="should set where it succeeded or not " time="0.006" classname="MigrationController on migration from register with newRegisteredPage off"/>
  <testcase name="should create flow with title &quot;Link Card&quot;" time="0.007" classname="MigrationController on migration from register with newRegisteredPage off"/>
  <testcase name="should migrate card to profile for newly created digital id" time="0.007" classname="MigrationController migrate card to profile"/>
  <testcase name="should migrate card to profile for newly created digital id when newRegisteredPage is off" time="0.007" classname="MigrationController migrate card to profile"/>
  <testcase name="should use the correct controller " time="0.004" classname="Registration routes when registration is to be viewed"/>
  <testcase name="should use the correct template " time="0.004" classname="Registration routes when registration is to be viewed"/>
  <testcase name="should use the correct controller " time="0.004" classname="Registration routes when link card is to be viewed"/>
  <testcase name="should use the correct template " time="0.003" classname="Registration routes when link card is to be viewed"/>
  <testcase name="should know when in registering process" time="0.008" classname="RegistrationService create digital id"/>
  <testcase name="should invoke the create digital id service with correct params" time="0.007" classname="RegistrationService create digital id"/>
  <testcase name="should create profile data on success" time="0.011" classname="RegistrationService create digital id upon success"/>
  <testcase name="should create profile data on success with newRegisteredPage off" time="0.009" classname="RegistrationService create digital id upon success"/>
  <testcase name="should reject with default message when there is no message in headers" time="0.008" classname="RegistrationService create digital id upon failure"/>
  <testcase name="should reject with service error message when there is message in headers" time="0.008" classname="RegistrationService create digital id upon failure"/>
  <testcase name="should reject on an error service response disguised as 200" time="0.008" classname="RegistrationService create digital id upon failure"/>
  <testcase name="should reject on an error when card is invalid" time="0.044" classname="RegistrationService create digital id upon failure"/>
  <testcase name="should reject with generic OTP error message" time="0.007" classname="RegistrationService create digital id upon failure"/>
  <testcase name="should resolve with success and data from service endpoint" time="0.008" classname="RegistrationService link card"/>
  <testcase name="should resolve with error and message from service endpoint when with error in header" time="0.007" classname="RegistrationService link card"/>
  <testcase name="should resolve with specified error message when with a hot card message error in header" time="0.007" classname="RegistrationService link card"/>
  <testcase name="should resolve with specific error from service endpoint when promise rejects" time="0.008" classname="RegistrationService link card"/>
  <testcase name="should resolve with generic error (Card could not be linked. Check your network connection) for any uncaught error occurs" time="0.007" classname="RegistrationService link card"/>
  <testcase name="should invoke the link additional card service" time="0.008" classname="RegistrationService link additional card"/>
  <testcase name="should push &quot;newlyLinkedCardNumber&quot; into application parameter" time="0.008" classname="RegistrationService process linked card"/>
  <testcase name="should push &quot;hasInfo&quot; into application parameter" time="0.007" classname="RegistrationService process linked card"/>
  <testcase name="should set response.data properties" time="0.016" classname="RegistrationService process linked card"/>
  <testcase name="should build user" time="0.009" classname="RegistrationService process linked card"/>
  <testcase name="should set up the correct route and template url" time="0.004" classname="Change password route"/>
  <testcase name="should use the AddDashboardController and addDashboard.html" time="0.004" classname="add dashboard routes when about to add dashboard"/>
  <testcase name="should have a flow with choose dashboard url when all cards are hot carded" time="0.004" classname="add dashboard controller flow"/>
  <testcase name="should have a flow with dashboards url when all cards are not hot carded" time="0.004" classname="add dashboard controller flow"/>
  <testcase name="shoul initialise ViewModel" time="0.004" classname="add dashboard controller"/>
  <testcase name="should navigate to choose-dashboard when all cards are hot carded" time="0.004" classname="add dashboard controller on cancel"/>
  <testcase name="should navigate to dashboards when a card is not hot carded" time="0.003" classname="add dashboard controller on cancel"/>
  <testcase name="should ensure that flow.next is called even before linkAdditionalCard is resolved" time="0.004" classname="add dashboard controller on success"/>
  <testcase name="should link additional card" time="0.004" classname="add dashboard controller on success"/>
  <testcase name="should set the Channel Profile and card number to current view model on link additional card" time="0.004" classname="add dashboard controller on success"/>
  <testcase name="should not link additional card but set error message" time="0.008" classname="add dashboard controller on failure"/>
  <testcase name="should use the AddDashboardSaveNameController and addDashboardSaveName.html" time="0.004" classname="add dashboard name routes when about to add dashboard name"/>
  <testcase name="should set viewModel to scope.channelProfile" time="0.004" classname="add dashboard name controller"/>
  <testcase name="should set dashboard name" time="0.004" classname="add dashboard name controller"/>
  <testcase name="should set errorMessage" time="0.003" classname="add dashboard name controller"/>
  <testcase name="should switch to the new dashboard and redirect to account-summary" time="0.004" classname="add dashboard name controller when dashboards have been hotcarded"/>
  <testcase name="should go to home page upon success and have selected dashboard" time="0.027" classname="change password controller when change password is called"/>
  <testcase name="should go to choose-dashboard page upon success and have no dashboard selected yet" time="0.003" classname="change password controller when change password is called"/>
  <testcase name="should go back to change password page, clear old password and set error" time="0.003" classname="change password controller when change password is called"/>
  <testcase name="should redirect to login when account is locked" time="0.003" classname="change password controller when change password is called"/>
  <testcase name="should clear the search parameters" time="0.013" classname="LoginController Single card tests with lithiumSso login"/>
  <testcase name="should record the login for analytics" time="0.008" classname="LoginController Single card tests with lithiumSso login when login succeeds"/>
  <testcase name="should set isSuccessful to false" time="0.009" classname="LoginController Single card tests with lithiumSso login when login fails"/>
  <testcase name="should remove previously typed password" time="0.009" classname="LoginController Single card tests with lithiumSso login when login fails"/>
  <testcase name="should display the error message that was gotten back from the service" time="0.009" classname="LoginController Single card tests with lithiumSso login when login fails"/>
  <testcase name="should know that a user is not authenticated" time="0.01" classname="LoginController Single card tests with lithiumSso login when login fails"/>
  <testcase name="should toggle the show terms and condition modal" time="0.009" classname="LoginController Single card tests with lithiumSso login when show terms and conditions"/>
  <testcase name="should show terms and conditions" time="0.009" classname="LoginController Single card tests with lithiumSso login when show terms and conditions"/>
  <testcase name="should set the error message from the application parameters" time="0.009" classname="LoginController Single card tests with lithiumSso login login error message"/>
  <testcase name="should remove loginError on location change" time="0.009" classname="LoginController Single card tests with lithiumSso login login error message"/>
  <testcase name="should change the location to switch dashboard" time="0.008" classname="LoginController Multiple cards for all failures"/>
  <testcase name="should change the location to switch dashboard" time="0.008" classname="LoginController Multiple cards for hotcarded account"/>
  <testcase name="should set isSuccessful to false" time="0.007" classname="LoginController Multiple cards for hotcarded account"/>
  <testcase name="should redirect to /switchDashboard first step on 7501 error" time="0.01" classname="LoginController Multiple cards When default dashboard is active and otp errors exist"/>
  <testcase name="should redirect to /switchDashboard step on 7506 error" time="0.008" classname="LoginController Multiple cards When default dashboard is active and otp errors exist"/>
  <testcase name="should redirect to /switchDashboard first step on 7516 error" time="0.008" classname="LoginController Multiple cards When default dashboard is active and otp errors exist"/>
  <testcase name="should redirect to /switchDashboard first step on 7501 error" time="0.008" classname="LoginController Multiple cards when default dashboard has activate OTP status"/>
  <testcase name="should redirect to /switchDashboard first step on 7506 error" time="0.008" classname="LoginController Multiple cards when default dashboard has activate OTP status"/>
  <testcase name="should redirect to /switchDashboard first step on 7516 error" time="0.01" classname="LoginController Multiple cards when default dashboard has activate OTP status"/>
  <testcase name="refreshes the page" time="0.003" classname="SignoutController and when logout is called"/>
  <testcase name="should check if you are authenticated to determine whether to show the logout option" time="0.002" classname="SignoutController when shouldDisplayLogoutOption is called"/>
  <testcase name="should set up the correct route and template url" time="0.004" classname="Unit Test - Password Reset Route - reset-password when resetPasswordFeature is toggled off"/>
  <testcase name="should indicate that the route can be accessed without authentication" time="0.003" classname="Unit Test - Password Reset Route - reset-password when resetPasswordFeature is toggled off"/>
  <testcase name="should set up the correct route and template url" time="0.003" classname="Unit Test - Password Reset Route - reset-password when resetPasswordFeature is toggled on"/>
  <testcase name="should indicate that the route can be accessed without authentication" time="0.007" classname="Unit Test - Password Reset Route - reset-password when resetPasswordFeature is toggled on"/>
  <testcase name="should create flow" time="0.004" classname="Unit Test - Password Reset controller on init controller"/>
  <testcase name="should create securityChallenge Object" time="0.028" classname="Unit Test - Password Reset controller on init controller"/>
  <testcase name="should initial view model" time="0.003" classname="Unit Test - Password Reset controller on init controller"/>
  <testcase name="should call link card status service" time="0.003" classname="Unit Test - Password Reset controller on next link card status service success"/>
  <testcase name="should call link card status service and reject" time="0.003" classname="Unit Test - Password Reset controller on next link card status service rejection"/>
  <testcase name="should call location" time="0.003" classname="Unit Test - Password Reset controller on cancel"/>
  <testcase name="should associate url with template" time="0.003" classname="Unit Test - Password Reset Details Controller Routes - for reset-password/details"/>
  <testcase name="should indicate that the route can be accessed without authentication" time="0.003" classname="Unit Test - Password Reset Details Controller Routes - for reset-password/details"/>
  <testcase name="should get securityChallenge Object from ViewModel" time="0.002" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on init controller when ViewModel is defined"/>
  <testcase name="should get securityChallenge Object from ViewModel" time="0.003" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on init controller when ViewModel is undefined"/>
  <testcase name="should call location" time="0.003" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on init controller when ViewModel is undefined"/>
  <testcase name="should modify when there is a card" time="0.002" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on init controller flow"/>
  <testcase name="should modify when there is no card" time="0.003" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on init controller flow"/>
  <testcase name="should call location" time="0.002" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on cancel"/>
  <testcase name="should call reset password service" time="0.003" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on next on authenticationService success"/>
  <testcase name="should call reset password service" time="0.003" classname="Unit Test - Password Reset Details Controller controller - PasswordResetDetailsController on next on authenticationService rejection"/>
  <testcase name="should create flow" time="0.003" classname="Reset password route Reset Password Controller"/>
  <testcase name="should know the user is resetting password" time="0.003" classname="Reset password route Reset Password Controller"/>
  <testcase name="should call authentication service" time="0.004" classname="Reset password route Reset Password Controller"/>
  <testcase name="should update the flow upon success" time="0.007" classname="Reset password route Reset Password Controller upon success"/>
  <testcase name="should know that password has been reset" time="0.004" classname="Reset password route Reset Password Controller upon success"/>
  <testcase name="should redirect to login page" time="0.003" classname="Reset password route Reset Password Controller upon success"/>
  <testcase name="should update the flow upon failure" time="0.003" classname="Reset password route Reset Password Controller upon failure"/>
  <testcase name="should set errorMessage in the scope" time="0.003" classname="Reset password route Reset Password Controller upon failure"/>
  <testcase name="should push error message to the application parameters" time="0.003" classname="Reset password route Reset Password Controller upon failure"/>
  <testcase name="should remove error message from application parameters" time="0.003" classname="Reset password route Reset Password Controller cancel"/>
  <testcase name="should call Flow.cancel()" time="0.003" classname="Reset password route Reset Password Controller cancel"/>
  <testcase name="should set secure message" time="0.005" classname="secure message confirm controller current model"/>
  <testcase name="should prepare model for modify" time="0.004" classname="secure message confirm controller modify"/>
  <testcase name="should change flow to previous" time="0.005" classname="secure message confirm controller modify"/>
  <testcase name="should navigate to detail page" time="0.004" classname="secure message confirm controller modify"/>
  <testcase name="should confirm details" time="0.005" classname="secure message confirm controller confirm"/>
  <testcase name="should not confirm details" time="0.019" classname="secure message confirm controller confirm"/>
  <testcase name="when secure message is present in the model should allow access" time="0.004" classname="secure message confirm controller routing"/>
  <testcase name="when no secure message is present in the model should not allow access" time="0.004" classname="secure message confirm controller routing"/>
  <testcase name="should set flow with 3 steps" time="0.004" classname="secure message details controller init"/>
  <testcase name="should copy model to scope secure message object" time="0.003" classname="secure message details controller init"/>
  <testcase name="should init alive accounts" time="0.004" classname="secure message details controller init"/>
  <testcase name="should set secure message to ViewModel" time="0.04" classname="secure message details controller Next"/>
  <testcase name="should come to next step in flow" time="0.003" classname="secure message details controller Next"/>
  <testcase name="should navigate to confirm page" time="0.003" classname="secure message details controller Next"/>
  <testcase name="should put error message on the scope" time="0.003" classname="secure message details controller on error message"/>
  <testcase name="when card selected should allow access" time="0.003" classname="secure message details controller routing"/>
  <testcase name="when no card selected should not allow access" time="0.003" classname="secure message details controller routing"/>
  <testcase name="should set secure message from view model" time="0.007" classname="secure message results controller"/>
  <testcase name="should have a message to display and a boolean value for the css animation on notification directive" time="0.003" classname="secure message results controller"/>
  <testcase name="should have hasInfo set to true" time="0.003" classname="secure message results controller"/>
  <testcase name="should set current date with latest timestamp from server" time="0.003" classname="secure message results controller"/>
  <testcase name="when secure message is present in the model should allow access" time="0.002" classname="secure message results controller routing"/>
  <testcase name="when no secure message is present in the model should not allow access" time="0.003" classname="secure message results controller routing"/>
  <testcase name="should detect a mac user" time="0.002" classname="SecuritySoftwareController download trusteer security software"/>
  <testcase name="should detect a windows user" time="0.002" classname="SecuritySoftwareController download trusteer security software"/>
  <testcase name="should detect a non-windows/non-mac user" time="0.002" classname="SecuritySoftwareController download trusteer security software"/>
  <testcase name="should have a list of dashboards to switch to" time="0.022" classname="switchDashboardController switchDashboard"/>
  <testcase name="should set the info on the scope from the application parameters" time="0.004" classname="switchDashboardController switchDashboard when there is a current dashboard"/>
  <testcase name="should set the newly linked card number to the scope with a message" time="0.004" classname="switchDashboardController switchDashboard when there is a current dashboard"/>
  <testcase name="should not set scope values" time="0.003" classname="switchDashboardController switchDashboard when there is no current dashboard"/>
  <testcase name="should redirect to new-registered page" time="0.003" classname="switchDashboardController switchDashboard when there are no dashboards"/>
  <testcase name="should switch to the default dashboard" time="0.004" classname="switchDashboardController switchDashboard when there is one dashboard"/>
  <testcase name="should navigate to chose-dashboard when the dashboard is hot carded" time="0.004" classname="switchDashboardController switchDashboard when there is one dashboard"/>
  <testcase name="should set showLinkCard to true" time="0.004" classname="switchDashboardController switchDashboard show/hide link card on choose-dashboard"/>
  <testcase name="should set showLinkCard to false" time="0.004" classname="switchDashboardController switchDashboard show/hide link card on choose-dashboard"/>
  <testcase name="should redirect to choose dashboard" time="0.004" classname="switchDashboardController switchDashboard when there are multiple dashboards when there is a blocked dashboard"/>
  <testcase name="should switch to the default dashboard" time="0.003" classname="switchDashboardController switchDashboard when there are multiple dashboards when there are no blocked cards and no current dashboard"/>
  <testcase name="should not switch to the default dashboard" time="0.003" classname="switchDashboardController switchDashboard when there are multiple dashboards when there are no blocked cards and there is a current dashboard"/>
  <testcase name="should switch to a non blocked dashboard" time="0.003" classname="switchDashboardController switchDashboard switchToDashboard"/>
  <testcase name="should not switch to a blocked dashboard" time="0.003" classname="switchDashboardController switchDashboard switchToDashboard"/>
  <testcase name="should hide the dropdown when clicking a link in the dropdown" time="0.004" classname="Profile dropdown directive"/>
  <testcase name="should hide the dropdown when the mouse leaves the dropdown parent container" time="0.008" classname="Profile dropdown directive"/>
  <testcase name="should have two passwords" time="0.054" classname="Password And Confirmation"/>
  <testcase name="should show password and confirmation label" time="0.024" classname="Password And Confirmation"/>
  <testcase name="should show password and confirmation label as default value if not set" time="0.039" classname="Password And Confirmation"/>
  <testcase name="should use the correct controller " time="0.003" classname="Login routes  and the referrer is from ideaSpace: http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Stories when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.002" classname="Login routes  and the referrer is from ideaSpace: http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Stories when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.002" classname="Login routes  and the referrer is from ideaSpace: http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Cars when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.002" classname="Login routes  and the referrer is from ideaSpace: http://community_stage_standardbank_co_za/t5/Ideas/idb-p/Cars when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.002" classname="Login routes  and the referrer is from ideaSpace: https://community_standardbank_co_za/t5/Ideas1/ when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.003" classname="Login routes  and the referrer is from ideaSpace: https://community_standardbank_co_za/t5/Ideas1/ when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.002" classname="Login routes  and the referrer is from ideaSpace: http://community_standardbank_co_za/t5/Ideas/ when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.003" classname="Login routes  and the referrer is from ideaSpace: http://community_standardbank_co_za/t5/Ideas/ when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.006" classname="Login routes  and the referrer is from community: http://community_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.003" classname="Login routes  and the referrer is from community: http://community_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.002" classname="Login routes  and the referrer is from community: http://community_stage_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.002" classname="Login routes  and the referrer is from community: http://community_stage_standardbank_co_za/t5/Mobile-Apps/ct-p/Mobile when login is to be viewed"/>
  <testcase name="should use the correct controller " time="0.002" classname="Login routes  and the referrer is from internetBanking:  when login is to be viewed"/>
  <testcase name="should use the correct template " time="0.002" classname="Login routes  and the referrer is from internetBanking:  when login is to be viewed"/>
  <testcase name="should know when the username or password are wrong on the first attempt" time="0.004" classname="Authentication Service Login when authentication fails"/>
  <testcase name="should know when the username or password are wrong on the second attempt and will be locked on the next one" time="0.003" classname="Authentication Service Login when authentication fails"/>
  <testcase name="should throw an error if registration is not completed " time="0.003" classname="Authentication Service Login when authentication fails"/>
  <testcase name="should know when the digital ID has been locked" time="0.004" classname="Authentication Service Login when authentication fails"/>
  <testcase name="should know when there has been an unknown error" time="0.007" classname="Authentication Service Login when authentication fails"/>
  <testcase name="should return a promise containing a response object" time="0.009" classname="Authentication Service Login when authentication is successful with lithiumSSO login"/>
  <testcase name="should take you to the link card if you are newly registered user" time="0.009" classname="Authentication Service Login when authentication is successful"/>
  <testcase name="should have a preferred name" time="0.007" classname="Authentication Service Login when authentication is successful"/>
  <testcase name="should have the username" time="0.044" classname="Authentication Service Login when authentication is successful"/>
  <testcase name="should say the digital ID has a card linked to it" time="0.007" classname="Authentication Service Login when authentication is successful"/>
  <testcase name="should have a token" time="0.005" classname="Authentication Service Login when there is no card linked to the digital ID"/>
  <testcase name="should say the digital ID has NO card linked to it" time="0.006" classname="Authentication Service Login when there is no card linked to the digital ID"/>
  <testcase name="should remove the cookie on window unload" time="0.004" classname="Authentication Service Log out"/>
  <testcase name="should refresh the page into order to logout" time="0.003" classname="Authentication Service Log out"/>
  <testcase name="should delete the token cookie" time="0.002" classname="Authentication Service Log out"/>
  <testcase name="should respond with success" time="0.003" classname="Authentication Service Change password"/>
  <testcase name="should respond with wrong old password with error code 1" time="0.003" classname="Authentication Service Change password"/>
  <testcase name="should respond with wrong old password with error code 2" time="0.003" classname="Authentication Service Change password"/>
  <testcase name="should invoke the authentication service and respond with wrong old password with error code 4 " time="0.008" classname="Authentication Service Change password"/>
  <testcase name="should respond with wrong old password with error code 1" time="0.006" classname="Authentication Service Change password on IE responding with 200"/>
  <testcase name="should respond with wrong old password with error code 2" time="0.004" classname="Authentication Service Change password on IE responding with 200"/>
  <testcase name="should invoke the authentication service and respond with wrong old password with error code 4 " time="0.003" classname="Authentication Service Change password on IE responding with 200"/>
  <testcase name="should invoke the authentication service and respond with failure" time="0.004" classname="Authentication Service Change password"/>
  <testcase name="should invoke the authentication service with an error" time="0.003" classname="Authentication Service Change password"/>
  <testcase name="should reset password and respond with success" time="0.004" classname="Authentication Service Reset password"/>
  <testcase name="should invoke the authentication service and respond with failure" time="0.004" classname="Authentication Service Reset password"/>
  <testcase name="should invoke the authentication service with failure when user does not exist" time="0.003" classname="Authentication Service Reset password"/>
  <testcase name="should not reset password and should respond with an error when given a wrong username" time="0.004" classname="Authentication Service Reset password"/>
  <testcase name="should not reset password and should respond with an error when new password does not conform" time="0.003" classname="Authentication Service Reset password"/>
  <testcase name="should not reset password and should respond with an error when card is hot-carded" time="0.004" classname="Authentication Service Reset password"/>
  <testcase name="should not reset password and should respond with an error when profile is inactive for 18 months" time="0.003" classname="Authentication Service Reset password"/>
  <testcase name="should not reset password when OTP is inactive" time="0.003" classname="Authentication Service Reset password"/>
  <testcase name="should invoke the authentication service with an error" time="0.004" classname="Authentication Service Reset password"/>
  <testcase name="should be able to renew session" time="0.003" classname="Authentication Service Reissue token"/>
  <testcase name="should reset password with success" time="0.008" classname="Authentication Service Password Reset with card"/>
  <testcase name="should reject with message from custom error" time="0.005" classname="Authentication Service Password Reset with card"/>
  <testcase name="should reject with message from service endpoint" time="0.005" classname="Authentication Service Password Reset with card"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.004" classname="Authentication Service Password Reset with card"/>
  <testcase name="should reject with error message when the http call is rejected" time="0.004" classname="Authentication Service Password Reset with card"/>
  <testcase name="should reset password with success" time="0.003" classname="Authentication Service Password Reset without card"/>
  <testcase name="should check card status successfully" time="0.004" classname="Authentication Service Link Card Status"/>
  <testcase name="should reject with message in the custom errors" time="0.004" classname="Authentication Service Link Card Status"/>
  <testcase name="should reject with message from endpoint" time="0.027" classname="Authentication Service Link Card Status"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.003" classname="Authentication Service Link Card Status"/>
  <testcase name="should be resolved with the service response" time="0.003" classname="Card Service when feature toggle: Meniga Services is toggled off with meniga services feature toggled off fetch card on successful service return"/>
  <testcase name="should be resolved with the service response" time="0.02" classname="Card Service when feature toggle: Meniga Services Toggled on fetch card on successful service return"/>
  <testcase name="should return the current card" time="0.002" classname="Card Factory when feature toggle: Personal Finance Management is toggled off"/>
  <testcase name="should return the current card" time="0.003" classname="Card Factory when feature toggle: Personal Finance Management Toggled on"/>
  <testcase name="should broadcast that user has been logged in" time="0.002" classname="DigitalId on authenticate"/>
  <testcase name="should know that the user has authenticated" time="0.002" classname="DigitalId on authenticate"/>
  <testcase name="should know the current digital ID" time="0.002" classname="DigitalId on authenticate"/>
  <testcase name="should broadcast that user has been logged out" time="0.002" classname="DigitalId on remove"/>
  <testcase name="should remove &quot;x-sbg-token&quot; from the cookies" time="0.002" classname="DigitalId on remove"/>
  <testcase name="should know that the user has authenticated" time="0.028" classname="DigitalId on remove"/>
  <testcase name="should return the correct digital ID object" time="0.003" classname="DigitalId when getting new instance"/>
  <testcase name=", it should be named &apos;LithiumAuthenticationFlow&apos;" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated"/>
  <testcase name=", it should propagate the error object to the consumer" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) Given standard bank authentication is unsuccessful"/>
  <testcase name=",it should call the AuthenticationService.login(Jack, TheGiantSlayer) " time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer)"/>
  <testcase name=", it should call user.build() with a profile" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) when standard bank authentication is successful"/>
  <testcase name=", it should set the ApplicationParameter &apos;canDelay&apos; to true" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) when standard bank authentication is successful"/>
  <testcase name=", it should set the ApplicationParameter &apos;hasInfo&apos; to true" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) when standard bank authentication is successful"/>
  <testcase name=", it should navigate to switchDashboard" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) when standard bank authentication is successful When user build is successful"/>
  <testcase name=", it should propagate the error object to the user" time="0.003" classname="Unit Test - InternetBankingAuthenticationFlow Given it has been instantiated When InternetBankingAuthenticationFlow_start(Jack, TheGiantSlayer) when standard bank authentication is successful when user_build() is unsuccessful"/>
  <testcase name="should set newRegistered to true in application parameters" time="0.003" classname="Unit Test - InternetBankingRegistrationFlow When registration is successful"/>
  <testcase name="should redirect to new registered customer page" time="0.002" classname="Unit Test - InternetBankingRegistrationFlow When registration is successful"/>
  <testcase name="should indicate that registration is complete" time="0.002" classname="Unit Test - InternetBankingRegistrationFlow When registration is successful"/>
  <testcase name="should leave newRegistered in application parameters as undefined" time="0.002" classname="Unit Test - InternetBankingRegistrationFlow When registration is unsuccessful"/>
  <testcase name="should leave isRegistering in application parameters as undefined" time="0.003" classname="Unit Test - InternetBankingRegistrationFlow When registration is unsuccessful"/>
  <testcase name="should redirect to the first page in the wizard" time="0.002" classname="Unit Test - InternetBankingRegistrationFlow When registration is unsuccessful"/>
  <testcase name="should call make request with the correct argument" time="0.009" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and return success" time="0.004" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when password or csp is invalid" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when card number is invalid" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when CSP pin is locked" time="0.004" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when ATM pin is locked" time="0.004" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when service is not available" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when error has occurred" time="0.004" classname="Migration Service Migrate Existing user"/>
  <testcase name="should provide the correct message when an invalid card is supplied" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when error has occurred but no error code" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject with generic OTP locked error message" time="0.007" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when generic error has occurred" time="0.005" classname="Migration Service Migrate Existing user"/>
  <testcase name="should call make request and reject when generic error has occurred" time="0.003" classname="Migration Service Migrate Existing user"/>
  <testcase name="should return principal with given id and key" time="0.002" classname="Principal newInstance"/>
  <testcase name="should resolve with success and data from service endpoint" time="0.004" classname="secure message service secure message"/>
  <testcase name="should reject with message from service endpoint when with error in header" time="0.003" classname="secure message service secure message"/>
  <testcase name="should reject with error and message when the status is not success and no error message" time="0.004" classname="secure message service secure message"/>
  <testcase name="should reject with error message when the http call is rejected" time="0.003" classname="secure message service secure message"/>
  <testcase name="should switch to the given dashboard" time="0.004" classname="SwitchDashboardService card without error"/>
  <testcase name="should call goHome" time="0.005" classname="SwitchDashboardService card without error"/>
  <testcase name="should push login error to application parameters" time="0.004" classname="SwitchDashboardService login error"/>
  <testcase name="should remove the current digitalId" time="0.004" classname="SwitchDashboardService login error"/>
  <testcase name="should redirect to login page" time="0.003" classname="SwitchDashboardService login error"/>
  <testcase name="should redirect to activate otp page" time="0.015" classname="SwitchDashboardService when activate otp is required"/>
  <testcase name="should create the amend access direct flow" time="0.004" classname="SwitchDashboardService when amend access direct is required"/>
  <testcase name="should reject after unsuccessful amend" time="0.003" classname="SwitchDashboardService when amend access direct is required"/>
  <testcase name="should redirect to account summary after successful amend and recursive switch dashboard flow" time="0.003" classname="SwitchDashboardService when amend access direct is required"/>
  <testcase name="should resolve with success and data from service endpoint" time="0.003" classname="Unit Test - Update dashboard service update dashboard name"/>
  <testcase name="should resolve with error and message from service endpoint when theres an error in header" time="0.003" classname="Unit Test - Update dashboard service update dashboard name"/>
  <testcase name="should reject with generic error message" time="0.002" classname="Unit Test - Update dashboard service update dashboard name"/>
  <testcase name="should have customer" time="0.003" classname="User after capturing customer"/>
  <testcase name="should have set bpIdSystemPrincipalIdentifier" time="0.003" classname="User after capturing customer"/>
  <testcase name="should return principal for new to bank customer captured" time="0.003" classname="User bpIdPrincipalForNewToBankCustomer"/>
  <testcase name="should build a valid user profile from valid raw user profile data" time="0.004" classname="User with meniga services toggled on build"/>
  <testcase name="should resolve when no SBSA channels exist" time="0.003" classname="User with meniga services toggled on build"/>
  <testcase name="should not create any dashboards when user has bpId" time="0.007" classname="User with meniga services toggled on build"/>
  <testcase name="should contain bpIdSystemPrincipalIdentifier when user has bpId" time="0.004" classname="User with meniga services toggled on build"/>
  <testcase name="should add the card number to multiple dashboards with the same system principal id" time="0.005" classname="User with meniga services toggled on build"/>
  <testcase name="should card number to one dashboard" time="0.003" classname="User with meniga services toggled on build"/>
  <testcase name="should send the default dashboard principal first when sending multiple principals" time="0.003" classname="User with meniga services toggled on build"/>
  <testcase name="should send the first dashboard principal first when sending multiple principals and default profile does not contain an SBSA_Banking principal" time="0.038" classname="User with meniga services toggled on build"/>
  <testcase name="should return true when there are dashboards available" time="0.003" classname="User with meniga services toggled on has dashboards"/>
  <testcase name="should return false when there are no dashboards available" time="0.003" classname="User with meniga services toggled on has dashboards"/>
  <testcase name="should return the default dashboard with defaultId present" time="0.002" classname="User with meniga services toggled on default dashboard"/>
  <testcase name="should return the default dashboard without a defaultID" time="0.003" classname="User with meniga services toggled on default dashboard"/>
  <testcase name="should fetch the card and add it to the dashboard" time="0.002" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should mask eighteen digit card number" time="0.011" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should fetch the card and add an error with message to the dashboard" time="0.003" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should fetch the card and add default the error message for an unknown error" time="0.002" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should clear the previous cardError when fetching the card and adding to the dashboard" time="0.003" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should clear the card number when fetching the card and adding an error to the dashboard" time="0.002" classname="User with meniga services toggled on add card details to dashboards"/>
  <testcase name="should return principal for current dashboard" time="0.007" classname="User with meniga services toggled on principal for current dashboard"/>
  <testcase name="should return principal for current dashboard when dashboards are present" time="0.004" classname="User with meniga services toggled on principal"/>
  <testcase name="should return principal for new to bank customer when have bpId" time="0.003" classname="User with meniga services toggled on principal"/>
  <testcase name="should know if  the current dashboard is for an SED principal" time="0.003" classname="User with meniga services toggled on principal"/>
  <testcase name="should know if  the current dashboard is not for an SED principal" time="0.003" classname="User with meniga services toggled on principal"/>
  <testcase name="should know if  the users is current dashboards cardHolder" time="0.003" classname="User with meniga services toggled on CardHolder"/>
  <testcase name="should add new dashboard to current dashboards" time="0.003" classname="User with meniga services toggled on add dashboard"/>
  <testcase name="should return true when have bpId" time="0.003" classname="User with meniga services toggled on has customer"/>
  <testcase name="should return false when no systemPrincipalId" time="0.003" classname="User with meniga services toggled on has customer"/>
  <testcase name="should return true when has systemPrincipalId and dashboard" time="0.003" classname="User with meniga services toggled on has customer"/>
  <testcase name="should set the currentDashboard to the switchToDashboard" time="0.004" classname="User with meniga services toggled on switch to dashboard"/>
  <testcase name="should clear all the dependant caches" time="0.004" classname="User with meniga services toggled on switch to dashboard"/>
  <testcase name="should return false if there are no blocked cards" time="0.002" classname="User with meniga services toggled on has blocked cards"/>
  <testcase name="should return true if there are blocked cards" time="0.002" classname="User with meniga services toggled on has blocked cards"/>
  <testcase name="should return the dashboard for a system principal id" time="0.004" classname="User with meniga services toggled on find dashboard by profile id"/>
  <testcase name="should build a valid user profile from valid raw user profile data" time="0.005" classname="User with meniga services toggled off build"/>
  <testcase name="should resolve when no SBSA channels exist" time="0.003" classname="User with meniga services toggled off build"/>
  <testcase name="should not create any dashboards when user has bpId" time="0.002" classname="User with meniga services toggled off build"/>
  <testcase name="should contain bpIdSystemPrincipalIdentifier when user has bpId" time="0.004" classname="User with meniga services toggled off build"/>
  <testcase name="should add the card number to multiple dashboards with the same system principal id" time="0.003" classname="User with meniga services toggled off build"/>
  <testcase name="should card number to one dashboard" time="0.003" classname="User with meniga services toggled off build"/>
  <testcase name="should send the default dashboard principal first when sending multiple principals" time="0.041" classname="User with meniga services toggled off build"/>
  <testcase name="should send the first dashboard principal first when sending multiple principals and default profile does not contain an SBSA_Banking principal" time="0.003" classname="User with meniga services toggled off build"/>
  <testcase name="should create a dashboard for SED" time="0.003" classname="User with meniga services toggled off build for business cards"/>
  <testcase name="should return true when there are dashboards available" time="0.002" classname="User with meniga services toggled off has dashboards"/>
  <testcase name="should return false when there are no dashboards available" time="0.003" classname="User with meniga services toggled off has dashboards"/>
  <testcase name="should return the default dashboard with defaultId present" time="0.002" classname="User with meniga services toggled off default dashboard"/>
  <testcase name="should return the default dashboard without a defaultID" time="0.003" classname="User with meniga services toggled off default dashboard"/>
  <testcase name="should fetch the card and add it to the dashboard" time="0.003" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should mask eighteen digit card number" time="0.003" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should fetch the card and add an error with message to the dashboard" time="0.004" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should fetch the card and add default the error message for an unknown error" time="0.003" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should clear the previous cardError when fetching the card and adding to the dashboard" time="0.003" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should clear the card number when fetching the card and adding an error to the dashboard" time="0.002" classname="User with meniga services toggled off add card details to dashboards"/>
  <testcase name="should return principal for current dashboard" time="0.003" classname="User with meniga services toggled off principal for current dashboard"/>
  <testcase name="should return principal for current dashboard when dashboards are present" time="0.004" classname="User with meniga services toggled off principal"/>
  <testcase name="should return principal for new to bank customer when have bpId" time="0.002" classname="User with meniga services toggled off principal"/>
  <testcase name="should add new dashboard to current dashboards" time="0.003" classname="User with meniga services toggled off add dashboard"/>
  <testcase name="should return true when have bpId" time="0.003" classname="User with meniga services toggled off has customer"/>
  <testcase name="should return false when no systemPrincipalId" time="0.003" classname="User with meniga services toggled off has customer"/>
  <testcase name="should return true when has systemPrincipalId and dashboard" time="0.003" classname="User with meniga services toggled off has customer"/>
  <testcase name="should set the currentDashboard to the switchToDashboard" time="0.003" classname="User with meniga services toggled off switch to dashboard"/>
  <testcase name="should clear all the dependant caches" time="0.008" classname="User with meniga services toggled off switch to dashboard"/>
  <testcase name="should return false if there are no blocked cards" time="0.003" classname="User with meniga services toggled off has blocked cards"/>
  <testcase name="should return true if there are blocked cards" time="0.003" classname="User with meniga services toggled off has blocked cards"/>
  <testcase name="should return the dashboard for a system principal id" time="0.003" classname="User with meniga services toggled off find dashboard by profile id"/>
  <testcase name="should return true when all cards are hot carded" time="0.003" classname="User with meniga services toggled off all cards hot carded"/>
  <testcase name="should return false when all cards are not hot carded" time="0.003" classname="User with meniga services toggled off all cards hot carded"/>
  <testcase name="should invoke the get otp preference" time="0.004" classname="When viewOPTPreference service then view otp preference "/>
  <testcase name="should return the response upon success" time="0.003" classname="When viewOPTPreference service then view otp preference "/>
  <testcase name="should not return the response upon failure" time="0.004" classname="When viewOPTPreference service then view otp preference "/>
  <testcase name="should not return the response upon generic failure" time="0.003" classname="When viewOPTPreference service then view otp preference "/>
  <testcase name="should link the old password field to the scope" time="0.084" classname="change password template"/>
  <testcase name="should link the new password field to the scope" time="0.054" classname="change password template"/>
  <testcase name="should link the confirm password field to the scope" time="0.056" classname="change password template"/>
  <testcase name="should make sure we call the correct function when save button is clicked" time="0.071" classname="change password template"/>
  <testcase name="should not enable the next button when not valid" time="0.09" classname="change password template"/>
  <testcase name="should be in a div that is only visible on small screens" time="0.04" classname="login template the &quot;continue to sign in&quot; button"/>
  <testcase name="should disappear when clicked" time="0.073" classname="login template the &quot;continue to sign in&quot; button"/>
  <testcase name="should not be visible before the &quot;continue to sign in&quot; button is clicked" time="0.04" classname="login template login form"/>
  <testcase name="should be visible when the &quot;continue to sign in&quot; button is clicked" time="0.043" classname="login template login form"/>
  <testcase name="should have a track click" time="0.012" classname="secure message confirm template cancel button"/>
  <testcase name="should have a track click" time="0.011" classname="secure message confirm template confirm button"/>
  <testcase name="should be required when business number is empty" time="0.04" classname="secure message details template home telephone number"/>
  <testcase name="should not be required when business number is valid" time="0.075" classname="secure message details template home telephone number"/>
  <testcase name="should be required when home number is empty" time="0.068" classname="secure message details template business telephone number"/>
  <testcase name="should not be required when home number is valid" time="0.052" classname="secure message details template business telephone number"/>
  <testcase name="should have a track click" time="0.035" classname="secure message details template cancel button"/>
  <testcase name="should be invisible if boolean is falsy" time="0.071" classname="secure message details template error message"/>
  <testcase name="should be visible if boolean is truthy" time="0.033" classname="secure message details template error message"/>
  <testcase name="should be invisible if boolean is falsy" time="0.011" classname="secure message results template success message"/>
  <testcase name="should be visible if boolean is truthy" time="0.009" classname="secure message results template success message"/>
  <testcase name="should be invisible if boolean is falsy" time="0.009" classname="secure message results template info message"/>
  <testcase name="should be visible if boolean is truthy" time="0.008" classname="secure message results template info message"/>
  <testcase name="should not show the branch section if there is no branch name" time="0.008" classname="secure message summary template"/>
  <testcase name="should not show the branch section if there is an empty branch name" time="0.006" classname="secure message summary template"/>
  <testcase name="should show the branch section if there is a branch" time="0.007" classname="secure message summary template"/>
  <testcase name="should not show the home telephone section if there is no value" time="0.007" classname="secure message summary template"/>
  <testcase name="should show the home telephone section if there is a value" time="0.018" classname="secure message summary template"/>
  <testcase name="should not show the business telephone section if there is no value" time="0.007" classname="secure message summary template"/>
  <testcase name="should show the business telephone section if there is a value" time="0.007" classname="secure message summary template"/>
  <testcase name="Should set the 5 statement types on the $scope" time="0.005" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should set $scope.loading to true" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should have download pdf statement function defined" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should invoke createPdf on StatementPdfGenerator With the correct parameters." time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should have a menigaTransationsPageQuery on the $scope" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should have the user category mappings on the $scope " time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should Set The personalFinanceManagement Id To The one returned from the card" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should default the pageIndex to 0" time="0.003" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should default the months to go back to 0" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController"/>
  <testcase name="Should Set the returned list of accounts on the $scope.accounts" time="0.013" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should set the selected account to the first one on the account list" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should set the statementType to the first one on the statement type list" time="0.003" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should call card.current" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should call list on accountsService with card" time="0.026" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should set the menigaTransactionPageQuery account to the first account" time="0.005" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should call getTransactionsPage on menigaStatementService with the user&apos;s first account" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should invoke menigaServiceUserCategories with the users Card." time="0.009" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should set the user category mappings on the $scope with the CategoryIds and Category Names returned from menigaServiceUserCategories" time="0.006" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Given A Category Id should get the corresponding Category Name" time="0.006" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="should set the list of statements returned from getTransactionsPage on the scope" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should not call getTransactionsPage on menigaTransactionsPageService when user accounts is undefined" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should not call getTransactionsPage on menigaTransactionsPageService when user has 0 accounts" time="0.003" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should not call getTransactionsPage on menigaTransactionsPageService when accountsService.list returns an empty response" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is resolved"/>
  <testcase name="Should not call getTransactionsPage on menigaTransactionsPageService" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController initialize when accountsService_list is rejected"/>
  <testcase name="Should Set The Closing Balance On The $scope As The First Transaction Balance. This Assumes The Transactions Are ordered in Descending Order i.e The Latest Transaction First" time="0.005" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions"/>
  <testcase name="Should call menigaTransactionsPageService.getTransactions with the account,pageIndex and statement type on the $scope" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions"/>
  <testcase name="Should set the returned transactions on the $scope" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions"/>
  <testcase name="Should Call $scope.getCategoryNameForCategoryId For Each transaction id and set the name on each of the transactions" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions"/>
  <testcase name="Should Calculate The Opening Balance Which Should Be The Last Transaction Minus The Last Transaction Amount. Positive Transaction Amount" time="0.005" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions Calculating Opening Balance"/>
  <testcase name="Should Calculate The Opening Balance Which Should Be The Last Transaction Minus The Last Transaction Amount. Negative Transaction Amount" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning A List Of Transactions With Transactions Calculating Opening Balance"/>
  <testcase name="The $scope.balances to an empty object " time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On invoking $scope_getTransactions  On Returning An Empty list of transactions"/>
  <testcase name="Should NOT call menigaTransactionsPageService.getTransactionsPage When menigaTransactionPageQuery is undefined" time="0.006" classname="MenigaStatement Controller Test MenigaTransactionsPageController When The menigaTransactionsPageQuery is not &quot;well formed&quot; i_e when either the account/monthsToGoBack are NOT set"/>
  <testcase name="Should NOT call menigaTransactionsPageService.getTransactionsPage When account is undefined" time="0.005" classname="MenigaStatement Controller Test MenigaTransactionsPageController When The menigaTransactionsPageQuery is not &quot;well formed&quot; i_e when either the account/monthsToGoBack are NOT set"/>
  <testcase name="Should NOT call menigaTransactionsPageService.getTransactionsPage When monthsToGoBack is undefined" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController When The menigaTransactionsPageQuery is not &quot;well formed&quot; i_e when either the account/monthsToGoBack are NOT set"/>
  <testcase name="Should NOT call menigaTransactionsPageService.getTransactionsPage When pageIndex is undefined" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController When The menigaTransactionsPageQuery is not &quot;well formed&quot; i_e when either the account/monthsToGoBack are NOT set"/>
  <testcase name="Should call $scope.getTransactions on changing the account" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On Changing The Account / number of months "/>
  <testcase name="Should call $scope.getTransactions on changing the numberOfMonths" time="0.003" classname="MenigaStatement Controller Test MenigaTransactionsPageController On Changing The Account / number of months "/>
  <testcase name="Should NOT $scope.getTransactions when the monthsToGoBack are changed to undefined" time="0.004" classname="MenigaStatement Controller Test MenigaTransactionsPageController On Changing The Account / number of months "/>
  <testcase name="should use the correct controller" time="0.007" classname="MenigaStatement Controller Test routing When menigaTransactionsHistoryFeature is toggled on when a provisional statement is to be shown"/>
  <testcase name="should use the correct template" time="0.004" classname="MenigaStatement Controller Test routing When menigaTransactionsHistoryFeature is toggled on when a provisional statement is to be shown"/>
  <testcase name="Should Filter On Category Name" time="0.004" classname="MenigaStatement Controller Test Transaction Filter"/>
  <testcase name="Should Filter On Amount" time="0.027" classname="MenigaStatement Controller Test Transaction Filter"/>
  <testcase name="Should Filter On Balance" time="0.004" classname="MenigaStatement Controller Test Transaction Filter"/>
  <testcase name="Should Filter On Date" time="0.007" classname="MenigaStatement Controller Test Transaction Filter"/>
  <testcase name="should use the correct controller " time="0.005" classname="statements routing When menigaTransactionsHistoryFeature is toggled off when a provisional statement is to be shown"/>
  <testcase name="should use the correct template" time="0.005" classname="statements routing When menigaTransactionsHistoryFeature is toggled off when a provisional statement is to be shown"/>
  <testcase name="should set the statementType from the search params" time="0.014" classname="statements StatementController"/>
  <testcase name="should default the statementType to provisional" time="0.017" classname="statements StatementController"/>
  <testcase name="should set statementDate to current date" time="0.007" classname="statements StatementController"/>
  <testcase name="should set error message" time="0.003" classname="statements StatementController when retrieving accounts fails"/>
  <testcase name="should default to first account" time="0.003" classname="statements StatementController with invalid account number"/>
  <testcase name="should default to first account" time="0.003" classname="statements StatementController with no account number"/>
  <testcase name="should set accounts" time="0.003" classname="statements StatementController with valid account number"/>
  <testcase name="should set account holder name if it exists on the account" time="0.003" classname="statements StatementController with valid account number"/>
  <testcase name="should set the account holder name to the card profile name if the account holder name does not exist on the account" time="0.004" classname="statements StatementController with valid account number"/>
  <testcase name="should set selected account" time="0.007" classname="statements StatementController with valid account number"/>
  <testcase name="should get statement types from the statement service" time="0.004" classname="statements StatementController with valid account number statementTypes"/>
  <testcase name="should find out whether the selected account has the pay from feature and expose this on the scope" time="0.004" classname="statements StatementController with valid account number hasPayFromFeature"/>
  <testcase name="should set loading to true before statements have loaded" time="0.003" classname="statements StatementController with valid account number"/>
  <testcase name="should set has next to false" time="0.004" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="should ask statement service for first page" time="0.003" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="statement should be undefined" time="0.004" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="retry should be undefined" time="0.003" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="opening balance should be undefined" time="0.003" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="closing balance should be undefined" time="0.004" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="last transaction date should be undefined" time="0.003" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="first transaction date should be undefined" time="0.003" classname="statements StatementController with valid account number when there are no transactions"/>
  <testcase name="should set has next to false" time="0.003" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="statement should be undefined" time="0.003" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="should set the error message" time="0.003" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="should set the retry function" time="0.004" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="loading should be false" time="0.003" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="should retry with arguments for first page" time="0.007" classname="statements StatementController with valid account number when there is a service error on the first page"/>
  <testcase name="should set has next to false" time="0.005" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="should set the error message" time="0.028" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="should set the retry function" time="0.004" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="loading should be false" time="0.003" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="should not set closing balance" time="0.003" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="should retry with arguments for the second page" time="0.004" classname="statements StatementController with valid account number when there is a service error on the second page"/>
  <testcase name="should set has next to false" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should only ask the service for one page" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should set loading to false" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should set statement to returned transactions" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should calculate opening balance" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should calculate closing balance" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should set the first day included in a statement" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should set the last day included in a statement" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions"/>
  <testcase name="should set statement to returned transactions" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions with zero opening and closing balance"/>
  <testcase name="should calculate opening balance" time="0.003" classname="statements StatementController with valid account number when there is one page of transactions with zero opening and closing balance"/>
  <testcase name="should calculate closing balance" time="0.007" classname="statements StatementController with valid account number when there is one page of transactions with zero opening and closing balance"/>
  <testcase name="should call the service for all pages" time="0.005" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should set statement to all pages" time="0.003" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should calculate opening balance based on first transaction" time="0.003" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should set first transaction date based on first transaction" time="0.004" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should calculate closing balance based on last transaction" time="0.003" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should set last transaction date based on last transaction" time="0.005" classname="statements StatementController with valid account number when there are multiple pages of transactions"/>
  <testcase name="should set has next to true when another page of transactions is available" time="0.006" classname="statements StatementController with valid account number when more transactions are loaded"/>
  <testcase name="should set has next to false when no more pages of transactions are available" time="0.003" classname="statements StatementController with valid account number when more transactions are loaded"/>
  <testcase name="should set has next to false when more pages indicator is not present (i.e. credit cards and home loans)" time="0.004" classname="statements StatementController with valid account number when more transactions are loaded"/>
  <testcase name="should set the last transaction date each time a page is loaded" time="0.004" classname="statements StatementController with valid account number when more transactions are loaded"/>
  <testcase name="should set the closing balance only after the last page is loaded" time="0.003" classname="statements StatementController with valid account number when more transactions are loaded"/>
  <testcase name="should change account being viewed upon changing select box" time="0.004" classname="statements StatementController with valid account number changeAccountTo"/>
  <testcase name="should reset the statementType search parameter" time="0.003" classname="statements StatementController with valid account number changeAccountTo"/>
  <testcase name="should redirect to payment confirmation history page for the given account" time="0.004" classname="statements StatementController with valid account number viewPaymentNotificationHistory"/>
  <testcase name="should update the search params" time="0.007" classname="statements StatementController with valid account number updateStatementType"/>
  <testcase name="should call the statement pdf generator" time="0.004" classname="statements StatementController with valid account number downloadPdf non ie and greater than ie 10"/>
  <testcase name="should call the statement pdf generator with account holder name, account number, statement start and end date and a query string" time="0.004" classname="statements StatementController with valid account number downloadPdf non ie and greater than ie 10"/>
  <testcase name="should call the statement pdf generator with account holder name, account number, statement start and end date and a query string" time="0.004" classname="statements StatementController with valid account number downloadPdf non ie and greater than ie 10"/>
  <testcase name="should filter by narrative stripping extra spaces" time="0.028" classname="statements StatementFilter"/>
  <testcase name="should filter by narrative" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by amount" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by amount stripping spaces" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by amount including zero padding" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by running balance" time="0.002" classname="statements StatementFilter"/>
  <testcase name="should filter by running balance stripping spaces" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by running balance including zero padding" time="0.004" classname="statements StatementFilter"/>
  <testcase name="should filter by formatted transaction date" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should filter by formatted transaction date case insensitive" time="0.003" classname="statements StatementFilter"/>
  <testcase name="should ask for current month&apos;s transactions by default" time="0.004" classname="meniga transactions page service get transactions page method"/>
  <testcase name="in the case of 1 month to go back, should ask for transactions from the beginning of last month" time="0.003" classname="meniga transactions page service get transactions page method given number of months to go back, we should ask for transactions from the start of that month"/>
  <testcase name="in the case of 10 months to go back, should ask for 10 months worth of transactions i.e if we were in the month of december should thus ask for transaction from the beginning of February " time="0.003" classname="meniga transactions page service get transactions page method given number of months to go back, we should ask for transactions from the start of that month"/>
  <testcase name="should resolve with the payload object in the response" time="0.003" classname="meniga transactions page service get transactions page method Given a response from the gateway When HTTP response status is 200 And SBG type header does NOT equal &apos;ERROR&apos;"/>
  <testcase name="should reject with a generic error message" time="0.003" classname="meniga transactions page service get transactions page method Given a response from the gateway When HTTP response status is 200 And SBG type header does equal &apos;ERROR&apos; And SBG code header equals &apos;9999&apos;"/>
  <testcase name="should reject with the error message from the gateway" time="0.003" classname="meniga transactions page service get transactions page method Given a response from the gateway When HTTP response status is 200 And SBG type header does equal &apos;ERROR&apos; And SBG code header does NOT equal &apos;9999&apos;"/>
  <testcase name="should reject with a generic error message" time="0.002" classname="meniga transactions page service get transactions page method Given a response from the gateway When HTTP response status is NOT 200"/>
  <testcase name="should use the current URL to create download URLs with really complex URL" time="0.003" classname="statement pdf generator lazy loading"/>
  <testcase name="should use the current URL to create download URLs with simple url" time="0.002" classname="statement pdf generator lazy loading"/>
  <testcase name="should use the current URL to create download URLs with simple example with main" time="0.005" classname="statement pdf generator lazy loading"/>
  <testcase name="should use existing pdfMaker if defined" time="0.002" classname="statement pdf generator lazy loading"/>
  <testcase name="should download the pdf created using pdfMake" time="0.003" classname="statement pdf generator"/>
  <testcase name="should be added" time="0.002" classname="statement pdf generator the standard bank logo"/>
  <testcase name="should have the correct size" time="0.002" classname="statement pdf generator the standard bank logo"/>
  <testcase name="should include customer care information" time="0.002" classname="statement pdf generator contact information"/>
  <testcase name="should include the website" time="0.001" classname="statement pdf generator contact information"/>
  <testcase name="should include today&apos;s date" time="0.002" classname="statement pdf generator contact information"/>
  <testcase name="should have a transaction history heading" time="0.001" classname="statement pdf generator"/>
  <testcase name="should include the account holder name heading" time="0.002" classname="statement pdf generator statement details headings"/>
  <testcase name="should include the account heading" time="0.002" classname="statement pdf generator statement details headings"/>
  <testcase name="should include the statement date range heading" time="0.002" classname="statement pdf generator statement details headings"/>
  <testcase name="should have a columnGap" time="0.001" classname="statement pdf generator statement details headings"/>
  <testcase name="should include the account holder name" time="0.005" classname="statement pdf generator statement details values"/>
  <testcase name="should include the account in uppercase" time="0.002" classname="statement pdf generator statement details values"/>
  <testcase name="should include the statement date range" time="0.002" classname="statement pdf generator statement details values"/>
  <testcase name="should display when filtering statements" time="0.002" classname="statement pdf generator statement details disclaimer note"/>
  <testcase name="should not display when not filtering" time="0.002" classname="statement pdf generator statement details disclaimer note"/>
  <testcase name="should add statement info row style" time="0.002" classname="statement pdf generator statement details styles"/>
  <testcase name="should add statement titles" time="0.001" classname="statement pdf generator statement details styles"/>
  <testcase name="should add amount titles" time="0.002" classname="statement pdf generator statement details styles"/>
  <testcase name="should add statement details row" time="0.002" classname="statement pdf generator statement details styles"/>
  <testcase name="should add contact info" time="0.002" classname="statement pdf generator statement details styles"/>
  <testcase name="should add statement values" time="0.001" classname="statement pdf generator statement details styles"/>
  <testcase name="should add amount values" time="0.002" classname="statement pdf generator statement details styles"/>
  <testcase name="should have bold column names on a gray background" time="0.002" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should have statement opening balance" time="0.003" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should not have statement opening balance" time="0.002" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should have statement closing balance" time="0.002" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should not have statement closing balance" time="0.002" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should have statement transactions" time="0.001" classname="statement pdf generator statement details transactions table body"/>
  <testcase name="should have a layout for the table" time="0.006" classname="statement pdf generator statement details layout"/>
  <testcase name="should have a layout for the table with no columns" time="0.002" classname="statement pdf generator statement details layout"/>
  <testcase name="should display footer details" time="0.003" classname="statement pdf generator statement details footer"/>
  <testcase name="should have font size" time="0.003" classname="statement pdf generator statement details footer"/>
  <testcase name="should retrieve provisional statement lines" time="0.046" classname="statements service statement"/>
  <testcase name="should use the statement type specified in the url for thirty day statements" time="0.004" classname="statements service statement"/>
  <testcase name="should use the statement type specified in the url for sixty day statements" time="0.004" classname="statements service statement"/>
  <testcase name="should use the statement type specified in the url for ninety day statements" time="0.004" classname="statements service statement"/>
  <testcase name="should use the statement type specified in the url for one hundred eighty day statements" time="0.004" classname="statements service statement"/>
  <testcase name="should default the statement type to provisional if a disallowed value is specified in the url" time="0.003" classname="statements service statement"/>
  <testcase name="should reject response if there is an application error" time="0.004" classname="statements service statement"/>
  <testcase name="should get the current selected account formal statement preferences" time="0.004" classname="statements service formal statement preferences"/>
  <testcase name="should reject when there is an error" time="0.005" classname="statements service formal statement preferences"/>
  <testcase name="should save the formal statement preferences" time="0.004" classname="statements service save formal statement preferences"/>
  <testcase name="should reject when there is an error" time="0.009" classname="statements service save formal statement preferences"/>
  <testcase name="should return statement types for credit card" time="0.005" classname="statements service getStatementTypesForAccount"/>
  <testcase name="should return statement types for everything else which is not credit card" time="0.004" classname="statements service getStatementTypesForAccount"/>
  <testcase name="should call the downloadPdf function when the download button is clicked" time="0.03" classname="statement template download statement"/>
  <testcase name="should not show the download button on mobile devices" time="0.026" classname="statement template download statement"/>
  <testcase name="should show the download button on desktops" time="0.023" classname="statement template download statement"/>
  <testcase name="should track download click" time="0.048" classname="statement template download statement"/>
  <testcase name="should not display update browser module" time="0.022" classname="statement template download statement"/>
  <testcase name="should call TargetedOffersService.getOffer" time="0.021" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should call TargetedOffersService.getTemplate with the product code in the offer" time="0.01" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should add the &apos;creditcard&apos; class to the container element" time="0.011" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should set the html content of the title bar to the template subject" time="0.01" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should set the html content of the body area to the template body" time="0.009" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should set the directive scope offer property to the offer returned from from TargetedOffersService" time="0.01" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should set the directive scope offer property to the offer returned from from TargetedOffersService" time="0.01" classname="Targeted Offer Banner Directive When a call me back offer is provided"/>
  <testcase name="should call TargetedOffersService.goToOffer with the offer&apos;s product code" time="0.017" classname="Targeted Offer Banner Directive When a call me back offer is provided When the user clicks Call me back"/>
  <testcase name="should call TargetedOffersService.goToOffer with the offer&apos;s product code" time="0.011" classname="Targeted Offer Banner Directive When a offer is provided that isn&apos;t a call me back offer When the user clicks Accept offer"/>
  <testcase name="should call TargetedOffersService.actionOffer with the product code and &apos;Not now&apos; as the action" time="0.01" classname="Targeted Offer Banner Directive When the user declines the offer"/>
  <testcase name="should add closing class when clicked" time="0.012" classname="Targeted Offer Banner Directive When the user declines the offer"/>
  <testcase name="should not display anything" time="0.009" classname="Targeted Offer Banner Directive When a blank offer is provided"/>
  <testcase name="should not display anything" time="0.009" classname="Targeted Offer Banner Directive When NO offer is provided"/>
  <testcase name="should not display anything" time="0.009" classname="Targeted Offer Banner Directive When NO template is provided"/>
  <testcase name="should not display service error message" time="0.056" classname="Targeted Offers Service getOffer all product types"/>
  <testcase name="should call targetedOffersGetOffer endpoint with customer&apos;s card number" time="0.004" classname="Targeted Offers Service getOffer all product types when offer exists"/>
  <testcase name="should return the offer from the gateway" time="0.009" classname="Targeted Offers Service getOffer all product types when offer exists"/>
  <testcase name="should NOT call targetedOffersGetOffer endpoint with customer&apos;s card when an offer for that card is already defined" time="0.007" classname="Targeted Offers Service getOffer all product types when offer exists caching behaviour"/>
  <testcase name="should reject the request with gateway error message" time="0.004" classname="Targeted Offers Service getOffer all product types when no offer exists"/>
  <testcase name="should reject the request with generic error message" time="0.004" classname="Targeted Offers Service getOffer all product types when a technical error occurs"/>
  <testcase name="should reject the request with generic error message" time="0.004" classname="Targeted Offers Service getOffer all product types when an unexpected error occurs"/>
  <testcase name="should reject the request with generic error message" time="0.004" classname="Targeted Offers Service getOffer all product types when the gateway rejects the request"/>
  <testcase name="should set the product type, accept button text, DCS product name and accept URL to the correct values" time="0.004" classname="Targeted Offers Service getOffer where offer is a Platinum credit card"/>
  <testcase name="should set the product type, accept button text, DCS product name and accept URL to the correct values" time="0.004" classname="Targeted Offers Service getOffer where offer is a Private banking current account product"/>
  <testcase name="should set the product type, accept button text, DCS product name and accept URL to the correct values" time="0.006" classname="Targeted Offers Service getOffer where offer is for a Graduate and Professional current account"/>
  <testcase name="should set the product type, accept button text, DCS product name and accept URL to the correct values" time="0.005" classname="Targeted Offers Service getOffer where offer is an unknown product"/>
  <testcase name="should call targetedOffersActionOffer endpoint with customer&apos;s card, product code and action" time="0.004" classname="Targeted Offers Service other methods actionOffer"/>
  <testcase name="should move the offer to the last actioned offer" time="0.004" classname="Targeted Offers Service other methods actionOffer caching behaviour"/>
  <testcase name="should call targetedOffersGetTemplate endpoint with product code" time="0.004" classname="Targeted Offers Service other methods getTemplate when template exists"/>
  <testcase name="should return the template from the gateway" time="0.004" classname="Targeted Offers Service other methods getTemplate when template exists"/>
  <testcase name="should reject the request with gateway error message" time="0.004" classname="Targeted Offers Service other methods getTemplate when no template exists"/>
  <testcase name="should reject the request with generic error message" time="0.003" classname="Targeted Offers Service other methods getTemplate when an unexpected error occurs"/>
  <testcase name="should reject the request with generic error message" time="0.004" classname="Targeted Offers Service other methods getTemplate when the gateway rejects the request"/>
  <testcase name="should call targetedOffersSubmitDetailsToDCS endpoint without idNumber" time="0.004" classname="Targeted Offers Service other methods submitDetailsToDCS"/>
  <testcase name="should call targetedOffersSubmitDetailsToDCS endpoint with product name customer details" time="0.004" classname="Targeted Offers Service other methods submitDetailsToDCS"/>
  <testcase name="should use the correct template" time="0.005" classname="Targeted Offers Call Me Back Form Controller Unit Test routes when at targeted offers call me back page"/>
  <testcase name="should use the correct controller" time="0.003" classname="Targeted Offers Call Me Back Form Controller Unit Test routes when at targeted offers call me back page"/>
  <testcase name="should get the customer details from the server with null values in the contact fields" time="0.005" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has no contact numbers"/>
  <testcase name="should set the call me back product name on the scope to the friendly product name which is mapped to the product code passed" time="0.004" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has no contact numbers"/>
  <testcase name="should set the customer record to the return vallue of CustomerService.getCustomer" time="0.004" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has no contact numbers"/>
  <testcase name="should get the customer details from the server" time="0.004" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has contact numbers"/>
  <testcase name="should set the scope property customer details to the customer returned from the server" time="0.004" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has contact numbers"/>
  <testcase name="should call TargetedOffersService.submitDetailsToDCS with the DCS product name and the customer model being edited" time="0.004" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has contact numbers submit"/>
  <testcase name="should display the modal indicating that the customer&apos;s details have been sent" time="0.005" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has contact numbers submit"/>
  <testcase name="navigate to the account summary page when the modal is closed" time="0.003" classname="Targeted Offers Call Me Back Form Controller Unit Test targetedOffersCallMeBackFormController Where customer has contact numbers submit"/>
  <testcase name="should use the correct template" time="0.003" classname="Targeted Offers Current Account Offer Controller Unit Test routes when at targeted offers current account location"/>
  <testcase name="should use the correct controller" time="0.028" classname="Targeted Offers Current Account Offer Controller Unit Test routes when at targeted offers current account location"/>
  <testcase name="should start current account application" time="0.005" classname="Targeted Offers Current Account Offer Controller Unit Test TargetedOfferCurrentAccountController"/>
  <testcase name="should create the flow with the current account application steps" time="0.004" classname="Targeted Offers Current Account Offer Controller Unit Test TargetedOfferCurrentAccountController"/>
  <testcase name="should have the flow header as Your Details" time="0.004" classname="Targeted Offers Current Account Offer Controller Unit Test TargetedOfferCurrentAccountController"/>
  <testcase name="should go to current account pre-screen page" time="0.004" classname="Targeted Offers Current Account Offer Controller Unit Test TargetedOfferCurrentAccountController"/>
  <testcase name="should call action of with Accept Offer Text" time="0.004" classname="Targeted Offers Current Account Offer Controller Unit Test TargetedOfferCurrentAccountController"/>
  <testcase name="should use the correct template" time="0.003" classname="Targeted Offers RCP Offer Controller Unit Test routes when at targeted offers RCP location"/>
  <testcase name="should use the correct controller" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test routes when at targeted offers RCP location"/>
  <testcase name="should start current account application" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test TargetedOfferRcpController"/>
  <testcase name="should create the flow with the current account application steps" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test TargetedOfferRcpController"/>
  <testcase name="should have the flow header as Your Details" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test TargetedOfferRcpController"/>
  <testcase name="should go to current account pre-screen page" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test TargetedOfferRcpController"/>
  <testcase name="should call action of with Accept Offer Text" time="0.004" classname="Targeted Offers RCP Offer Controller Unit Test TargetedOfferRcpController"/>
  <testcase name="should use the correct template" time="0.007" classname="TransactionDashboard routes"/>
  <testcase name="should be enabled linking to transfers by default" time="0.004" classname="TransactionDashboard TransactionDashboardController transfer link"/>
  <testcase name="should be disabled linking to dashboard if unable to transfer" time="0.003" classname="TransactionDashboard TransactionDashboardController transfer link"/>
  <testcase name="should have change EAP Limit menu item on Transact menu - manage" time="0.004" classname="TransactionDashboard TransactionDashboardController"/>
  <testcase name="should have create instant money menu item when toggled on" time="0.003" classname="TransactionDashboard TransactionDashboardController for instant money feature"/>
  <testcase name="should not have instant money menu item when toggled off" time="0.003" classname="TransactionDashboard TransactionDashboardController for instant money feature"/>
  <testcase name="should have international payment menu item when toggled on" time="0.003" classname="TransactionDashboard TransactionDashboardController for international payment feature"/>
  <testcase name="should not have international payment menu item when toggled off" time="0.003" classname="TransactionDashboard TransactionDashboardController for international payment feature"/>
  <testcase name="should have formal statement menu item" time="0.003" classname="TransactionDashboard TransactionDashboardController when viewFormalStatementList is toggled on"/>
  <testcase name="should disable the formal statement menu item if the user has no current or home loan accounts" time="0.003" classname="TransactionDashboard TransactionDashboardController when viewFormalStatementList is toggled on"/>
  <testcase name="should not disable the formal statement menu item if the user has current or home loan accounts" time="0.003" classname="TransactionDashboard TransactionDashboardController when viewFormalStatementList is toggled on"/>
  <testcase name="should not have formal statement menu item" time="0.003" classname="TransactionDashboard TransactionDashboardController when viewFormalStatementList is toggled off"/>
  <testcase name="should populate the main menu when user is authenticated" time="0.008" classname="Transaction"/>
  <testcase name="should not highlight its menu item when it is not active" time="0.004" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the once-off-payment page " time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is transfers page " time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is prepaid page " time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the otp verify and in add beneficiary flow" time="0.029" classname="Transaction"/>
  <testcase name="should not activate the menu if the current page is the otp verify " time="0.003" classname="Transaction"/>
  <testcase name="should populate the main menu when user is authenticated" time="0.003" classname="Transaction"/>
  <testcase name="should not highlight its menu item when it is not active" time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the add beneficiaries page " time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the view group details page " time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the view beneficiary details page" time="0.002" classname="Transaction"/>
  <testcase name="should activate the menu if the current page add beneficiaries group" time="0.003" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is the provisional statements page " time="0.002" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is payment confirmation history page " time="0.002" classname="Transaction"/>
  <testcase name="should activate the menu if the current page is formal statement" time="0.003" classname="Transaction"/>
  <testcase name="should allow R0.01 from CURRENT to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250 from CURRENT to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250.01 from CURRENT to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R1000 from HOME_LOAN to ALL accounts" time="0.006" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R2000 from HOME_LOAN to ALL accounts" time="0.003" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R0.01 from CREDIT_CARD to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250 from CREDIT_CARD to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250.01 from CREDIT_CARD to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R100 from SAVINGS to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R100.01 from SAVINGS to ALL accounts without NOTICE" time="0.003" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250 from SAVINGS to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R250.01 from SAVINGS to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R100 from RCP to ALL accounts without NOTICE" time="0.003" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R200 from RCP to ALL accounts without NOTICE" time="0.003" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R300 from RCP to NOTICE" time="0.003" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should allow R400 from RCP to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R249.99 from CURRENT to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R999.99 from HOME_LOAN to ALL accounts" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R1000.01 from HOME_LOAN to ALL accounts" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R249.99 from CREDIT_CARD to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R99.99 from SAVINGS to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R249.99 from SAVINGS to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R99.99 from RCP to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R200 from RCP to NOTICE" time="0.005" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R299.99 from RCP to NOTICE" time="0.001" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should not allow R300.01 from RCP to NOTICE" time="0.002" classname="TransferLimitsService validate internal transfer amount"/>
  <testcase name="should show hint if transfer from CURRENT to NOTICE" time="0.002" classname="TransferLimitsService validate hint"/>
  <testcase name="should not show hint if transfer from CURRENT to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from HOME_LOAN to ALL accounts" time="0.002" classname="TransferLimitsService validate hint"/>
  <testcase name="should not show hint if transfer from CREDIT_CARD to ALL accounts without NOTICE" time="0.001" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from CREDIT_CARD to NOTICE" time="0.001" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from SAVINGS to ALL accounts without NOTICE" time="0.003" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from SAVINGS to NOTICE" time="0.001" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from RCP to ALL accounts without NOTICE" time="0.002" classname="TransferLimitsService validate hint"/>
  <testcase name="should show hint if transfer from RCP to NOTICE" time="0.001" classname="TransferLimitsService validate hint"/>
  <testcase name="should invoke the transfer service and respond with a success" time="0.005" classname="transfer service "/>
  <testcase name="should invoke the transfer service and respond with a system failure if the service returns a 500" time="0.004" classname="transfer service "/>
  <testcase name="should invoke the transfer service and fail if the service returns a failed response code" time="0.004" classname="transfer service "/>
  <testcase name="should use the accounts list to get the transfer to and from accounts" time="0.004" classname="transfer service  transfer possible"/>
  <testcase name="should be false with no from or to accounts" time="0.004" classname="transfer service  transfer possible"/>
  <testcase name="should be false with no from accounts" time="0.009" classname="transfer service  transfer possible"/>
  <testcase name="should be false with no to accounts" time="0.031" classname="transfer service  transfer possible"/>
  <testcase name="should be false with one from and one to account, both the same" time="0.004" classname="transfer service  transfer possible"/>
  <testcase name="should be true with one from and one different to account" time="0.004" classname="transfer service  transfer possible"/>
  <testcase name="should be true with many from and one to account" time="0.003" classname="transfer service  transfer possible"/>
  <testcase name="should be true with one from and many to accounts" time="0.003" classname="transfer service  transfer possible"/>
  <testcase name="should use the correct controller" time="0.004" classname="Transfers routes when a transfer is to be made"/>
  <testcase name="should create the flow" time="0.009" classname="Transfers controller initialize"/>
  <testcase name="should fetch a list of accounts" time="0.008" classname="Transfers controller initialize"/>
  <testcase name="should add a label function to each account" time="0.008" classname="Transfers controller initialize"/>
  <testcase name="should set true when service returns true" time="0.008" classname="Transfers controller initialize transfer possible"/>
  <testcase name="should set false when service returns false" time="0.008" classname="Transfers controller initialize transfer possible"/>
  <testcase name="should know when to highlight the available balance" time="0.008" classname="Transfers controller limits"/>
  <testcase name="should know when to enforce the available balance" time="0.007" classname="Transfers controller limits"/>
  <testcase name="should know when to hint for correct transfer amounts" time="0.012" classname="Transfers controller limits"/>
  <testcase name="should know watched elements and scope to hint" time="0.009" classname="Transfers controller limits"/>
  <testcase name="should know editing is true when the controller is initialized" time="0.008" classname="Transfers controller #editing"/>
  <testcase name="should know confirming is true after proceed" time="0.008" classname="Transfers controller #confirming"/>
  <testcase name="should know finished is true after transfer" time="0.008" classname="Transfers controller #finished"/>
  <testcase name="should ensure that the transfer.from object is defined " time="0.008" classname="Transfers controller account lists"/>
  <testcase name="should ensure that the transfer.to object is defined " time="0.008" classname="Transfers controller account lists"/>
  <testcase name="should filter accounts with transferFrom feature" time="0.008" classname="Transfers controller account lists"/>
  <testcase name="should filter accounts with transferTo feature" time="0.008" classname="Transfers controller account lists"/>
  <testcase name="should change &quot;From&quot; available balance when selected account changes" time="0.031" classname="Transfers controller available balance for capture details"/>
  <testcase name="should change &quot;To&quot; available balance when selected account changes" time="0.007" classname="Transfers controller available balance for capture details"/>
  <testcase name="should not change &quot;From&quot; available balance when transfer fails" time="0.007" classname="Transfers controller available balance for confirm details"/>
  <testcase name="should not change &quot;To&quot; available balance when transfer fails" time="0.008" classname="Transfers controller available balance for confirm details"/>
  <testcase name="should adjust &quot;From&quot; available balance when transfer is successful" time="0.008" classname="Transfers controller available balance for confirm details"/>
  <testcase name="should adjust &quot;To&quot; available balance when transfer is successful" time="0.013" classname="Transfers controller available balance for confirm details"/>
  <testcase name="should navigate to the confirm page" time="0.008" classname="Transfers controller proceed()"/>
  <testcase name="should not in edit mode" time="0.008" classname="Transfers controller proceed()"/>
  <testcase name="should enable editing" time="0.008" classname="Transfers controller modify()"/>
  <testcase name="should set flag indicating success" time="0.008" classname="Transfers controller transfer() when successful"/>
  <testcase name="should set the error flag and message when an error occurs" time="0.008" classname="Transfers controller transfer() when unsuccessful"/>
  <testcase name="should get undefined when not authenticated" time="0.001" classname="Trusteer crazy function on window"/>
  <testcase name="should get username from user profile when authenticated" time="0.001" classname="Trusteer crazy function on window"/>
  <testcase name="should use the correct controller " time="0.003" classname="Version routes"/>
  <testcase name="should use the correct template " time="0.003" classname="Version routes"/>
  <testcase name="should indicate that the route can be accessed without authentication" time="0.007" classname="Version routes"/>
  <testcase name="should set the gateway, front end and deployment versions on the scope when successful" time="0.004" classname="Version VersionController"/>
  <testcase name="should set gateway and front end errors on the scope when unsuccessful" time="0.004" classname="Version VersionController"/>
  <testcase name="display of message when invalid currency format - current date" time="0.085" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when exceeding bank currency limit - current date" time="0.059" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when exceeding available balance, but less than monthly limit " time="0.057" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when exceeding available balance AND exceeding monthly limit" time="0.079" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when exceeding available monthly transfer limit, but less than available balance" time="0.059" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when exceeding available monthly transfer limit AND exceeding available balance" time="0.055" classname="INTEGRATION - Pay Once Off amount validation display validation messages"/>
  <testcase name="display of message when invalid currency format - current date" time="0.211" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when invalid currency format - future date" time="0.157" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding bank currency limit - current date" time="0.17" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding bank currency limit - future date" time="0.171" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding available balance, but less than monthly limit " time="0.157" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding available balance AND exceeding monthly limit" time="0.193" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding available monthly transfer limit, but less than available balance" time="0.154" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding available monthly transfer limit AND exceeding available balance" time="0.129" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding monthly transfer limit for future dated payments in the same month" time="0.173" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding monthly transfer limit for future dated payments in different month" time="0.171" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when exceeding available transfer limit for future dated payments in the different month" time="0.154" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between current date to date in next month - available balance" time="0.192" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between date in next month to current date - available balance" time="0.2" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between current date to date in next month - monthly limit" time="0.171" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between date in next month to current date - monthly limit" time="0.18" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between date in same month to date in next month" time="0.177" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="should switch validation messages when changing between invalid amount and invalid format" time="0.192" classname="INTEGRATION - Pay Single Beneficiary amount validation display validation messages"/>
  <testcase name="display of message when invalid format" time="0.074" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when amount of zero" time="0.054" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when invalid amount" time="0.054" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &lt; minimum prepaid purchase limit" time="0.093" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &gt; prepaid purchase limit, &gt; available withdrawal limit, &gt; available balance," time="0.056" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &gt; prepaid purchase limit, &gt; available withdrawal limit, &lt; available balance," time="0.093" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &gt; prepaid purchase limit, &lt; available withdrawal limit, &gt; available balance," time="0.054" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &gt; prepaid purchase limit, &lt; available withdrawal limit, &lt; available balance," time="0.095" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &lt; prepaid purchase limit, &gt; available withdrawal limit, &gt; available balance," time="0.053" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &lt; prepaid purchase limit, &gt; available withdrawal limit, &lt; available balance," time="0.054" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <testcase name="display of message when &lt; prepaid purchase limit, &lt; available withdrawal limit, &gt; available balance," time="0.1" classname="INTEGRATION - Prepaid Recharge Beneficiary with Mobile amount validation display validation messages"/>
  <system-out><![CDATA[
]]></system-out>
  <system-err/>
</testsuite>
